digraph G {
    page="40,60"; 
    ratio=auto;
    rankdir=LR;
    fontsize=10;
   "FSharp.Control.AsyncSeq" -> { rank=none; "FSharp.Control.AsyncExtensions"; "FSharp.Control.Observable" }
   "FSharp.Control.AsyncSeqExtensions" -> { rank=none; "FSharp.Control.AsyncSeq" }
   "FSharp.Control.ObservableExtensions" -> { rank=none; "FSharp.Control.Observable" }
   "FSharp.Control.ReplaySubject`1" -> { rank=none; "FSharp.Control.BufferAgent" }
   "FSharp.Control.Seq" -> { rank=none; "FSharp.Control.AsyncSeq" }
   "FSharp.IO.IOExtensions" -> { rank=none; "FSharp.Control.AsyncSeq"; "FSharp.Control.AsyncSeqExtensions" }
   "FSharpx.Choice" -> { rank=none; "FSharpx.Option" }
   "FSharpx.Collections.ByteStringModule" -> { rank=none; "FSharpx.Collections.ByteString" }
   "FSharpx.Collections.PriorityQueue" -> { rank=none; "FSharpx.Collections.HeapModule" }
   "FSharpx.Collections.RandomAccessListModule" -> { rank=none; "FSharpx.Collections.NodeR" }
   "FSharpx.Collections.RandomAccessList`1" -> { rank=none; "FSharpx.Collections.NodeR" }
   "FSharpx.Collections.TransientVect`1" -> { rank=none; "FSharpx.Collections.NodeR" }
   "FSharpx.Collections.TransientVector`1" -> { rank=none; "FSharpx.Collections.Node" }
   "FSharpx.Collections.VectorModule" -> { rank=none; "FSharpx.Collections.Node" }
   "FSharpx.Collections.Vector`1" -> { rank=none; "FSharpx.Collections.Node" }
   "FSharpx.Coroutine" -> { rank=none; "FSharpx.ContinuationModule" }
   "FSharpx.DataStructures.BKTree" -> { rank=none; "FSharpx.Collections.ByteString"; "FSharpx.Collections.List"; "FSharpx.DataStructures.IntMap" }
   "FSharpx.DataStructures.BKTree`1" -> { rank=none; "FSharpx.DataStructures.IntMap" }
   "FSharpx.DataStructures.BankersDequeModule" -> { rank=none; "FSharpx.Collections.LazyListModule" }
   "FSharpx.DataStructures.BankersDeque`1" -> { rank=none; "FSharpx.Collections.LazyListModule"; "FSharpx.DataStructures.Exceptions"; "FSharpx.DataStructures.LazyListHelpr" }
   "FSharpx.DataStructures.BankersQueueModule" -> { rank=none; "FSharpx.Collections.LazyListModule" }
   "FSharpx.DataStructures.BankersQueue`1" -> { rank=none; "FSharpx.Collections.LazyListModule"; "FSharpx.DataStructures.Exceptions"; "FSharpx.DataStructures.LazyListHelpr" }
   "FSharpx.DataStructures.BatchedDeque`1" -> { rank=none; "FSharpx.DataStructures.Exceptions"; "FSharpx.DataStructures.ListHelpr" }
   "FSharpx.DataStructures.BatchedQueue`1" -> { rank=none; "FSharpx.DataStructures.Exceptions" }
   "FSharpx.DataStructures.BinaryRandomAccessList`1" -> { rank=none; "FSharpx.DataStructures.Exceptions" }
   "FSharpx.DataStructures.BootstrappedQueue" -> { rank=none; "FSharpx.DataStructures.Exceptions" }
   "FSharpx.DataStructures.Deque`1" -> { rank=none; "FSharpx.DataStructures.Exceptions"; "FSharpx.DataStructures.ListHelpr" }
   "FSharpx.DataStructures.HoodMelvilleQueue`1" -> { rank=none; "FSharpx.DataStructures.Exceptions" }
   "FSharpx.DataStructures.ImplicitQueue" -> { rank=none; "FSharpx.DataStructures.Exceptions" }
   "FSharpx.DataStructures.LazyListHelpr" -> { rank=none; "FSharpx.Collections.LazyListModule" }
   "FSharpx.DataStructures.PhysicistQueue`1" -> { rank=none; "FSharpx.DataStructures.Exceptions" }
   "FSharpx.DataStructures.RealTimeDeque" -> { rank=none; "FSharpx.Collections.LazyListModule" }
   "FSharpx.DataStructures.RealTimeDeque`1" -> { rank=none; "FSharpx.Collections.LazyListModule"; "FSharpx.DataStructures.Exceptions"; "FSharpx.DataStructures.LazyListHelpr" }
   "FSharpx.DataStructures.RealTimeQueue" -> { rank=none; "FSharpx.Collections.LazyListModule"; "FSharpx.DataStructures.Exceptions" }
   "FSharpx.DataStructures.RoseTreeModule" -> { rank=none; "FSharpx.Collections.LazyListModule"; "FSharpx.Collections.Seq" }
   "FSharpx.DataStructures.Vector" -> { rank=none; "FSharpx.DataStructures.Exceptions" }
   "FSharpx.Dictionary" -> { rank=none; "FSharpx.Collections.DictionaryModule" }
   "FSharpx.EnumerableEx" -> { rank=none; "FSharpx.Collections.Seq" }
   "FSharpx.FSharpChoice" -> { rank=none; "FSharpx.Choice"; "FSharpx.Option"; "FSharpx.Validation" }
   "FSharpx.FSharpOption" -> { rank=none; "FSharpx.Prelude" }
   "FSharpx.IterateeModule" -> { rank=none; "FSharp.Control.AsyncSeq"; "FSharpx.Collections.ByteString"; "FSharpx.Collections.ByteStringModule"; "FSharpx.Collections.List"; "FSharpx.Prelude" }
   "FSharpx.JSON" -> { rank=none; "FSharpx.Pluralizer"; "FSharpx.Strings" }
   "FSharpx.LensModule" -> { rank=none; "FSharpx.State" }
   "FSharpx.Linq.QuotationEvaluator" -> { rank=none; "FSharpx.Linq.QuotationEvaluation" }
   "FSharpx.Linq.QuotationHelpers" -> { rank=none; "FSharpx.Linq.QuotationEvaluation" }
   "FSharpx.NonEmptyListEx" -> { rank=none; "FSharpx.Collections.NonEmptyList" }
   "FSharpx.Nullable" -> { rank=none; "FSharpx.Option" }
   "FSharpx.RegexModule" -> { rank=none; "FSharpx.ActiveMatch" }
   "FSharpx.RoseTree" -> { rank=none; "FSharpx.Collections.LazyListModule"; "FSharpx.DataStructures.RoseTreeModule"; "FSharpx.FSharpFunc" }
   "FSharpx.Strings" -> { rank=none; "FSharpx.Pluralizer" }
   "FSharpx.Undo" -> { rank=none; "FSharpx.State" }
   "FSharpx.Validation" -> { rank=none; "FSharpx.Choice"; "FSharpx.Collections.NonEmptyList" }
   }

digraph G {
    page="40,60"; 
    ratio=auto;
    rankdir=LR;
    fontsize=10;
   "NUnit.Framework.Constraints.AllItemsConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter"; "NUnit.Framework.Constraints.PrefixConstraint" }
   "NUnit.Framework.Constraints.AllOperator" -> { rank=none; "NUnit.Framework.Constraints.AllItemsConstraint"; "NUnit.Framework.Constraints.CollectionOperator"; "NUnit.Framework.Constraints.Constraint" }
   "NUnit.Framework.Constraints.AndConstraint" -> { rank=none; "NUnit.Framework.Constraints.BinaryConstraint"; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter" }
   "NUnit.Framework.Constraints.AndOperator" -> { rank=none; "NUnit.Framework.Constraints.AndConstraint"; "NUnit.Framework.Constraints.BinaryOperator"; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.ConstraintOperator" }
   "NUnit.Framework.Constraints.AssignableFromConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter"; "NUnit.Framework.Constraints.TypeConstraint" }
   "NUnit.Framework.Constraints.AssignableToConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter"; "NUnit.Framework.Constraints.TypeConstraint" }
   "NUnit.Framework.Constraints.AttributeConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.EqualConstraint"; "NUnit.Framework.Constraints.MessageWriter"; "NUnit.Framework.Constraints.PrefixConstraint" }
   "NUnit.Framework.Constraints.AttributeExistsConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter" }
   "NUnit.Framework.Constraints.AttributeOperator" -> { rank=none; "NUnit.Framework.Constraints.AttributeConstraint"; "NUnit.Framework.Constraints.AttributeExistsConstraint"; "NUnit.Framework.Constraints.BinaryOperator"; "NUnit.Framework.Constraints.ConstraintBuilder"; "NUnit.Framework.Constraints.ConstraintOperator"; "NUnit.Framework.Constraints.SelfResolvingOperator" }
   "NUnit.Framework.Constraints.BasicConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter" }
   "NUnit.Framework.Constraints.BinaryConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint" }
   "NUnit.Framework.Constraints.BinaryOperator" -> { rank=none; "NUnit.Framework.Constraints.CollectionOperator"; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.ConstraintBuilder"; "NUnit.Framework.Constraints.ConstraintOperator" }
   "NUnit.Framework.Constraints.BinarySerializableConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter" }
   "NUnit.Framework.Constraints.CollectionConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint" }
   "NUnit.Framework.Constraints.CollectionContainsConstraint" -> { rank=none; "NUnit.Framework.Constraints.CollectionItemsEqualConstraint"; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter" }
   "NUnit.Framework.Constraints.CollectionEquivalentConstraint" -> { rank=none; "NUnit.Framework.Constraints.CollectionItemsEqualConstraint"; "NUnit.Framework.Constraints.CollectionTally"; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter" }
   "NUnit.Framework.Constraints.CollectionItemsEqualConstraint" -> { rank=none; "NUnit.Framework.Constraints.CollectionConstraint"; "NUnit.Framework.Constraints.CollectionTally"; "NUnit.Framework.Constraints.NUnitEqualityComparer" }
   "NUnit.Framework.Constraints.CollectionOperator" -> { rank=none; "NUnit.Framework.Constraints.ConstraintOperator"; "NUnit.Framework.Constraints.PrefixOperator" }
   "NUnit.Framework.Constraints.CollectionOrderedConstraint" -> { rank=none; "NUnit.Framework.Constraints.CollectionConstraint"; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter" }
   "NUnit.Framework.Constraints.CollectionSubsetConstraint" -> { rank=none; "NUnit.Framework.Constraints.CollectionItemsEqualConstraint"; "NUnit.Framework.Constraints.CollectionTally"; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter" }
   "NUnit.Framework.Constraints.CollectionTally" -> { rank=none; "NUnit.Framework.Constraints.NUnitEqualityComparer" }
   "NUnit.Framework.Constraints.ComparisonConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint" }
   "NUnit.Framework.Constraints.Constraint" -> { rank=none; "NUnit.Framework.Constraints.AndConstraint"; "NUnit.Framework.Constraints.AndOperator"; "NUnit.Framework.Constraints.ConstraintBuilder"; "NUnit.Framework.Constraints.ConstraintExpression"; "NUnit.Framework.Constraints.DelayedConstraint"; "NUnit.Framework.Constraints.IResolveConstraint"; "NUnit.Framework.Constraints.MessageWriter"; "NUnit.Framework.Constraints.NotConstraint"; "NUnit.Framework.Constraints.NullConstraint"; "NUnit.Framework.Constraints.OrConstraint"; "NUnit.Framework.Constraints.OrOperator" }
   "NUnit.Framework.Constraints.ConstraintBuilder" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.ConstraintOperator"; "NUnit.Framework.Constraints.SelfResolvingOperator" }
   "NUnit.Framework.Constraints.ConstraintExpression" -> { rank=none; "NUnit.Framework.Constraints.AllOperator"; "NUnit.Framework.Constraints.AssignableFromConstraint"; "NUnit.Framework.Constraints.AssignableToConstraint"; "NUnit.Framework.Constraints.AttributeOperator"; "NUnit.Framework.Constraints.BinarySerializableConstraint"; "NUnit.Framework.Constraints.CollectionContainsConstraint"; "NUnit.Framework.Constraints.CollectionEquivalentConstraint"; "NUnit.Framework.Constraints.CollectionOrderedConstraint"; "NUnit.Framework.Constraints.CollectionSubsetConstraint"; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.ConstraintBuilder"; "NUnit.Framework.Constraints.ConstraintExpressionBase"; "NUnit.Framework.Constraints.ContainsConstraint"; "NUnit.Framework.Constraints.EmptyConstraint"; "NUnit.Framework.Constraints.EndsWithConstraint"; "NUnit.Framework.Constraints.EqualConstraint"; "NUnit.Framework.Constraints.ExactCountOperator"; "NUnit.Framework.Constraints.ExactTypeConstraint"; "NUnit.Framework.Constraints.FalseConstraint"; "NUnit.Framework.Constraints.GreaterThanConstraint"; "NUnit.Framework.Constraints.GreaterThanOrEqualConstraint"; "NUnit.Framework.Constraints.InstanceOfTypeConstraint"; "NUnit.Framework.Constraints.LessThanConstraint"; "NUnit.Framework.Constraints.LessThanOrEqualConstraint"; "NUnit.Framework.Constraints.NaNConstraint"; "NUnit.Framework.Constraints.NoneOperator"; "NUnit.Framework.Constraints.NotOperator"; "NUnit.Framework.Constraints.NullConstraint"; "NUnit.Framework.Constraints.PropOperator"; "NUnit.Framework.Constraints.RegexConstraint"; "NUnit.Framework.Constraints.ResolvableConstraintExpression"; "NUnit.Framework.Constraints.SameAsConstraint"; "NUnit.Framework.Constraints.SamePathConstraint"; "NUnit.Framework.Constraints.SamePathOrUnderConstraint"; "NUnit.Framework.Constraints.SomeOperator"; "NUnit.Framework.Constraints.StartsWithConstraint"; "NUnit.Framework.Constraints.SubPathConstraint"; "NUnit.Framework.Constraints.SubstringConstraint"; "NUnit.Framework.Constraints.TrueConstraint"; "NUnit.Framework.Constraints.UniqueItemsConstraint"; "NUnit.Framework.Constraints.WithOperator"; "NUnit.Framework.Constraints.XmlSerializableConstraint" }
   "NUnit.Framework.Constraints.ConstraintExpressionBase" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.ConstraintBuilder"; "NUnit.Framework.Constraints.ConstraintExpression"; "NUnit.Framework.Constraints.ConstraintOperator"; "NUnit.Framework.Constraints.ResolvableConstraintExpression"; "NUnit.Framework.Constraints.SelfResolvingOperator" }
   "NUnit.Framework.Constraints.ConstraintOperator" -> { rank=none; "NUnit.Framework.Constraints.ConstraintBuilder" }
   "NUnit.Framework.Constraints.ContainsConstraint" -> { rank=none; "NUnit.Framework.Constraints.CollectionContainsConstraint"; "NUnit.Framework.Constraints.CollectionItemsEqualConstraint"; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter"; "NUnit.Framework.Constraints.NUnitEqualityComparer"; "NUnit.Framework.Constraints.StringConstraint"; "NUnit.Framework.Constraints.SubstringConstraint" }
   "NUnit.Framework.Constraints.DelayedConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter"; "NUnit.Framework.Constraints.PrefixConstraint" }
   "NUnit.Framework.Constraints.EmptyCollectionConstraint" -> { rank=none; "NUnit.Framework.Constraints.CollectionConstraint"; "NUnit.Framework.Constraints.MessageWriter" }
   "NUnit.Framework.Constraints.EmptyConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.EmptyCollectionConstraint"; "NUnit.Framework.Constraints.EmptyDirectoryContraint"; "NUnit.Framework.Constraints.EmptyStringConstraint"; "NUnit.Framework.Constraints.MessageWriter" }
   "NUnit.Framework.Constraints.EmptyDirectoryContraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter" }
   "NUnit.Framework.Constraints.EmptyStringConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter" }
   "NUnit.Framework.Constraints.EndsWithConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter"; "NUnit.Framework.Constraints.StringConstraint" }
   "NUnit.Framework.Constraints.EqualConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter"; "NUnit.Framework.Constraints.NUnitEqualityComparer" }
   "NUnit.Framework.Constraints.ExactCountConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter"; "NUnit.Framework.Constraints.PrefixConstraint" }
   "NUnit.Framework.Constraints.ExactCountOperator" -> { rank=none; "NUnit.Framework.Constraints.CollectionOperator"; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.ExactCountConstraint" }
   "NUnit.Framework.Constraints.ExactTypeConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter"; "NUnit.Framework.Constraints.TypeConstraint" }
   "NUnit.Framework.Constraints.FalseConstraint" -> { rank=none; "NUnit.Framework.Constraints.BasicConstraint" }
   "NUnit.Framework.Constraints.GreaterThanConstraint" -> { rank=none; "NUnit.Framework.Constraints.ComparisonConstraint"; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter" }
   "NUnit.Framework.Constraints.GreaterThanOrEqualConstraint" -> { rank=none; "NUnit.Framework.Constraints.ComparisonConstraint"; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter" }
   "NUnit.Framework.Constraints.IResolveConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint" }
   "NUnit.Framework.Constraints.InstanceOfTypeConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter"; "NUnit.Framework.Constraints.TypeConstraint" }
   "NUnit.Framework.Constraints.LessThanConstraint" -> { rank=none; "NUnit.Framework.Constraints.ComparisonConstraint"; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter" }
   "NUnit.Framework.Constraints.LessThanOrEqualConstraint" -> { rank=none; "NUnit.Framework.Constraints.ComparisonConstraint"; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter" }
   "NUnit.Framework.Constraints.MessageWriter" -> { rank=none; "NUnit.Framework.Constraints.Constraint" }
   "NUnit.Framework.Constraints.NUnitEqualityComparer" -> { rank=none; "NUnit.Framework.Constraints.CollectionTally"; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.SamePathConstraint" }
   "NUnit.Framework.Constraints.NaNConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter" }
   "NUnit.Framework.Constraints.NoItemConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter"; "NUnit.Framework.Constraints.PrefixConstraint" }
   "NUnit.Framework.Constraints.NoneOperator" -> { rank=none; "NUnit.Framework.Constraints.CollectionOperator"; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.NoItemConstraint" }
   "NUnit.Framework.Constraints.NotConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter"; "NUnit.Framework.Constraints.PrefixConstraint" }
   "NUnit.Framework.Constraints.NotOperator" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.ConstraintOperator"; "NUnit.Framework.Constraints.NotConstraint"; "NUnit.Framework.Constraints.PrefixOperator" }
   "NUnit.Framework.Constraints.NullConstraint" -> { rank=none; "NUnit.Framework.Constraints.BasicConstraint" }
   "NUnit.Framework.Constraints.Numerics" -> { rank=none; "NUnit.Framework.Constraints.Tolerance" }
   "NUnit.Framework.Constraints.OrConstraint" -> { rank=none; "NUnit.Framework.Constraints.BinaryConstraint"; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter" }
   "NUnit.Framework.Constraints.OrOperator" -> { rank=none; "NUnit.Framework.Constraints.BinaryOperator"; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.ConstraintOperator"; "NUnit.Framework.Constraints.OrConstraint" }
   "NUnit.Framework.Constraints.PathConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint" }
   "NUnit.Framework.Constraints.PrefixConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.IResolveConstraint" }
   "NUnit.Framework.Constraints.PrefixOperator" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.ConstraintBuilder"; "NUnit.Framework.Constraints.ConstraintOperator" }
   "NUnit.Framework.Constraints.PropOperator" -> { rank=none; "NUnit.Framework.Constraints.BinaryOperator"; "NUnit.Framework.Constraints.ConstraintBuilder"; "NUnit.Framework.Constraints.ConstraintOperator"; "NUnit.Framework.Constraints.PropertyConstraint"; "NUnit.Framework.Constraints.PropertyExistsConstraint"; "NUnit.Framework.Constraints.SelfResolvingOperator" }
   "NUnit.Framework.Constraints.PropertyConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.EqualConstraint"; "NUnit.Framework.Constraints.MessageWriter"; "NUnit.Framework.Constraints.PrefixConstraint" }
   "NUnit.Framework.Constraints.PropertyExistsConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter" }
   "NUnit.Framework.Constraints.RegexConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter"; "NUnit.Framework.Constraints.StringConstraint" }
   "NUnit.Framework.Constraints.ResolvableConstraintExpression" -> { rank=none; "NUnit.Framework.Constraints.AndConstraint"; "NUnit.Framework.Constraints.AndOperator"; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.ConstraintBuilder"; "NUnit.Framework.Constraints.ConstraintExpression"; "NUnit.Framework.Constraints.ConstraintExpressionBase"; "NUnit.Framework.Constraints.IResolveConstraint"; "NUnit.Framework.Constraints.NotConstraint"; "NUnit.Framework.Constraints.NullConstraint"; "NUnit.Framework.Constraints.OrConstraint"; "NUnit.Framework.Constraints.OrOperator" }
   "NUnit.Framework.Constraints.SameAsConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter" }
   "NUnit.Framework.Constraints.SamePathConstraint" -> { rank=none; "NUnit.Framework.Constraints.MessageWriter"; "NUnit.Framework.Constraints.PathConstraint" }
   "NUnit.Framework.Constraints.SamePathOrUnderConstraint" -> { rank=none; "NUnit.Framework.Constraints.MessageWriter"; "NUnit.Framework.Constraints.PathConstraint" }
   "NUnit.Framework.Constraints.SelfResolvingOperator" -> { rank=none; "NUnit.Framework.Constraints.ConstraintOperator" }
   "NUnit.Framework.Constraints.SomeItemsConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter"; "NUnit.Framework.Constraints.PrefixConstraint" }
   "NUnit.Framework.Constraints.SomeOperator" -> { rank=none; "NUnit.Framework.Constraints.CollectionOperator"; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.SomeItemsConstraint" }
   "NUnit.Framework.Constraints.StartsWithConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter"; "NUnit.Framework.Constraints.StringConstraint" }
   "NUnit.Framework.Constraints.StringConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint" }
   "NUnit.Framework.Constraints.SubPathConstraint" -> { rank=none; "NUnit.Framework.Constraints.MessageWriter"; "NUnit.Framework.Constraints.PathConstraint" }
   "NUnit.Framework.Constraints.SubstringConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter"; "NUnit.Framework.Constraints.StringConstraint" }
   "NUnit.Framework.Constraints.Tolerance" -> { rank=none; "NUnit.Framework.Constraints.Numerics" }
   "NUnit.Framework.Constraints.TrueConstraint" -> { rank=none; "NUnit.Framework.Constraints.BasicConstraint" }
   "NUnit.Framework.Constraints.TypeConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter" }
   "NUnit.Framework.Constraints.UniqueItemsConstraint" -> { rank=none; "NUnit.Framework.Constraints.CollectionItemsEqualConstraint"; "NUnit.Framework.Constraints.MessageWriter" }
   "NUnit.Framework.Constraints.WithOperator" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.ConstraintOperator"; "NUnit.Framework.Constraints.PrefixOperator" }
   "NUnit.Framework.Constraints.XmlSerializableConstraint" -> { rank=none; "NUnit.Framework.Constraints.Constraint"; "NUnit.Framework.Constraints.MessageWriter" }
   }

digraph G {
    page="40,60"; 
    ratio=auto;
    rankdir=LR;
    fontsize=10;
   "Newtonsoft.Json.Bson.BsonReader" -> { rank=none; "Newtonsoft.Json.JsonReader" }
   "Newtonsoft.Json.Bson.BsonWriter" -> { rank=none; "Newtonsoft.Json.JsonWriter" }
   "Newtonsoft.Json.Converters.BinaryConverter" -> { rank=none; "Newtonsoft.Json.JsonConverter"; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.JsonSerializer"; "Newtonsoft.Json.JsonWriter" }
   "Newtonsoft.Json.Converters.BsonObjectIdConverter" -> { rank=none; "Newtonsoft.Json.JsonConverter"; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.JsonSerializer"; "Newtonsoft.Json.JsonWriter" }
   "Newtonsoft.Json.Converters.CustomCreationConverter`1" -> { rank=none; "Newtonsoft.Json.JsonConverter"; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.JsonSerializer"; "Newtonsoft.Json.JsonWriter" }
   "Newtonsoft.Json.Converters.DataSetConverter" -> { rank=none; "Newtonsoft.Json.JsonConverter"; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.JsonSerializer"; "Newtonsoft.Json.JsonWriter" }
   "Newtonsoft.Json.Converters.DataTableConverter" -> { rank=none; "Newtonsoft.Json.JsonConverter"; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.JsonSerializer"; "Newtonsoft.Json.JsonWriter" }
   "Newtonsoft.Json.Converters.DateTimeConverterBase" -> { rank=none; "Newtonsoft.Json.JsonConverter" }
   "Newtonsoft.Json.Converters.EntityKeyMemberConverter" -> { rank=none; "Newtonsoft.Json.JsonConverter"; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.JsonSerializer"; "Newtonsoft.Json.JsonWriter" }
   "Newtonsoft.Json.Converters.ExpandoObjectConverter" -> { rank=none; "Newtonsoft.Json.JsonConverter"; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.JsonSerializer"; "Newtonsoft.Json.JsonWriter" }
   "Newtonsoft.Json.Converters.IsoDateTimeConverter" -> { rank=none; "Newtonsoft.Json.Converters.DateTimeConverterBase"; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.JsonSerializer"; "Newtonsoft.Json.JsonWriter" }
   "Newtonsoft.Json.Converters.JavaScriptDateTimeConverter" -> { rank=none; "Newtonsoft.Json.Converters.DateTimeConverterBase"; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.JsonSerializer"; "Newtonsoft.Json.JsonWriter" }
   "Newtonsoft.Json.Converters.KeyValuePairConverter" -> { rank=none; "Newtonsoft.Json.JsonConverter"; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.JsonSerializer"; "Newtonsoft.Json.JsonWriter" }
   "Newtonsoft.Json.Converters.RegexConverter" -> { rank=none; "Newtonsoft.Json.JsonConverter"; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.JsonSerializer"; "Newtonsoft.Json.JsonWriter" }
   "Newtonsoft.Json.Converters.StringEnumConverter" -> { rank=none; "Newtonsoft.Json.JsonConverter"; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.JsonSerializer"; "Newtonsoft.Json.JsonWriter" }
   "Newtonsoft.Json.Converters.VersionConverter" -> { rank=none; "Newtonsoft.Json.JsonConverter"; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.JsonSerializer"; "Newtonsoft.Json.JsonWriter" }
   "Newtonsoft.Json.Converters.XmlNodeConverter" -> { rank=none; "Newtonsoft.Json.JsonConverter"; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.JsonSerializer"; "Newtonsoft.Json.JsonWriter" }
   "Newtonsoft.Json.JsonArrayAttribute" -> { rank=none; "Newtonsoft.Json.JsonContainerAttribute" }
   "Newtonsoft.Json.JsonContainerAttribute" -> { rank=none; "Newtonsoft.Json.ReferenceLoopHandling"; "Newtonsoft.Json.TypeNameHandling" }
   "Newtonsoft.Json.JsonConvert" -> { rank=none; "Newtonsoft.Json.DateFormatHandling"; "Newtonsoft.Json.DateTimeZoneHandling"; "Newtonsoft.Json.Formatting"; "Newtonsoft.Json.JsonSerializerSettings" }
   "Newtonsoft.Json.JsonConverter" -> { rank=none; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.JsonSerializer"; "Newtonsoft.Json.JsonWriter"; "Newtonsoft.Json.Schema.JsonSchema" }
   "Newtonsoft.Json.JsonConverterCollection" -> { rank=none; "Newtonsoft.Json.JsonConverter" }
   "Newtonsoft.Json.JsonDictionaryAttribute" -> { rank=none; "Newtonsoft.Json.JsonContainerAttribute" }
   "Newtonsoft.Json.JsonObjectAttribute" -> { rank=none; "Newtonsoft.Json.JsonContainerAttribute"; "Newtonsoft.Json.MemberSerialization"; "Newtonsoft.Json.Required" }
   "Newtonsoft.Json.JsonPropertyAttribute" -> { rank=none; "Newtonsoft.Json.DefaultValueHandling"; "Newtonsoft.Json.NullValueHandling"; "Newtonsoft.Json.ObjectCreationHandling"; "Newtonsoft.Json.ReferenceLoopHandling"; "Newtonsoft.Json.Required"; "Newtonsoft.Json.TypeNameHandling" }
   "Newtonsoft.Json.JsonReader" -> { rank=none; "Newtonsoft.Json.DateParseHandling"; "Newtonsoft.Json.DateTimeZoneHandling"; "Newtonsoft.Json.FloatParseHandling"; "Newtonsoft.Json.JsonToken" }
   "Newtonsoft.Json.JsonReaderException" -> { rank=none; "Newtonsoft.Json.JsonException" }
   "Newtonsoft.Json.JsonSerializationException" -> { rank=none; "Newtonsoft.Json.JsonException" }
   "Newtonsoft.Json.JsonSerializer" -> { rank=none; "Newtonsoft.Json.ConstructorHandling"; "Newtonsoft.Json.DateFormatHandling"; "Newtonsoft.Json.DateParseHandling"; "Newtonsoft.Json.DateTimeZoneHandling"; "Newtonsoft.Json.DefaultValueHandling"; "Newtonsoft.Json.FloatFormatHandling"; "Newtonsoft.Json.FloatParseHandling"; "Newtonsoft.Json.Formatting"; "Newtonsoft.Json.JsonConverterCollection"; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.JsonSerializerSettings"; "Newtonsoft.Json.JsonWriter"; "Newtonsoft.Json.MissingMemberHandling"; "Newtonsoft.Json.NullValueHandling"; "Newtonsoft.Json.ObjectCreationHandling"; "Newtonsoft.Json.PreserveReferencesHandling"; "Newtonsoft.Json.ReferenceLoopHandling"; "Newtonsoft.Json.Serialization.ErrorEventArgs"; "Newtonsoft.Json.Serialization.IContractResolver"; "Newtonsoft.Json.Serialization.IReferenceResolver"; "Newtonsoft.Json.Serialization.ITraceWriter"; "Newtonsoft.Json.StringEscapeHandling"; "Newtonsoft.Json.TypeNameHandling" }
   "Newtonsoft.Json.JsonSerializerSettings" -> { rank=none; "Newtonsoft.Json.ConstructorHandling"; "Newtonsoft.Json.DateFormatHandling"; "Newtonsoft.Json.DateParseHandling"; "Newtonsoft.Json.DateTimeZoneHandling"; "Newtonsoft.Json.DefaultValueHandling"; "Newtonsoft.Json.FloatFormatHandling"; "Newtonsoft.Json.FloatParseHandling"; "Newtonsoft.Json.Formatting"; "Newtonsoft.Json.JsonConverter"; "Newtonsoft.Json.MissingMemberHandling"; "Newtonsoft.Json.NullValueHandling"; "Newtonsoft.Json.ObjectCreationHandling"; "Newtonsoft.Json.PreserveReferencesHandling"; "Newtonsoft.Json.ReferenceLoopHandling"; "Newtonsoft.Json.Serialization.ErrorEventArgs"; "Newtonsoft.Json.Serialization.IContractResolver"; "Newtonsoft.Json.Serialization.IReferenceResolver"; "Newtonsoft.Json.Serialization.ITraceWriter"; "Newtonsoft.Json.StringEscapeHandling"; "Newtonsoft.Json.TypeNameHandling" }
   "Newtonsoft.Json.JsonTextReader" -> { rank=none; "Newtonsoft.Json.IJsonLineInfo"; "Newtonsoft.Json.JsonReader" }
   "Newtonsoft.Json.JsonTextWriter" -> { rank=none; "Newtonsoft.Json.JsonWriter" }
   "Newtonsoft.Json.JsonValidatingReader" -> { rank=none; "Newtonsoft.Json.IJsonLineInfo"; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.JsonToken"; "Newtonsoft.Json.Schema.JsonSchema"; "Newtonsoft.Json.Schema.ValidationEventHandler" }
   "Newtonsoft.Json.JsonWriter" -> { rank=none; "Newtonsoft.Json.DateFormatHandling"; "Newtonsoft.Json.DateTimeZoneHandling"; "Newtonsoft.Json.FloatFormatHandling"; "Newtonsoft.Json.Formatting"; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.StringEscapeHandling"; "Newtonsoft.Json.WriteState" }
   "Newtonsoft.Json.JsonWriterException" -> { rank=none; "Newtonsoft.Json.JsonException" }
   "Newtonsoft.Json.Linq.Extensions" -> { rank=none; "Newtonsoft.Json.Linq.JObject"; "Newtonsoft.Json.Linq.JProperty"; "Newtonsoft.Json.Linq.JToken" }
   "Newtonsoft.Json.Linq.IJEnumerable`1" -> { rank=none; "Newtonsoft.Json.Linq.JToken" }
   "Newtonsoft.Json.Linq.JArray" -> { rank=none; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.JsonSerializer"; "Newtonsoft.Json.JsonWriter"; "Newtonsoft.Json.Linq.JContainer"; "Newtonsoft.Json.Linq.JToken"; "Newtonsoft.Json.Linq.JTokenType" }
   "Newtonsoft.Json.Linq.JConstructor" -> { rank=none; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.JsonWriter"; "Newtonsoft.Json.Linq.JContainer"; "Newtonsoft.Json.Linq.JToken"; "Newtonsoft.Json.Linq.JTokenType" }
   "Newtonsoft.Json.Linq.JContainer" -> { rank=none; "Newtonsoft.Json.JsonWriter"; "Newtonsoft.Json.Linq.JToken" }
   "Newtonsoft.Json.Linq.JEnumerable`1" -> { rank=none; "Newtonsoft.Json.Linq.JToken" }
   "Newtonsoft.Json.Linq.JObject" -> { rank=none; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.JsonSerializer"; "Newtonsoft.Json.JsonWriter"; "Newtonsoft.Json.Linq.JContainer"; "Newtonsoft.Json.Linq.JProperty"; "Newtonsoft.Json.Linq.JToken"; "Newtonsoft.Json.Linq.JTokenType" }
   "Newtonsoft.Json.Linq.JProperty" -> { rank=none; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.JsonWriter"; "Newtonsoft.Json.Linq.JContainer"; "Newtonsoft.Json.Linq.JToken"; "Newtonsoft.Json.Linq.JTokenType" }
   "Newtonsoft.Json.Linq.JRaw" -> { rank=none; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.Linq.JValue" }
   "Newtonsoft.Json.Linq.JToken" -> { rank=none; "Newtonsoft.Json.Formatting"; "Newtonsoft.Json.IJsonLineInfo"; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.JsonSerializer"; "Newtonsoft.Json.JsonWriter"; "Newtonsoft.Json.Linq.JContainer"; "Newtonsoft.Json.Linq.JTokenEqualityComparer"; "Newtonsoft.Json.Linq.JTokenType" }
   "Newtonsoft.Json.Linq.JTokenEqualityComparer" -> { rank=none; "Newtonsoft.Json.Linq.JToken" }
   "Newtonsoft.Json.Linq.JTokenReader" -> { rank=none; "Newtonsoft.Json.IJsonLineInfo"; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.Linq.JToken" }
   "Newtonsoft.Json.Linq.JTokenWriter" -> { rank=none; "Newtonsoft.Json.JsonWriter"; "Newtonsoft.Json.Linq.JContainer"; "Newtonsoft.Json.Linq.JToken" }
   "Newtonsoft.Json.Linq.JValue" -> { rank=none; "Newtonsoft.Json.JsonWriter"; "Newtonsoft.Json.Linq.JToken"; "Newtonsoft.Json.Linq.JTokenType" }
   "Newtonsoft.Json.Schema.Extensions" -> { rank=none; "Newtonsoft.Json.Linq.JToken"; "Newtonsoft.Json.Schema.JsonSchema"; "Newtonsoft.Json.Schema.ValidationEventHandler" }
   "Newtonsoft.Json.Schema.JsonSchema" -> { rank=none; "Newtonsoft.Json.JsonReader"; "Newtonsoft.Json.JsonWriter"; "Newtonsoft.Json.Linq.JToken"; "Newtonsoft.Json.Schema.JsonSchemaResolver"; "Newtonsoft.Json.Schema.JsonSchemaType" }
   "Newtonsoft.Json.Schema.JsonSchemaException" -> { rank=none; "Newtonsoft.Json.JsonException" }
   "Newtonsoft.Json.Schema.JsonSchemaGenerator" -> { rank=none; "Newtonsoft.Json.Schema.JsonSchema"; "Newtonsoft.Json.Schema.JsonSchemaResolver"; "Newtonsoft.Json.Schema.UndefinedSchemaIdHandling"; "Newtonsoft.Json.Serialization.IContractResolver" }
   "Newtonsoft.Json.Schema.JsonSchemaResolver" -> { rank=none; "Newtonsoft.Json.Schema.JsonSchema" }
   "Newtonsoft.Json.Schema.ValidationEventArgs" -> { rank=none; "Newtonsoft.Json.Schema.JsonSchemaException" }
   "Newtonsoft.Json.Schema.ValidationEventHandler" -> { rank=none; "Newtonsoft.Json.Schema.ValidationEventArgs" }
   "Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver" -> { rank=none; "Newtonsoft.Json.Serialization.DefaultContractResolver" }
   "Newtonsoft.Json.Serialization.DefaultContractResolver" -> { rank=none; "Newtonsoft.Json.Serialization.IContractResolver"; "Newtonsoft.Json.Serialization.JsonContract" }
   "Newtonsoft.Json.Serialization.DiagnosticsTraceWriter" -> { rank=none; "Newtonsoft.Json.Serialization.ITraceWriter" }
   "Newtonsoft.Json.Serialization.DynamicValueProvider" -> { rank=none; "Newtonsoft.Json.Serialization.IValueProvider" }
   "Newtonsoft.Json.Serialization.ErrorEventArgs" -> { rank=none; "Newtonsoft.Json.Serialization.ErrorContext" }
   "Newtonsoft.Json.Serialization.ExpressionValueProvider" -> { rank=none; "Newtonsoft.Json.Serialization.IValueProvider" }
   "Newtonsoft.Json.Serialization.ExtensionDataSetter" -> { rank=none; "Newtonsoft.Json.Linq.JToken" }
   "Newtonsoft.Json.Serialization.IContractResolver" -> { rank=none; "Newtonsoft.Json.Serialization.JsonContract" }
   "Newtonsoft.Json.Serialization.JsonArrayContract" -> { rank=none; "Newtonsoft.Json.Serialization.JsonContainerContract" }
   "Newtonsoft.Json.Serialization.JsonContainerContract" -> { rank=none; "Newtonsoft.Json.JsonConverter"; "Newtonsoft.Json.ReferenceLoopHandling"; "Newtonsoft.Json.Serialization.JsonContract"; "Newtonsoft.Json.TypeNameHandling" }
   "Newtonsoft.Json.Serialization.JsonContract" -> { rank=none; "Newtonsoft.Json.JsonConverter"; "Newtonsoft.Json.Serialization.SerializationCallback"; "Newtonsoft.Json.Serialization.SerializationErrorCallback" }
   "Newtonsoft.Json.Serialization.JsonDictionaryContract" -> { rank=none; "Newtonsoft.Json.Serialization.JsonContainerContract" }
   "Newtonsoft.Json.Serialization.JsonDynamicContract" -> { rank=none; "Newtonsoft.Json.Serialization.JsonContainerContract"; "Newtonsoft.Json.Serialization.JsonPropertyCollection" }
   "Newtonsoft.Json.Serialization.JsonISerializableContract" -> { rank=none; "Newtonsoft.Json.Serialization.JsonContainerContract" }
   "Newtonsoft.Json.Serialization.JsonLinqContract" -> { rank=none; "Newtonsoft.Json.Serialization.JsonContract" }
   "Newtonsoft.Json.Serialization.JsonObjectContract" -> { rank=none; "Newtonsoft.Json.MemberSerialization"; "Newtonsoft.Json.Required"; "Newtonsoft.Json.Serialization.ExtensionDataSetter"; "Newtonsoft.Json.Serialization.JsonContainerContract"; "Newtonsoft.Json.Serialization.JsonPropertyCollection" }
   "Newtonsoft.Json.Serialization.JsonPrimitiveContract" -> { rank=none; "Newtonsoft.Json.Serialization.JsonContract" }
   "Newtonsoft.Json.Serialization.JsonProperty" -> { rank=none; "Newtonsoft.Json.DefaultValueHandling"; "Newtonsoft.Json.JsonConverter"; "Newtonsoft.Json.NullValueHandling"; "Newtonsoft.Json.ObjectCreationHandling"; "Newtonsoft.Json.ReferenceLoopHandling"; "Newtonsoft.Json.Required"; "Newtonsoft.Json.Serialization.IValueProvider"; "Newtonsoft.Json.TypeNameHandling" }
   "Newtonsoft.Json.Serialization.JsonPropertyCollection" -> { rank=none; "Newtonsoft.Json.Serialization.JsonProperty" }
   "Newtonsoft.Json.Serialization.JsonStringContract" -> { rank=none; "Newtonsoft.Json.Serialization.JsonPrimitiveContract" }
   "Newtonsoft.Json.Serialization.MemoryTraceWriter" -> { rank=none; "Newtonsoft.Json.Serialization.ITraceWriter" }
   "Newtonsoft.Json.Serialization.ReflectionValueProvider" -> { rank=none; "Newtonsoft.Json.Serialization.IValueProvider" }
   "Newtonsoft.Json.Serialization.SerializationErrorCallback" -> { rank=none; "Newtonsoft.Json.Serialization.ErrorContext" }
   }

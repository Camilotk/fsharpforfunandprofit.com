digraph G {
    page="40,60"; 
    ratio=auto;
    rankdir=LR;
    fontsize=10;
   "Microsoft.FSharp.Collections.Tagged.Map`3" -> { rank=none; "Microsoft.FSharp.Collections.Tagged.MapTreeModule" }
   "Microsoft.FSharp.Collections.Tagged.Set`2" -> { rank=none; "Microsoft.FSharp.Collections.Tagged.SetTreeModule" }
   "Microsoft.FSharp.Control.StreamReaderExtensions" -> { rank=none; "Microsoft.FSharp.Control.FileExtensions" }
   "Microsoft.FSharp.Math.BigRational" -> { rank=none; "Microsoft.FSharp.Math.BigRationalLarge"; "Microsoft.FSharp.Math.BigRationalLargeImpl"; "Microsoft.FSharp.Math.BigRationalLargeModule" }
   "Microsoft.FSharp.Math.BigRationalLarge" -> { rank=none; "Microsoft.FSharp.Math.BigRationalLargeImpl" }
   "Microsoft.FSharp.Math.BigRationalLargeModule" -> { rank=none; "Microsoft.FSharp.Math.BigRationalLarge"; "Microsoft.FSharp.Math.BigRationalLargeImpl" }
   "Microsoft.FSharp.Math.Complex" -> { rank=none; "Microsoft.FSharp.Math.ComplexModule" }
   "Microsoft.FSharp.Math.ComplexModule" -> { rank=none; "Microsoft.FSharp.Math.Complex" }
   "Microsoft.FSharp.Math.ComplexTopLevelOperators" -> { rank=none; "Microsoft.FSharp.Math.Complex" }
   "Microsoft.FSharp.Math.DoubleImpl" -> { rank=none; "Microsoft.FSharp.Math.GenericImpl" }
   "Microsoft.FSharp.Math.GenericImpl" -> { rank=none; "Microsoft.FSharp.Math.GlobalAssociations" }
   "Microsoft.FSharp.Math.GlobalAssociations" -> { rank=none; "Microsoft.FSharp.Math.ComplexModule" }
   "Microsoft.FSharp.Math.Instances" -> { rank=none; "Microsoft.FSharp.Math.BigRational" }
   "Microsoft.FSharp.Math.MatrixModule" -> { rank=none; "Microsoft.FSharp.Math.DoubleImpl"; "Microsoft.FSharp.Math.GenericImpl"; "Microsoft.FSharp.Math.GlobalAssociations"; "Microsoft.FSharp.Math.MRandom"; "Microsoft.FSharp.Math.SpecializedGenericImpl" }
   "Microsoft.FSharp.Math.MatrixTopLevelOperators" -> { rank=none; "Microsoft.FSharp.Math.DoubleImpl"; "Microsoft.FSharp.Math.GenericImpl"; "Microsoft.FSharp.Math.GlobalAssociations" }
   "Microsoft.FSharp.Math.Matrix`1" -> { rank=none; "Microsoft.FSharp.Math.GenericImpl"; "Microsoft.FSharp.Math.MatrixModule"; "Microsoft.FSharp.Math.SpecializedGenericImpl" }
   "Microsoft.FSharp.Math.NumericLiteralN" -> { rank=none; "Microsoft.FSharp.Math.BigRational"; "Microsoft.FSharp.Math.BigRationalLarge" }
   "Microsoft.FSharp.Math.RowVectorModule" -> { rank=none; "Microsoft.FSharp.Math.GenericImpl"; "Microsoft.FSharp.Math.GlobalAssociations"; "Microsoft.FSharp.Math.SpecializedGenericImpl" }
   "Microsoft.FSharp.Math.RowVector`1" -> { rank=none; "Microsoft.FSharp.Math.GenericImpl"; "Microsoft.FSharp.Math.RowVectorModule"; "Microsoft.FSharp.Math.SpecializedGenericImpl" }
   "Microsoft.FSharp.Math.SpecializedGenericImpl" -> { rank=none; "Microsoft.FSharp.Math.DoubleImpl"; "Microsoft.FSharp.Math.GenericImpl"; "Microsoft.FSharp.Math.GlobalAssociations" }
   "Microsoft.FSharp.Math.VectorModule" -> { rank=none; "Microsoft.FSharp.Math.DoubleImpl"; "Microsoft.FSharp.Math.GenericImpl"; "Microsoft.FSharp.Math.GlobalAssociations"; "Microsoft.FSharp.Math.SpecializedGenericImpl" }
   "Microsoft.FSharp.Math.Vector`1" -> { rank=none; "Microsoft.FSharp.Math.GenericImpl"; "Microsoft.FSharp.Math.SpecializedGenericImpl"; "Microsoft.FSharp.Math.VectorModule" }
   "Microsoft.FSharp.Text.ArgInfo" -> { rank=none; "Microsoft.FSharp.Text.ArgType" }
   "Microsoft.FSharp.Text.ArgParser" -> { rank=none; "Microsoft.FSharp.Text.ArgInfo"; "Microsoft.FSharp.Text.Bad"; "Microsoft.FSharp.Text.HelpText" }
   "Microsoft.FSharp.Text.Lexing.AsciiTables" -> { rank=none; "Microsoft.FSharp.Text.Lexing.GenericImplFragments" }
   "Microsoft.FSharp.Text.Lexing.LexBuffer`1" -> { rank=none; "Microsoft.FSharp.Text.Lexing.Position" }
   "Microsoft.FSharp.Text.Lexing.UnicodeTables" -> { rank=none; "Microsoft.FSharp.Text.Lexing.GenericImplFragments" }
   "Microsoft.FSharp.Text.Parsing.IParseState" -> { rank=none; "Microsoft.FSharp.Text.Lexing.Position" }
   "Microsoft.FSharp.Text.Parsing.Implementation" -> { rank=none; "Microsoft.FSharp.Text.Lexing.Position"; "Microsoft.FSharp.Text.Parsing.Accept"; "Microsoft.FSharp.Text.Parsing.IParseState"; "Microsoft.FSharp.Text.Parsing.RecoverableParseError" }
   "Microsoft.FSharp.Text.Parsing.ParseErrorContext`1" -> { rank=none; "Microsoft.FSharp.Text.Parsing.IParseState" }
   "Microsoft.FSharp.Text.Parsing.Tables`1" -> { rank=none; "Microsoft.FSharp.Text.Parsing.Implementation" }
   "Microsoft.FSharp.Text.StructuredFormat.DisplayModule" -> { rank=none; "Microsoft.FSharp.Text.StructuredFormat.FormatOptions"; "Microsoft.FSharp.Text.StructuredFormat.Joint"; "Microsoft.FSharp.Text.StructuredFormat.Layout"; "Microsoft.FSharp.Text.StructuredFormat.LayoutOpsModule"; "Microsoft.FSharp.Text.StructuredFormat.ReflectUtils" }
   "Microsoft.FSharp.Text.StructuredFormat.IEnvironment" -> { rank=none; "Microsoft.FSharp.Text.StructuredFormat.Layout" }
   "Microsoft.FSharp.Text.StructuredFormat.Layout" -> { rank=none; "Microsoft.FSharp.Text.StructuredFormat.Joint" }
   "Microsoft.FSharp.Text.StructuredFormat.LayoutOpsModule" -> { rank=none; "Microsoft.FSharp.Text.StructuredFormat.Joint"; "Microsoft.FSharp.Text.StructuredFormat.Layout" }
   }

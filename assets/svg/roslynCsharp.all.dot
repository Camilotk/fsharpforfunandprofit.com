digraph G {
    page="40,60"; 
    ratio=auto;
    rankdir=LR;
    fontsize=10;
   "Microsoft.CodeAnalysis.CSharp.AbstractFlowPass`1" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTryStatement" }
   "Microsoft.CodeAnalysis.CSharp.AbstractRegionControlFlowPass" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundLambda"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.ControlFlowPass" }
   "Microsoft.CodeAnalysis.CSharp.AbstractRegionDataFlowPass" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundLambda"; "Microsoft.CodeAnalysis.CSharp.DataFlowPass"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.AccessCheck" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.AliasAndExternAliasDirective" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax" }
   "Microsoft.CodeAnalysis.CSharp.AliasAndUsingDirective" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax" }
   "Microsoft.CodeAnalysis.CSharp.AlwaysAssignedWalker" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundLabel"; "Microsoft.CodeAnalysis.CSharp.BoundLabeledStatement"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.DataFlowPass"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol" }
   "Microsoft.CodeAnalysis.CSharp.AnalyzedArguments" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax" }
   "Microsoft.CodeAnalysis.CSharp.ArgumentAnalysisResult" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.ArgumentAnalysisResultKind" }
   "Microsoft.CodeAnalysis.CSharp.AsyncHandlerRewriter" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalGoto"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement"; "Microsoft.CodeAnalysis.CSharp.BoundGotoStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLabel"; "Microsoft.CodeAnalysis.CSharp.BoundLambda"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundReturnStatement"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchSection"; "Microsoft.CodeAnalysis.CSharp.BoundThrowStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.BoundTreeWalker"; "Microsoft.CodeAnalysis.CSharp.BoundTryStatement"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.LabelCollector"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedNames"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedLocal"; "Microsoft.CodeAnalysis.CSharp.SyntheticBoundNodeFactory" }
   "Microsoft.CodeAnalysis.CSharp.AsyncRewriter2" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AwaitLiftingRewriter"; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAwaitExpression"; "Microsoft.CodeAnalysis.CSharp.BoundBadStatement"; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundReturnStatement"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.ConversionsBase"; "Microsoft.CodeAnalysis.CSharp.LoweredDynamicOperation"; "Microsoft.CodeAnalysis.CSharp.LoweredDynamicOperationFactory"; "Microsoft.CodeAnalysis.CSharp.StateMachineMethodToClassRewriter"; "Microsoft.CodeAnalysis.CSharp.StateMachineRewriter"; "Microsoft.CodeAnalysis.CSharp.StateMachineStates"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedNames"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodToClassRewriter"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedContainer"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInstanceConstructor"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntheticBoundNodeFactory"; "Microsoft.CodeAnalysis.CSharp.TypeCompilationState" }
   "Microsoft.CodeAnalysis.CSharp.AttributeSemanticModel" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BoundTypeExpression"; "Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.MemberSemanticModel"; "Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts" }
   "Microsoft.CodeAnalysis.CSharp.AwaitLiftingRewriter" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundAddressOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundArgListOperator"; "Microsoft.CodeAnalysis.CSharp.BoundArrayAccess"; "Microsoft.CodeAnalysis.CSharp.BoundArrayCreation"; "Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization"; "Microsoft.CodeAnalysis.CSharp.BoundArrayLength"; "Microsoft.CodeAnalysis.CSharp.BoundAsOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAwaitExpression"; "Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator"; "Microsoft.CodeAnalysis.CSharp.BoundCall"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalGoto"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalOperator"; "Microsoft.CodeAnalysis.CSharp.BoundConversion"; "Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement"; "Microsoft.CodeAnalysis.CSharp.BoundFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundIsOperator"; "Microsoft.CodeAnalysis.CSharp.BoundKind"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator"; "Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundPointerElementAccess"; "Microsoft.CodeAnalysis.CSharp.BoundPointerIndirectionOperator"; "Microsoft.CodeAnalysis.CSharp.BoundReturnStatement"; "Microsoft.CodeAnalysis.CSharp.BoundSequence"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement"; "Microsoft.CodeAnalysis.CSharp.BoundThrowStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeDumperNodeProducer"; "Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.SyntheticBoundNodeFactory" }
   "Microsoft.CodeAnalysis.CSharp.BestIndex" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BestIndexKind" }
   "Microsoft.CodeAnalysis.CSharp.BestTypeInferrer" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.ConversionsBase"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.BinaryOperatorAnalysisResult" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorSignature"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.OperatorAnalysisResultKind" }
   "Microsoft.CodeAnalysis.CSharp.BinaryOperatorOverloadResolutionResult" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorAnalysisResult"; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorSignature"; "Microsoft.CodeAnalysis.CSharp.OperatorAnalysisResultKind" }
   "Microsoft.CodeAnalysis.CSharp.BinaryOperatorSignature" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Binder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AccessCheck"; "Microsoft.CodeAnalysis.CSharp.AnalyzedArguments"; "Microsoft.CodeAnalysis.CSharp.BestTypeInferrer"; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorAnalysisResult"; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind"; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorOverloadResolutionResult"; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorSignature"; "Microsoft.CodeAnalysis.CSharp.BinderFactory"; "Microsoft.CodeAnalysis.CSharp.BinderFlags"; "Microsoft.CodeAnalysis.CSharp.BinderFlagsExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundAddressOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAnonymousObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundAnonymousPropertyDeclaration"; "Microsoft.CodeAnalysis.CSharp.BoundArgList"; "Microsoft.CodeAnalysis.CSharp.BoundArgListOperator"; "Microsoft.CodeAnalysis.CSharp.BoundArrayCreation"; "Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization"; "Microsoft.CodeAnalysis.CSharp.BoundAsOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAttribute"; "Microsoft.CodeAnalysis.CSharp.BoundAwaitExpression"; "Microsoft.CodeAnalysis.CSharp.BoundBadExpression"; "Microsoft.CodeAnalysis.CSharp.BoundBadStatement"; "Microsoft.CodeAnalysis.CSharp.BoundBaseReference"; "Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator"; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundBreakStatement"; "Microsoft.CodeAnalysis.CSharp.BoundCall"; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalOperator"; "Microsoft.CodeAnalysis.CSharp.BoundContinueStatement"; "Microsoft.CodeAnalysis.CSharp.BoundConversion"; "Microsoft.CodeAnalysis.CSharp.BoundDefaultOperator"; "Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundDoStatement"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectInitializerMember"; "Microsoft.CodeAnalysis.CSharp.BoundEventAccess"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement"; "Microsoft.CodeAnalysis.CSharp.BoundFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundFixedStatement"; "Microsoft.CodeAnalysis.CSharp.BoundForStatement"; "Microsoft.CodeAnalysis.CSharp.BoundGotoStatement"; "Microsoft.CodeAnalysis.CSharp.BoundIfStatement"; "Microsoft.CodeAnalysis.CSharp.BoundImplicitReceiver"; "Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess"; "Microsoft.CodeAnalysis.CSharp.BoundIsOperator"; "Microsoft.CodeAnalysis.CSharp.BoundKind"; "Microsoft.CodeAnalysis.CSharp.BoundLabel"; "Microsoft.CodeAnalysis.CSharp.BoundLabeledStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLambda"; "Microsoft.CodeAnalysis.CSharp.BoundLiteral"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration"; "Microsoft.CodeAnalysis.CSharp.BoundMakeRefOperator"; "Microsoft.CodeAnalysis.CSharp.BoundMethodGroup"; "Microsoft.CodeAnalysis.CSharp.BoundMethodOrPropertyGroup"; "Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarations"; "Microsoft.CodeAnalysis.CSharp.BoundNamespaceExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNoOpStatement"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator"; "Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember"; "Microsoft.CodeAnalysis.CSharp.BoundParameter"; "Microsoft.CodeAnalysis.CSharp.BoundPointerIndirectionOperator"; "Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess"; "Microsoft.CodeAnalysis.CSharp.BoundPropertyGroup"; "Microsoft.CodeAnalysis.CSharp.BoundQueryClause"; "Microsoft.CodeAnalysis.CSharp.BoundRangeVariable"; "Microsoft.CodeAnalysis.CSharp.BoundRefTypeOperator"; "Microsoft.CodeAnalysis.CSharp.BoundRefValueOperator"; "Microsoft.CodeAnalysis.CSharp.BoundReturnStatement"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePointExpression"; "Microsoft.CodeAnalysis.CSharp.BoundSizeOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundStackAllocArrayCreation"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundStatementList"; "Microsoft.CodeAnalysis.CSharp.BoundThisReference"; "Microsoft.CodeAnalysis.CSharp.BoundThrowStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTryStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTypeExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTypeOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundTypeOrValueExpression"; "Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator"; "Microsoft.CodeAnalysis.CSharp.BoundWhileStatement"; "Microsoft.CodeAnalysis.CSharp.BoundYieldBreakStatement"; "Microsoft.CodeAnalysis.CSharp.BoundYieldReturnStatement"; "Microsoft.CodeAnalysis.CSharp.CSDiagnostic"; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions"; "Microsoft.CodeAnalysis.CSharp.CSharpExtensions"; "Microsoft.CodeAnalysis.CSharp.CSharpParseOptions"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.ContextualAttributeBinder"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.ConversionKind"; "Microsoft.CodeAnalysis.CSharp.Conversions"; "Microsoft.CodeAnalysis.CSharp.ConversionsBase"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.EarlyWellKnownAttributeBinder"; "Microsoft.CodeAnalysis.CSharp.ErrorCode"; "Microsoft.CodeAnalysis.CSharp.ExtensionMethodScope"; "Microsoft.CodeAnalysis.CSharp.ExtensionMethodScopeEnumerator"; "Microsoft.CodeAnalysis.CSharp.ExtensionMethodScopes"; "Microsoft.CodeAnalysis.CSharp.Imports"; "Microsoft.CodeAnalysis.CSharp.LanguageVersionExtensions"; "Microsoft.CodeAnalysis.CSharp.LocalScopeBinder"; "Microsoft.CodeAnalysis.CSharp.LocalizableErrorArgument"; "Microsoft.CodeAnalysis.CSharp.LookupOptionExtensions"; "Microsoft.CodeAnalysis.CSharp.LookupOptions"; "Microsoft.CodeAnalysis.CSharp.LookupResult"; "Microsoft.CodeAnalysis.CSharp.LookupResultKind"; "Microsoft.CodeAnalysis.CSharp.MemberAnalysisResult"; "Microsoft.CodeAnalysis.CSharp.MessageID"; "Microsoft.CodeAnalysis.CSharp.MessageIDExtensions"; "Microsoft.CodeAnalysis.CSharp.MethodGroup"; "Microsoft.CodeAnalysis.CSharp.MethodGroupResolution"; "Microsoft.CodeAnalysis.CSharp.OperatorFacts"; "Microsoft.CodeAnalysis.CSharp.OperatorKindExtensions"; "Microsoft.CodeAnalysis.CSharp.OverloadResolution"; "Microsoft.CodeAnalysis.CSharp.SwitchBinder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.SymbolDistinguisher"; "Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeDescriptor"; "Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeField"; "Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeManager"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.ConstraintsHelper"; "Microsoft.CodeAnalysis.CSharp.Symbols.CrefTypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.IndexedTypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalDeclarationKind"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.RangeVariableSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.RefKindExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyPropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceLocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.UnboundArgumentErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SelectOrGroupClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxExtensions"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions"; "Microsoft.CodeAnalysis.CSharp.TypeofBinder"; "Microsoft.CodeAnalysis.CSharp.UnaryOperatorAnalysisResult"; "Microsoft.CodeAnalysis.CSharp.UnaryOperatorOverloadResolutionResult"; "Microsoft.CodeAnalysis.CSharp.UnaryOperatorSignature"; "Microsoft.CodeAnalysis.CSharp.UnboundLambda"; "Microsoft.CodeAnalysis.CSharp.UnboundLambdaState"; "Microsoft.CodeAnalysis.CSharp.WithLambdaParametersBinder"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.BinderFactory" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BuckStopsHereBinder"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpExtensions"; "Microsoft.CodeAnalysis.CSharp.CSharpParseOptions"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.HostObjectModelBinder"; "Microsoft.CodeAnalysis.CSharp.Imports"; "Microsoft.CodeAnalysis.CSharp.InContainerBinder"; "Microsoft.CodeAnalysis.CSharp.InMethodBinder"; "Microsoft.CodeAnalysis.CSharp.InteractiveUsingsBinder"; "Microsoft.CodeAnalysis.CSharp.LookupPosition"; "Microsoft.CodeAnalysis.CSharp.NamespaceOrTypeAndUsingDirective"; "Microsoft.CodeAnalysis.CSharp.OperatorFacts"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ExplicitInterfaceHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceEventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeElementKind"; "Microsoft.CodeAnalysis.CSharp.SyntaxExtensions"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind"; "Microsoft.CodeAnalysis.CSharp.UsingsBinder"; "Microsoft.CodeAnalysis.CSharp.WithClassTypeParametersBinder"; "Microsoft.CodeAnalysis.CSharp.WithMethodTypeParametersBinder"; "Microsoft.CodeAnalysis.CSharp.WithParametersBinder"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.BlockBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.LocalScopeBinder"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.BoundAddressOfOperator" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundAnonymousObjectCreationExpression" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundAnonymousPropertyDeclaration"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundAnonymousPropertyDeclaration" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundArgList" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundArgListOperator" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundArrayAccess" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundArrayCreation" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNodeExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor" }
   "Microsoft.CodeAnalysis.CSharp.BoundArrayLength" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundAsOperator" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.BoundTypeExpression"; "Microsoft.CodeAnalysis.CSharp.Conversion" }
   "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor" }
   "Microsoft.CodeAnalysis.CSharp.BoundAttribute" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.LookupResultKind"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundAwaitExpression" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundBadExpression" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.LookupResultKind"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundBadStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNodeExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor" }
   "Microsoft.CodeAnalysis.CSharp.BoundBaseReference" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.LookupResultKind"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundBlock" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundStatementList"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundBreakStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundCall" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.LookupResultKind"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.LookupResultKind"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundCollectionInitializerExpression" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorSignature"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.LookupResultKind"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundConditionalGoto" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundConditionalOperator" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator"; "Microsoft.CodeAnalysis.CSharp.OperatorKindExtensions" }
   "Microsoft.CodeAnalysis.CSharp.BoundContinueStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundConversion" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.ConversionKind"; "Microsoft.CodeAnalysis.CSharp.ConversionKindExtensions"; "Microsoft.CodeAnalysis.CSharp.LookupResultKind"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundDefaultOperator" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundDoStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundLoopStatement"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundDup" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundDynamicCollectionElementInitializer" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundDynamicMemberAccess" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectCreationExpression" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectInitializerMember" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundEventAccess" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.LookupResultKind"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundEventAssignmentOperator" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundExpression" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundExpressionExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundBadExpression"; "Microsoft.CodeAnalysis.CSharp.BoundCall"; "Microsoft.CodeAnalysis.CSharp.BoundConversion"; "Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess"; "Microsoft.CodeAnalysis.CSharp.BoundMethodGroup"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.ConversionKind"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNodeExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor" }
   "Microsoft.CodeAnalysis.CSharp.BoundFieldAccess" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.LookupResultKind"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundFieldInfo" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundFieldInitializer" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundFixedLocalCollectionInitializer" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundFixedStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarations"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundForEachStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.BoundTypeExpression"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.ForEachEnumeratorInfo"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundForStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundGlobalStatementInitializer" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNodeExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor" }
   "Microsoft.CodeAnalysis.CSharp.BoundGotoStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundLabel"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundHoistedFieldAccess" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundHostObjectMemberReference" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundIfStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor" }
   "Microsoft.CodeAnalysis.CSharp.BoundImplicitReceiver" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.LookupResultKind"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind" }
   "Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundInitializer" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundNode" }
   "Microsoft.CodeAnalysis.CSharp.BoundIsOperator" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.BoundTypeExpression"; "Microsoft.CodeAnalysis.CSharp.Conversion" }
   "Microsoft.CodeAnalysis.CSharp.BoundIteratorScope" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedFieldSymbolBase" }
   "Microsoft.CodeAnalysis.CSharp.BoundLabel" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundLabelStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundLabeledStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundLambda" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BestTypeInferrer"; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundReturnStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.BoundTreeWalker"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.ExecutableCodeBinder"; "Microsoft.CodeAnalysis.CSharp.LocalizableErrorArgument"; "Microsoft.CodeAnalysis.CSharp.MessageIDExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundLiteral" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.LocalizableErrorArgument"; "Microsoft.CodeAnalysis.CSharp.MessageIDExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundLocal" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.BoundTypeExpression"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundLockStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor" }
   "Microsoft.CodeAnalysis.CSharp.BoundLoopStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundMakeRefOperator" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundMethodGroup" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundMethodGroupFlags"; "Microsoft.CodeAnalysis.CSharp.BoundMethodOrPropertyGroup"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.LocalizableErrorArgument"; "Microsoft.CodeAnalysis.CSharp.MessageIDExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.BoundMethodInfo" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundMethodOrPropertyGroup" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.LookupResultKind" }
   "Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarations" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNodeExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor" }
   "Microsoft.CodeAnalysis.CSharp.BoundNamespaceExpression" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundNewT" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundNoOpStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.NoOpStatementFlavor" }
   "Microsoft.CodeAnalysis.CSharp.BoundNoPiaObjectCreationExpression" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundNode" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundKind"; "Microsoft.CodeAnalysis.CSharp.BoundTreeDumperNodeProducer"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.BoundNodeExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundCall"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Conversion" }
   "Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpression" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.LookupResultKind"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundParameter" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundPointerElementAccess" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor" }
   "Microsoft.CodeAnalysis.CSharp.BoundPointerIndirectionOperator" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundPreviousSubmissionReference" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.LookupResultKind"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundPropertyGroup" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundMethodOrPropertyGroup"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundQueryClause" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.RangeVariableSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundRangeVariable" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.RangeVariableSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundRefTypeOperator" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundRefValueOperator" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundReturnStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNodeExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor" }
   "Microsoft.CodeAnalysis.CSharp.BoundSequence" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundSequencePoint" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNodeExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor" }
   "Microsoft.CodeAnalysis.CSharp.BoundSequencePointExpression" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundSequencePointWithSpan" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor" }
   "Microsoft.CodeAnalysis.CSharp.BoundSizeOfOperator" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.BoundTypeExpression"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundStackAllocArrayCreation" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundNode" }
   "Microsoft.CodeAnalysis.CSharp.BoundStatementExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundLabelStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLabeledStatement"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchSection"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundStatementList" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNodeExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor" }
   "Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundSwitchSection" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundStatementList"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor" }
   "Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchSection"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundThisReference" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundThrowStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNodeExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor" }
   "Microsoft.CodeAnalysis.CSharp.BoundTreeDumperNodeProducer" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind"; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorSignature"; "Microsoft.CodeAnalysis.CSharp.BoundAddressOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAnonymousObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundAnonymousPropertyDeclaration"; "Microsoft.CodeAnalysis.CSharp.BoundArgListOperator"; "Microsoft.CodeAnalysis.CSharp.BoundArrayAccess"; "Microsoft.CodeAnalysis.CSharp.BoundArrayCreation"; "Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization"; "Microsoft.CodeAnalysis.CSharp.BoundArrayLength"; "Microsoft.CodeAnalysis.CSharp.BoundAsOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAttribute"; "Microsoft.CodeAnalysis.CSharp.BoundAwaitExpression"; "Microsoft.CodeAnalysis.CSharp.BoundBadExpression"; "Microsoft.CodeAnalysis.CSharp.BoundBadStatement"; "Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator"; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundBreakStatement"; "Microsoft.CodeAnalysis.CSharp.BoundCall"; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundCollectionInitializerExpression"; "Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalGoto"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalOperator"; "Microsoft.CodeAnalysis.CSharp.BoundContinueStatement"; "Microsoft.CodeAnalysis.CSharp.BoundConversion"; "Microsoft.CodeAnalysis.CSharp.BoundDefaultOperator"; "Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundDoStatement"; "Microsoft.CodeAnalysis.CSharp.BoundDup"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicCollectionElementInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicMemberAccess"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectInitializerMember"; "Microsoft.CodeAnalysis.CSharp.BoundEventAccess"; "Microsoft.CodeAnalysis.CSharp.BoundEventAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement"; "Microsoft.CodeAnalysis.CSharp.BoundFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundFieldInfo"; "Microsoft.CodeAnalysis.CSharp.BoundFieldInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundFixedLocalCollectionInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundFixedStatement"; "Microsoft.CodeAnalysis.CSharp.BoundForEachStatement"; "Microsoft.CodeAnalysis.CSharp.BoundForStatement"; "Microsoft.CodeAnalysis.CSharp.BoundGlobalStatementInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundGotoStatement"; "Microsoft.CodeAnalysis.CSharp.BoundHoistedFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundIfStatement"; "Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator"; "Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess"; "Microsoft.CodeAnalysis.CSharp.BoundIsOperator"; "Microsoft.CodeAnalysis.CSharp.BoundIteratorScope"; "Microsoft.CodeAnalysis.CSharp.BoundLabel"; "Microsoft.CodeAnalysis.CSharp.BoundLabelStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLabeledStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLambda"; "Microsoft.CodeAnalysis.CSharp.BoundLiteral"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration"; "Microsoft.CodeAnalysis.CSharp.BoundLockStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLoopStatement"; "Microsoft.CodeAnalysis.CSharp.BoundMakeRefOperator"; "Microsoft.CodeAnalysis.CSharp.BoundMethodGroup"; "Microsoft.CodeAnalysis.CSharp.BoundMethodGroupFlags"; "Microsoft.CodeAnalysis.CSharp.BoundMethodInfo"; "Microsoft.CodeAnalysis.CSharp.BoundMethodOrPropertyGroup"; "Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarations"; "Microsoft.CodeAnalysis.CSharp.BoundNamespaceExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNewT"; "Microsoft.CodeAnalysis.CSharp.BoundNoOpStatement"; "Microsoft.CodeAnalysis.CSharp.BoundNoPiaObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator"; "Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpression"; "Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember"; "Microsoft.CodeAnalysis.CSharp.BoundParameter"; "Microsoft.CodeAnalysis.CSharp.BoundPointerElementAccess"; "Microsoft.CodeAnalysis.CSharp.BoundPointerIndirectionOperator"; "Microsoft.CodeAnalysis.CSharp.BoundPreviousSubmissionReference"; "Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess"; "Microsoft.CodeAnalysis.CSharp.BoundPropertyGroup"; "Microsoft.CodeAnalysis.CSharp.BoundQueryClause"; "Microsoft.CodeAnalysis.CSharp.BoundRangeVariable"; "Microsoft.CodeAnalysis.CSharp.BoundRefTypeOperator"; "Microsoft.CodeAnalysis.CSharp.BoundRefValueOperator"; "Microsoft.CodeAnalysis.CSharp.BoundReturnStatement"; "Microsoft.CodeAnalysis.CSharp.BoundSequence"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePoint"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePointExpression"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePointWithSpan"; "Microsoft.CodeAnalysis.CSharp.BoundSizeOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundStackAllocArrayCreation"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundStatementList"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchSection"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement"; "Microsoft.CodeAnalysis.CSharp.BoundThrowStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTryStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTypeExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTypeOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundTypeOrValueExpression"; "Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator"; "Microsoft.CodeAnalysis.CSharp.BoundUsingStatement"; "Microsoft.CodeAnalysis.CSharp.BoundWhileStatement"; "Microsoft.CodeAnalysis.CSharp.BoundYieldReturnStatement"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.ConversionKind"; "Microsoft.CodeAnalysis.CSharp.LookupResultKind"; "Microsoft.CodeAnalysis.CSharp.NoOpStatementFlavor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedFieldSymbolBase"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind"; "Microsoft.CodeAnalysis.CSharp.UnboundLambda" }
   "Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundAddressOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAnonymousObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundAnonymousPropertyDeclaration"; "Microsoft.CodeAnalysis.CSharp.BoundArgList"; "Microsoft.CodeAnalysis.CSharp.BoundArgListOperator"; "Microsoft.CodeAnalysis.CSharp.BoundArrayAccess"; "Microsoft.CodeAnalysis.CSharp.BoundArrayCreation"; "Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization"; "Microsoft.CodeAnalysis.CSharp.BoundArrayLength"; "Microsoft.CodeAnalysis.CSharp.BoundAsOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAttribute"; "Microsoft.CodeAnalysis.CSharp.BoundAwaitExpression"; "Microsoft.CodeAnalysis.CSharp.BoundBadExpression"; "Microsoft.CodeAnalysis.CSharp.BoundBadStatement"; "Microsoft.CodeAnalysis.CSharp.BoundBaseReference"; "Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator"; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCall"; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundCollectionInitializerExpression"; "Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalGoto"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalOperator"; "Microsoft.CodeAnalysis.CSharp.BoundConversion"; "Microsoft.CodeAnalysis.CSharp.BoundDefaultOperator"; "Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundDoStatement"; "Microsoft.CodeAnalysis.CSharp.BoundDup"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicCollectionElementInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicMemberAccess"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectInitializerMember"; "Microsoft.CodeAnalysis.CSharp.BoundEventAccess"; "Microsoft.CodeAnalysis.CSharp.BoundEventAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement"; "Microsoft.CodeAnalysis.CSharp.BoundFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundFieldInfo"; "Microsoft.CodeAnalysis.CSharp.BoundFieldInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundFixedLocalCollectionInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundFixedStatement"; "Microsoft.CodeAnalysis.CSharp.BoundForEachStatement"; "Microsoft.CodeAnalysis.CSharp.BoundForStatement"; "Microsoft.CodeAnalysis.CSharp.BoundGlobalStatementInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundGotoStatement"; "Microsoft.CodeAnalysis.CSharp.BoundHoistedFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundHostObjectMemberReference"; "Microsoft.CodeAnalysis.CSharp.BoundIfStatement"; "Microsoft.CodeAnalysis.CSharp.BoundImplicitReceiver"; "Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator"; "Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess"; "Microsoft.CodeAnalysis.CSharp.BoundIsOperator"; "Microsoft.CodeAnalysis.CSharp.BoundIteratorScope"; "Microsoft.CodeAnalysis.CSharp.BoundLabel"; "Microsoft.CodeAnalysis.CSharp.BoundLabeledStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLambda"; "Microsoft.CodeAnalysis.CSharp.BoundLiteral"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration"; "Microsoft.CodeAnalysis.CSharp.BoundLockStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLoopStatement"; "Microsoft.CodeAnalysis.CSharp.BoundMakeRefOperator"; "Microsoft.CodeAnalysis.CSharp.BoundMethodGroup"; "Microsoft.CodeAnalysis.CSharp.BoundMethodInfo"; "Microsoft.CodeAnalysis.CSharp.BoundMethodOrPropertyGroup"; "Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarations"; "Microsoft.CodeAnalysis.CSharp.BoundNamespaceExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNewT"; "Microsoft.CodeAnalysis.CSharp.BoundNoPiaObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator"; "Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpression"; "Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember"; "Microsoft.CodeAnalysis.CSharp.BoundParameter"; "Microsoft.CodeAnalysis.CSharp.BoundPointerElementAccess"; "Microsoft.CodeAnalysis.CSharp.BoundPointerIndirectionOperator"; "Microsoft.CodeAnalysis.CSharp.BoundPreviousSubmissionReference"; "Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess"; "Microsoft.CodeAnalysis.CSharp.BoundPropertyGroup"; "Microsoft.CodeAnalysis.CSharp.BoundQueryClause"; "Microsoft.CodeAnalysis.CSharp.BoundRangeVariable"; "Microsoft.CodeAnalysis.CSharp.BoundRefTypeOperator"; "Microsoft.CodeAnalysis.CSharp.BoundRefValueOperator"; "Microsoft.CodeAnalysis.CSharp.BoundReturnStatement"; "Microsoft.CodeAnalysis.CSharp.BoundSequence"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePoint"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePointExpression"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePointWithSpan"; "Microsoft.CodeAnalysis.CSharp.BoundSizeOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundStackAllocArrayCreation"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundStatementList"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchSection"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement"; "Microsoft.CodeAnalysis.CSharp.BoundThisReference"; "Microsoft.CodeAnalysis.CSharp.BoundThrowStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.BoundTryStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTypeExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTypeOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundTypeOrValueExpression"; "Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator"; "Microsoft.CodeAnalysis.CSharp.BoundUsingStatement"; "Microsoft.CodeAnalysis.CSharp.BoundWhileStatement"; "Microsoft.CodeAnalysis.CSharp.BoundYieldReturnStatement"; "Microsoft.CodeAnalysis.CSharp.UnboundLambda" }
   "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundNode" }
   "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor`2" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundAddressOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAnonymousObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundAnonymousPropertyDeclaration"; "Microsoft.CodeAnalysis.CSharp.BoundArgList"; "Microsoft.CodeAnalysis.CSharp.BoundArgListOperator"; "Microsoft.CodeAnalysis.CSharp.BoundArrayAccess"; "Microsoft.CodeAnalysis.CSharp.BoundArrayCreation"; "Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization"; "Microsoft.CodeAnalysis.CSharp.BoundArrayLength"; "Microsoft.CodeAnalysis.CSharp.BoundAsOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAttribute"; "Microsoft.CodeAnalysis.CSharp.BoundAwaitExpression"; "Microsoft.CodeAnalysis.CSharp.BoundBadExpression"; "Microsoft.CodeAnalysis.CSharp.BoundBadStatement"; "Microsoft.CodeAnalysis.CSharp.BoundBaseReference"; "Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator"; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundBreakStatement"; "Microsoft.CodeAnalysis.CSharp.BoundCall"; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundCollectionInitializerExpression"; "Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalGoto"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalOperator"; "Microsoft.CodeAnalysis.CSharp.BoundContinueStatement"; "Microsoft.CodeAnalysis.CSharp.BoundConversion"; "Microsoft.CodeAnalysis.CSharp.BoundDefaultOperator"; "Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundDoStatement"; "Microsoft.CodeAnalysis.CSharp.BoundDup"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicCollectionElementInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicMemberAccess"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectInitializerMember"; "Microsoft.CodeAnalysis.CSharp.BoundEventAccess"; "Microsoft.CodeAnalysis.CSharp.BoundEventAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement"; "Microsoft.CodeAnalysis.CSharp.BoundFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundFieldInfo"; "Microsoft.CodeAnalysis.CSharp.BoundFieldInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundFixedLocalCollectionInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundFixedStatement"; "Microsoft.CodeAnalysis.CSharp.BoundForEachStatement"; "Microsoft.CodeAnalysis.CSharp.BoundForStatement"; "Microsoft.CodeAnalysis.CSharp.BoundGlobalStatementInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundGotoStatement"; "Microsoft.CodeAnalysis.CSharp.BoundHoistedFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundHostObjectMemberReference"; "Microsoft.CodeAnalysis.CSharp.BoundIfStatement"; "Microsoft.CodeAnalysis.CSharp.BoundImplicitReceiver"; "Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator"; "Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess"; "Microsoft.CodeAnalysis.CSharp.BoundIsOperator"; "Microsoft.CodeAnalysis.CSharp.BoundIteratorScope"; "Microsoft.CodeAnalysis.CSharp.BoundLabel"; "Microsoft.CodeAnalysis.CSharp.BoundLabelStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLabeledStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLambda"; "Microsoft.CodeAnalysis.CSharp.BoundLiteral"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration"; "Microsoft.CodeAnalysis.CSharp.BoundLockStatement"; "Microsoft.CodeAnalysis.CSharp.BoundMakeRefOperator"; "Microsoft.CodeAnalysis.CSharp.BoundMethodGroup"; "Microsoft.CodeAnalysis.CSharp.BoundMethodInfo"; "Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarations"; "Microsoft.CodeAnalysis.CSharp.BoundNamespaceExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNewT"; "Microsoft.CodeAnalysis.CSharp.BoundNoOpStatement"; "Microsoft.CodeAnalysis.CSharp.BoundNoPiaObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator"; "Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpression"; "Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember"; "Microsoft.CodeAnalysis.CSharp.BoundParameter"; "Microsoft.CodeAnalysis.CSharp.BoundPointerElementAccess"; "Microsoft.CodeAnalysis.CSharp.BoundPointerIndirectionOperator"; "Microsoft.CodeAnalysis.CSharp.BoundPreviousSubmissionReference"; "Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess"; "Microsoft.CodeAnalysis.CSharp.BoundPropertyGroup"; "Microsoft.CodeAnalysis.CSharp.BoundQueryClause"; "Microsoft.CodeAnalysis.CSharp.BoundRangeVariable"; "Microsoft.CodeAnalysis.CSharp.BoundRefTypeOperator"; "Microsoft.CodeAnalysis.CSharp.BoundRefValueOperator"; "Microsoft.CodeAnalysis.CSharp.BoundReturnStatement"; "Microsoft.CodeAnalysis.CSharp.BoundSequence"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePoint"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePointExpression"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePointWithSpan"; "Microsoft.CodeAnalysis.CSharp.BoundSizeOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundStackAllocArrayCreation"; "Microsoft.CodeAnalysis.CSharp.BoundStatementList"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchSection"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement"; "Microsoft.CodeAnalysis.CSharp.BoundThisReference"; "Microsoft.CodeAnalysis.CSharp.BoundThrowStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTryStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTypeExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTypeOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundTypeOrValueExpression"; "Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator"; "Microsoft.CodeAnalysis.CSharp.BoundUsingStatement"; "Microsoft.CodeAnalysis.CSharp.BoundWhileStatement"; "Microsoft.CodeAnalysis.CSharp.BoundYieldBreakStatement"; "Microsoft.CodeAnalysis.CSharp.BoundYieldReturnStatement"; "Microsoft.CodeAnalysis.CSharp.UnboundLambda" }
   "Microsoft.CodeAnalysis.CSharp.BoundTreeWalker" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundAddressOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAnonymousObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundArgListOperator"; "Microsoft.CodeAnalysis.CSharp.BoundArrayAccess"; "Microsoft.CodeAnalysis.CSharp.BoundArrayCreation"; "Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization"; "Microsoft.CodeAnalysis.CSharp.BoundArrayLength"; "Microsoft.CodeAnalysis.CSharp.BoundAsOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAttribute"; "Microsoft.CodeAnalysis.CSharp.BoundAwaitExpression"; "Microsoft.CodeAnalysis.CSharp.BoundBadExpression"; "Microsoft.CodeAnalysis.CSharp.BoundBadStatement"; "Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator"; "Microsoft.CodeAnalysis.CSharp.BoundCall"; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundCollectionInitializerExpression"; "Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalGoto"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalOperator"; "Microsoft.CodeAnalysis.CSharp.BoundConversion"; "Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundDoStatement"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicCollectionElementInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicMemberAccess"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundEventAccess"; "Microsoft.CodeAnalysis.CSharp.BoundEventAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement"; "Microsoft.CodeAnalysis.CSharp.BoundFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundFieldInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundFixedLocalCollectionInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundFixedStatement"; "Microsoft.CodeAnalysis.CSharp.BoundForEachStatement"; "Microsoft.CodeAnalysis.CSharp.BoundForStatement"; "Microsoft.CodeAnalysis.CSharp.BoundGlobalStatementInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundGotoStatement"; "Microsoft.CodeAnalysis.CSharp.BoundIfStatement"; "Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator"; "Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess"; "Microsoft.CodeAnalysis.CSharp.BoundIsOperator"; "Microsoft.CodeAnalysis.CSharp.BoundIteratorScope"; "Microsoft.CodeAnalysis.CSharp.BoundLabeledStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLambda"; "Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration"; "Microsoft.CodeAnalysis.CSharp.BoundLockStatement"; "Microsoft.CodeAnalysis.CSharp.BoundMakeRefOperator"; "Microsoft.CodeAnalysis.CSharp.BoundMethodOrPropertyGroup"; "Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarations"; "Microsoft.CodeAnalysis.CSharp.BoundNewT"; "Microsoft.CodeAnalysis.CSharp.BoundNoPiaObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator"; "Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpression"; "Microsoft.CodeAnalysis.CSharp.BoundPointerElementAccess"; "Microsoft.CodeAnalysis.CSharp.BoundPointerIndirectionOperator"; "Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess"; "Microsoft.CodeAnalysis.CSharp.BoundQueryClause"; "Microsoft.CodeAnalysis.CSharp.BoundRangeVariable"; "Microsoft.CodeAnalysis.CSharp.BoundRefTypeOperator"; "Microsoft.CodeAnalysis.CSharp.BoundRefValueOperator"; "Microsoft.CodeAnalysis.CSharp.BoundReturnStatement"; "Microsoft.CodeAnalysis.CSharp.BoundSequence"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePoint"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePointExpression"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePointWithSpan"; "Microsoft.CodeAnalysis.CSharp.BoundSizeOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundStackAllocArrayCreation"; "Microsoft.CodeAnalysis.CSharp.BoundStatementList"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchSection"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement"; "Microsoft.CodeAnalysis.CSharp.BoundThrowStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.BoundTryStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTypeExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTypeOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator"; "Microsoft.CodeAnalysis.CSharp.BoundUsingStatement"; "Microsoft.CodeAnalysis.CSharp.BoundWhileStatement"; "Microsoft.CodeAnalysis.CSharp.BoundYieldReturnStatement"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundTryStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor" }
   "Microsoft.CodeAnalysis.CSharp.BoundTypeExpression" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundTypeOfOperator" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.BoundTypeExpression"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundTypeOrValueExpression" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.LookupResultKind"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind" }
   "Microsoft.CodeAnalysis.CSharp.BoundUsingStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarations"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundWhileStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundLoopStatement"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.BoundYieldBreakStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor" }
   "Microsoft.CodeAnalysis.CSharp.BoundYieldReturnStatement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNodeExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor" }
   "Microsoft.CodeAnalysis.CSharp.BuckStopsHereBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.ConstantFieldsInProgress"; "Microsoft.CodeAnalysis.CSharp.Imports"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol" }
   "Microsoft.CodeAnalysis.CSharp.BuiltInOperators" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorSignature"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.OperatorKindExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.UnaryOperatorSignature" }
   "Microsoft.CodeAnalysis.CSharp.CSDiagnostic" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpDiagnosticFormatter" }
   "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.DiagnosticInfoWithSymbols"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.CSharpCommandLineArguments" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions"; "Microsoft.CodeAnalysis.CSharp.CSharpParseOptions" }
   "Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCommandLineArguments"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions"; "Microsoft.CodeAnalysis.CSharp.CSharpParseOptions"; "Microsoft.CodeAnalysis.CSharp.ErrorFacts"; "Microsoft.CodeAnalysis.CSharp.LanguageVersion"; "Microsoft.CodeAnalysis.CSharp.LanguageVersionExtensions"; "Microsoft.CodeAnalysis.CSharp.LocalizableErrorArgument"; "Microsoft.CodeAnalysis.CSharp.MessageIDExtensions"; "Microsoft.CodeAnalysis.CSharp.MessageProvider"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts" }
   "Microsoft.CodeAnalysis.CSharp.CSharpCompilation" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BinderFactory"; "Microsoft.CodeAnalysis.CSharp.BuckStopsHereBinder"; "Microsoft.CodeAnalysis.CSharp.BuiltInOperators"; "Microsoft.CodeAnalysis.CSharp.CSDiagnostic"; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilationReference"; "Microsoft.CodeAnalysis.CSharp.CSharpExtensions"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree"; "Microsoft.CodeAnalysis.CSharp.ClsComplianceChecker"; "Microsoft.CodeAnalysis.CSharp.Compiler"; "Microsoft.CodeAnalysis.CSharp.ConstantFieldsInProgress"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.Conversions"; "Microsoft.CodeAnalysis.CSharp.ConversionsBase"; "Microsoft.CodeAnalysis.CSharp.DeclarationTable"; "Microsoft.CodeAnalysis.CSharp.DeclarationTreeBuilder"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.EntryPointCandidateFinder"; "Microsoft.CodeAnalysis.CSharp.ErrorCode"; "Microsoft.CodeAnalysis.CSharp.ErrorFacts"; "Microsoft.CodeAnalysis.CSharp.Imports"; "Microsoft.CodeAnalysis.CSharp.InContainerBinder"; "Microsoft.CodeAnalysis.CSharp.LexicalOrderSymbolComparer"; "Microsoft.CodeAnalysis.CSharp.MessageProvider"; "Microsoft.CodeAnalysis.CSharp.NamespaceOrTypeAndUsingDirective"; "Microsoft.CodeAnalysis.CSharp.RootSingleNamespaceDeclaration"; "Microsoft.CodeAnalysis.CSharp.SingleNamespaceOrTypeDeclaration"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeManager"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ConstantValueUtils"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ImplicitNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MergedNamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingCorLibrarySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingMetadataTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingNamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceExtent"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NonMissingModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind"; "Microsoft.CodeAnalysis.CSharp.SyntaxTreeSemanticModel" }
   "Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.MessageProvider" }
   "Microsoft.CodeAnalysis.CSharp.CSharpCompilationReference" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation" }
   "Microsoft.CodeAnalysis.CSharp.CSharpCompiler" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCommandLineArguments"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions"; "Microsoft.CodeAnalysis.CSharp.CSharpParseOptions"; "Microsoft.CodeAnalysis.CSharp.CommandLineDiagnosticFormatter" }
   "Microsoft.CodeAnalysis.CSharp.CSharpControlFlowAnalysis" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.EntryPointsWalker"; "Microsoft.CodeAnalysis.CSharp.ExitPointsWalker"; "Microsoft.CodeAnalysis.CSharp.RegionAnalysisContext"; "Microsoft.CodeAnalysis.CSharp.RegionReachableWalker"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.CSharpDataFlowAnalysis" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AlwaysAssignedWalker"; "Microsoft.CodeAnalysis.CSharp.DataFlowsInWalker"; "Microsoft.CodeAnalysis.CSharp.DataFlowsOutWalker"; "Microsoft.CodeAnalysis.CSharp.ReadWriteWalker"; "Microsoft.CodeAnalysis.CSharp.RegionAnalysisContext"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.UnassignedAddressTakenVariablesWalker"; "Microsoft.CodeAnalysis.CSharp.UnassignedVariablesWalker"; "Microsoft.CodeAnalysis.CSharp.VariablesDeclaredWalker" }
   "Microsoft.CodeAnalysis.CSharp.CSharpDiagnosticFormatter" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.ErrorFacts" }
   "Microsoft.CodeAnalysis.CSharp.CSharpExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AwaitExpressionInfo"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree"; "Microsoft.CodeAnalysis.CSharp.CSharpTypeInfo"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo"; "Microsoft.CodeAnalysis.CSharp.QueryClauseInfo"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SelectOrGroupClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxReplacer"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.CSharpParseOptions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.LanguageVersion"; "Microsoft.CodeAnalysis.CSharp.LanguageVersionExtensions" }
   "Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AttributeSemanticModel"; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorSignature"; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BinderFlagsExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundAttribute"; "Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator"; "Microsoft.CodeAnalysis.CSharp.BoundCall"; "Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundGlobalStatementInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator"; "Microsoft.CodeAnalysis.CSharp.BoundKind"; "Microsoft.CodeAnalysis.CSharp.BoundLambda"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundMethodGroup"; "Microsoft.CodeAnalysis.CSharp.BoundMethodOrPropertyGroup"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundPropertyGroup"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpExtensions"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpTypeInfo"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.ExtensionMethodScope"; "Microsoft.CodeAnalysis.CSharp.ExtensionMethodScopeEnumerator"; "Microsoft.CodeAnalysis.CSharp.ExtensionMethodScopes"; "Microsoft.CodeAnalysis.CSharp.LookupOptions"; "Microsoft.CodeAnalysis.CSharp.LookupResultKind"; "Microsoft.CodeAnalysis.CSharp.OperatorFacts"; "Microsoft.CodeAnalysis.CSharp.OperatorKindExtensions"; "Microsoft.CodeAnalysis.CSharp.SingleLookupResult"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.SymbolInfoFactory"; "Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PreprocessingSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedIntrinsicOperatorSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ThisParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SelectOrGroupClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind"; "Microsoft.CodeAnalysis.CSharp.SyntaxTreeSemanticModel"; "Microsoft.CodeAnalysis.CSharp.UnboundLambda"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor`1" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor`2" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpExtensions"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.FunctionExtensions"; "Microsoft.CodeAnalysis.CSharp.LookupPosition"; "Microsoft.CodeAnalysis.CSharp.MessageProvider"; "Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxDiagnosticInfoList"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxList"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxTrivia"; "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxFormatter"; "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxNavigator"; "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxNodeRemover"; "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxReplacer"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BranchingDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SelectOrGroupClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SkippedTokensTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpExtensions"; "Microsoft.CodeAnalysis.CSharp.CSharpParseOptions"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.SimpleSyntaxReference"; "Microsoft.CodeAnalysis.CSharp.Syntax.CSharpLineDirectiveMap"; "Microsoft.CodeAnalysis.CSharp.Syntax.CSharpPragmaWarningStateMap"; "Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveStack"; "Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind"; "Microsoft.CodeAnalysis.CSharp.SyntaxTreeDiagnosticEnumerator" }
   "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SkippedTokensTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SkippedTokensTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxWalker" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor" }
   "Microsoft.CodeAnalysis.CSharp.CSharpTypeInfo" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.CaptureWalkerEmptyStructTypeCache" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.EmptyStructTypeCache" }
   "Microsoft.CodeAnalysis.CSharp.CapturedToExpressionSymbolReplacement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.CapturedSymbolReplacement" }
   "Microsoft.CodeAnalysis.CSharp.CapturedToFrameSymbolReplacement" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundFieldAccess"; "Microsoft.CodeAnalysis.CSharp.CapturedSymbolReplacement"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedFieldSymbolBase" }
   "Microsoft.CodeAnalysis.CSharp.CatchClauseBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.LocalScopeBinder"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceLocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.ClsComplianceChecker" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnostic"; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor"; "Microsoft.CodeAnalysis.CSharp.Compiler"; "Microsoft.CodeAnalysis.CSharp.ErrorCode"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind"; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BoundAddressOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundArgListOperator"; "Microsoft.CodeAnalysis.CSharp.BoundArrayAccess"; "Microsoft.CodeAnalysis.CSharp.BoundArrayCreation"; "Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization"; "Microsoft.CodeAnalysis.CSharp.BoundArrayLength"; "Microsoft.CodeAnalysis.CSharp.BoundAsOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator"; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCall"; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalGoto"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalOperator"; "Microsoft.CodeAnalysis.CSharp.BoundConversion"; "Microsoft.CodeAnalysis.CSharp.BoundDefaultOperator"; "Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundDup"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement"; "Microsoft.CodeAnalysis.CSharp.BoundFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundFieldInfo"; "Microsoft.CodeAnalysis.CSharp.BoundGotoStatement"; "Microsoft.CodeAnalysis.CSharp.BoundIsOperator"; "Microsoft.CodeAnalysis.CSharp.BoundIteratorScope"; "Microsoft.CodeAnalysis.CSharp.BoundKind"; "Microsoft.CodeAnalysis.CSharp.BoundLabelStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundMakeRefOperator"; "Microsoft.CodeAnalysis.CSharp.BoundMethodGroup"; "Microsoft.CodeAnalysis.CSharp.BoundMethodInfo"; "Microsoft.CodeAnalysis.CSharp.BoundMethodOrPropertyGroup"; "Microsoft.CodeAnalysis.CSharp.BoundNoOpStatement"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator"; "Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundParameter"; "Microsoft.CodeAnalysis.CSharp.BoundPointerIndirectionOperator"; "Microsoft.CodeAnalysis.CSharp.BoundRefTypeOperator"; "Microsoft.CodeAnalysis.CSharp.BoundRefValueOperator"; "Microsoft.CodeAnalysis.CSharp.BoundReturnStatement"; "Microsoft.CodeAnalysis.CSharp.BoundSequence"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePoint"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePointExpression"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePointWithSpan"; "Microsoft.CodeAnalysis.CSharp.BoundSizeOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundStackAllocArrayCreation"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundStatementList"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchSection"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement"; "Microsoft.CodeAnalysis.CSharp.BoundThisReference"; "Microsoft.CodeAnalysis.CSharp.BoundThrowStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.BoundTryStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTypeOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.ConversionKind"; "Microsoft.CodeAnalysis.CSharp.ConversionKindExtensions"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.DiagnosticsPass"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.NoOpStatementFlavor"; "Microsoft.CodeAnalysis.CSharp.OperatorKindExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedNames"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedFieldSymbolBase"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind" }
   "Microsoft.CodeAnalysis.CSharp.CodeGen.DummyLocal" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol" }
   "Microsoft.CodeAnalysis.CSharp.CodeGen.LocalDefUseInfo" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CodeGen.LocalDefUseSpan" }
   "Microsoft.CodeAnalysis.CSharp.CodeGen.Optimizer" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.CodeGen.LocalDefUseInfo"; "Microsoft.CodeAnalysis.CSharp.CodeGen.LocalDefUseSpan"; "Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol" }
   "Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass1" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundAddressOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization"; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator"; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCall"; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalGoto"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalOperator"; "Microsoft.CodeAnalysis.CSharp.BoundConversion"; "Microsoft.CodeAnalysis.CSharp.BoundDup"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement"; "Microsoft.CodeAnalysis.CSharp.BoundFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundGotoStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLabelStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundMakeRefOperator"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator"; "Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundParameter"; "Microsoft.CodeAnalysis.CSharp.BoundReturnStatement"; "Microsoft.CodeAnalysis.CSharp.BoundSequence"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.BoundTreeWalker"; "Microsoft.CodeAnalysis.CSharp.BoundTryStatement"; "Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator"; "Microsoft.CodeAnalysis.CSharp.CodeGen.CodeGenerator"; "Microsoft.CodeAnalysis.CSharp.CodeGen.DummyLocal"; "Microsoft.CodeAnalysis.CSharp.CodeGen.ExprContext"; "Microsoft.CodeAnalysis.CSharp.CodeGen.LocalDefUseInfo"; "Microsoft.CodeAnalysis.CSharp.CodeGen.LocalDefUseSpan"; "Microsoft.CodeAnalysis.CSharp.ConversionKindExtensions"; "Microsoft.CodeAnalysis.CSharp.OperatorKindExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.CodeGen.StackOptimizerPass2" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundDup"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.CodeGen.LocalDefUseInfo"; "Microsoft.CodeAnalysis.CSharp.CodeGen.LocalDefUseSpan"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol" }
   "Microsoft.CodeAnalysis.CSharp.CommandLineDiagnosticFormatter" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpDiagnosticFormatter" }
   "Microsoft.CodeAnalysis.CSharp.Compiler" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AccessCheck"; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BinderFactory"; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCall"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement"; "Microsoft.CodeAnalysis.CSharp.BoundFieldInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundGlobalStatementInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNodeExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundThisReference"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions"; "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.DocumentationCommentCompiler"; "Microsoft.CodeAnalysis.CSharp.ExecutableCodeBinder"; "Microsoft.CodeAnalysis.CSharp.Imports"; "Microsoft.CodeAnalysis.CSharp.LocalScopeBinder"; "Microsoft.CodeAnalysis.CSharp.MethodBodySynthesizer"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberFieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.SynthesizedMethodMetadataCompiler" }
   "Microsoft.CodeAnalysis.CSharp.ConstantFieldsInProgress" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceFieldSymbol" }
   "Microsoft.CodeAnalysis.CSharp.ConstantFieldsInProgressBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.ConstantFieldsInProgress" }
   "Microsoft.CodeAnalysis.CSharp.ContextualAttributeBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.ControlFlowPass" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundGotoStatement"; "Microsoft.CodeAnalysis.CSharp.BoundKind"; "Microsoft.CodeAnalysis.CSharp.BoundLabeledStatement"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundStatementList"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchSection"; "Microsoft.CodeAnalysis.CSharp.BoundTryStatement"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Conversion" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.ConversionKind"; "Microsoft.CodeAnalysis.CSharp.ConversionKindExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.UserDefinedConversionAnalysis"; "Microsoft.CodeAnalysis.CSharp.UserDefinedConversionResult"; "Microsoft.CodeAnalysis.CSharp.UserDefinedConversionResultKind" }
   "Microsoft.CodeAnalysis.CSharp.Conversions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AnalyzedArguments"; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BoundMethodGroup"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.ConversionsBase"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.MethodGroup"; "Microsoft.CodeAnalysis.CSharp.MethodGroupResolution"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.ConversionsBase" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BestIndex"; "Microsoft.CodeAnalysis.CSharp.BetterResult"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundLambda"; "Microsoft.CodeAnalysis.CSharp.BoundLiteral"; "Microsoft.CodeAnalysis.CSharp.BoundMethodGroup"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.ErrorFacts"; "Microsoft.CodeAnalysis.CSharp.ImmutableArrayExtensions"; "Microsoft.CodeAnalysis.CSharp.LambdaConversionResult"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LiteralExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.UnboundLambda"; "Microsoft.CodeAnalysis.CSharp.UserDefinedConversionAnalysis"; "Microsoft.CodeAnalysis.CSharp.UserDefinedConversionResult" }
   "Microsoft.CodeAnalysis.CSharp.DataFlowPass" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundAddressOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundConversion"; "Microsoft.CodeAnalysis.CSharp.BoundEventAccess"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundForEachStatement"; "Microsoft.CodeAnalysis.CSharp.BoundForStatement"; "Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator"; "Microsoft.CodeAnalysis.CSharp.BoundLambda"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember"; "Microsoft.CodeAnalysis.CSharp.BoundParameter"; "Microsoft.CodeAnalysis.CSharp.BoundRangeVariable"; "Microsoft.CodeAnalysis.CSharp.BoundSequence"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement"; "Microsoft.CodeAnalysis.CSharp.BoundUsingStatement"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.ConversionKindExtensions"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.EmptyStructTypeCache"; "Microsoft.CodeAnalysis.CSharp.ErrorCode"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.RangeVariableSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts" }
   "Microsoft.CodeAnalysis.CSharp.DataFlowsInWalker" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundRangeVariable"; "Microsoft.CodeAnalysis.CSharp.BoundStatementExtensions"; "Microsoft.CodeAnalysis.CSharp.DataFlowPass"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.DataFlowsOutWalker" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundParameter"; "Microsoft.CodeAnalysis.CSharp.DataFlowPass"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.DeclarationTable" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Declaration"; "Microsoft.CodeAnalysis.CSharp.MergedNamespaceDeclaration"; "Microsoft.CodeAnalysis.CSharp.RootSingleNamespaceDeclaration"; "Microsoft.CodeAnalysis.CSharp.SingleNamespaceDeclaration" }
   "Microsoft.CodeAnalysis.CSharp.DeclarationTreeBuilder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnostic"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Declaration"; "Microsoft.CodeAnalysis.CSharp.DeclarationModifiers"; "Microsoft.CodeAnalysis.CSharp.MessageProvider"; "Microsoft.CodeAnalysis.CSharp.OperatorFacts"; "Microsoft.CodeAnalysis.CSharp.RootSingleNamespaceDeclaration"; "Microsoft.CodeAnalysis.CSharp.SingleNamespaceDeclaration"; "Microsoft.CodeAnalysis.CSharp.SingleNamespaceOrTypeDeclaration"; "Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModifierUtils"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AccessorListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BasePropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CompilationUnitSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConstructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConversionOperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DelegateDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EventDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EventFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NamespaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.VariableDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax" }
   "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnostic"; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.DiagnosticInfoWithSymbols" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.MessageProvider"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.DiagnosticsPass" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorSignature"; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BoundAddressOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundArrayCreation"; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator"; "Microsoft.CodeAnalysis.CSharp.BoundCall"; "Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundConversion"; "Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation"; "Microsoft.CodeAnalysis.CSharp.BoundEventAccess"; "Microsoft.CodeAnalysis.CSharp.BoundEventAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundLockStatement"; "Microsoft.CodeAnalysis.CSharp.BoundMethodGroup"; "Microsoft.CodeAnalysis.CSharp.BoundMethodOrPropertyGroup"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator"; "Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundParameter"; "Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.BoundTreeWalker"; "Microsoft.CodeAnalysis.CSharp.BoundTryStatement"; "Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.ConversionKindExtensions"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.OperatorKindExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SpecialTypeExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.DisposeCheckerPass" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator"; "Microsoft.CodeAnalysis.CSharp.BoundCall"; "Microsoft.CodeAnalysis.CSharp.BoundConversion"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundKind"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundParameter"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.ConversionsBase"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.DocumentationCommentCompiler" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BinderFactory"; "Microsoft.CodeAnalysis.CSharp.BuckStopsHereBinder"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpParseOptions"; "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxWalker"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.ErrorFacts"; "Microsoft.CodeAnalysis.CSharp.SourceDocumentationCommentUtils"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxExtensions"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharp.WithClassTypeParametersBinder"; "Microsoft.CodeAnalysis.CSharp.WithMethodTypeParametersBinder"; "Microsoft.CodeAnalysis.CSharp.WithParametersBinder"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.DocumentationCommentIDVisitor" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.EarlyWellKnownAttributeBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Emit.AssemblyReference" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol" }
   "Microsoft.CodeAnalysis.CSharp.Emit.DefinitionMap" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Emit.MethodDefinitionEntry"; "Microsoft.CodeAnalysis.CSharp.Emit.SymbolMatcher"; "Microsoft.CodeAnalysis.CSharp.LocalVariableDeclaratorsVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedNames"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.MetadataDecoder"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEEventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEFieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PENamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEPropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TempKind"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Emit.EmitHelpers" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Emit.PEDeltaAssemblyBuilder"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Emit.SymbolMatcher"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.Emit.GenericMethodInstanceReference" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.MethodReference"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Emit.GenericNamespaceTypeInstanceReference" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Emit.GenericTypeInstanceReference" }
   "Microsoft.CodeAnalysis.CSharp.Emit.GenericNestedTypeInstanceReference" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.GenericTypeInstanceReference"; "Microsoft.CodeAnalysis.CSharp.Emit.NamedTypeReference"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.Emit.GenericTypeInstanceReference" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NamedTypeReference"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Emit.GetLocalVariableDeclaratorsVisitor" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.LocalVariableDeclaratorsVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Emit.MethodDefinitionEntry" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Emit.MethodReference" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Emit.TypeMemberReference"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ByRefReturnErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Emit.ModuleReference" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Emit.NamedTypeReference" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedEvent" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedField"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedMethod"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedParameter"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedProperty"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedType"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypeParameter"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedField" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedEvent"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedMethod"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedParameter"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedProperty"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedType"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypeParameter"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedMethod" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedEvent"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedField"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedParameter"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedProperty"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedType"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypeParameter"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedParameter" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedEvent"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedField"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedMethod"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedProperty"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedType"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypeParameter"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedProperty" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedEvent"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedField"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedMethod"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedParameter"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedType"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypeParameter"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ByRefReturnErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedType" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedEvent"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedField"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedMethod"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedParameter"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedProperty"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypeParameter"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypeParameter" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedEvent"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedField"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedMethod"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedParameter"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedProperty"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedType"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.CSDiagnostic"; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedEvent"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedField"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedMethod"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedParameter"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedProperty"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedType"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypeParameter"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Emit.PEAssemblyBuilderBase" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnostic"; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Emit.PEDeltaAssemblyBuilder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Emit.DefinitionMap"; "Microsoft.CodeAnalysis.CSharp.Emit.MethodDefinitionEntry"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedEvent"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedField"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedMethod"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedParameter"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedProperty"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedType"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypeParameter"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeManager"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedNames"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnostic"; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Emit.AssemblyReference"; "Microsoft.CodeAnalysis.CSharp.Emit.ModuleReference"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedEvent"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedField"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedMethod"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedParameter"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedProperty"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedType"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypeParameter"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.ParameterTypeInformation"; "Microsoft.CodeAnalysis.CSharp.Emit.SpecializedMethodReference"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeManager"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.DynamicTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FixedFieldImplementationType"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Emit.ParameterTypeInformation" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Emit.SpecializedFieldReference" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Emit.TypeMemberReference"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Emit.SpecializedGenericMethodInstanceReference" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.MethodReference"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Emit.SpecializedMethodReference"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Emit.SpecializedGenericNestedTypeInstanceReference" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NamedTypeReference"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Emit.SpecializedNestedTypeReference"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Emit.SpecializedMethodReference" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Emit.MethodReference"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Emit.SpecializedNestedTypeReference" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NamedTypeReference"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Emit.SymbolMatcher" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeManager"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpCustomModifier"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.IndexedTypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PENamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Emit.TypeMemberReference" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.EmptyStructTypeCache" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AccessCheck"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.EntryPointCandidateFinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.EntryPointsWalker" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundStatementExtensions"; "Microsoft.CodeAnalysis.CSharp.ControlFlowPass"; "Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.EnumConversions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.SyntaxKind" }
   "Microsoft.CodeAnalysis.CSharp.ErrorFacts" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.ErrorCode" }
   "Microsoft.CodeAnalysis.CSharp.ExecutableCodeBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.InMethodBinder"; "Microsoft.CodeAnalysis.CSharp.LocalBinderFactory"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.ExitPointsWalker" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundBreakStatement"; "Microsoft.CodeAnalysis.CSharp.BoundContinueStatement"; "Microsoft.CodeAnalysis.CSharp.BoundGotoStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLabelStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLoopStatement"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement"; "Microsoft.CodeAnalysis.CSharp.ControlFlowPass"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.ExpressionLambdaRewriter" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind"; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BoundArrayAccess"; "Microsoft.CodeAnalysis.CSharp.BoundArrayCreation"; "Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization"; "Microsoft.CodeAnalysis.CSharp.BoundArrayLength"; "Microsoft.CodeAnalysis.CSharp.BoundAsOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundBadExpression"; "Microsoft.CodeAnalysis.CSharp.BoundBaseReference"; "Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator"; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCall"; "Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundCollectionInitializerExpression"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalOperator"; "Microsoft.CodeAnalysis.CSharp.BoundConversion"; "Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement"; "Microsoft.CodeAnalysis.CSharp.BoundFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundIsOperator"; "Microsoft.CodeAnalysis.CSharp.BoundKind"; "Microsoft.CodeAnalysis.CSharp.BoundLambda"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundMethodGroup"; "Microsoft.CodeAnalysis.CSharp.BoundMethodOrPropertyGroup"; "Microsoft.CodeAnalysis.CSharp.BoundNewT"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator"; "Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpression"; "Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember"; "Microsoft.CodeAnalysis.CSharp.BoundParameter"; "Microsoft.CodeAnalysis.CSharp.BoundPointerElementAccess"; "Microsoft.CodeAnalysis.CSharp.BoundPointerIndirectionOperator"; "Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess"; "Microsoft.CodeAnalysis.CSharp.BoundReturnStatement"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePoint"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePointWithSpan"; "Microsoft.CodeAnalysis.CSharp.BoundSizeOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundStatementList"; "Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.ConversionsBase"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.OperatorKindExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeManager"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.SyntheticBoundNodeFactory"; "Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind" }
   "Microsoft.CodeAnalysis.CSharp.ExtensionMethodScope" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder" }
   "Microsoft.CodeAnalysis.CSharp.ExtensionMethodScopeEnumerator" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.ExtensionMethodScope" }
   "Microsoft.CodeAnalysis.CSharp.ExtensionMethodScopes" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.ExtensionMethodScopeEnumerator" }
   "Microsoft.CodeAnalysis.CSharp.FixedStatementBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.LocalScopeBinder"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceLocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax" }
   "Microsoft.CodeAnalysis.CSharp.FlowAnalysisPass" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.ControlFlowPass"; "Microsoft.CodeAnalysis.CSharp.DataFlowPass"; "Microsoft.CodeAnalysis.CSharp.DisposeCheckerPass"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.ForEachEnumeratorInfo" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BinderFlags"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.ForEachLoopBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AnalyzedArguments"; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BoundBadExpression"; "Microsoft.CodeAnalysis.CSharp.BoundCall"; "Microsoft.CodeAnalysis.CSharp.BoundConversion"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundForEachStatement"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTypeExpression"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.ConversionsBase"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.ForEachEnumeratorInfo"; "Microsoft.CodeAnalysis.CSharp.LocalScopeBinder"; "Microsoft.CodeAnalysis.CSharp.LocalizableErrorArgument"; "Microsoft.CodeAnalysis.CSharp.LookupResult"; "Microsoft.CodeAnalysis.CSharp.LoopBinder"; "Microsoft.CodeAnalysis.CSharp.MessageIDExtensions"; "Microsoft.CodeAnalysis.CSharp.OverloadResolution"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.SymbolDistinguisher"; "Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.DynamicTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceLocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Conversion" }
   "Microsoft.CodeAnalysis.CSharp.ForLoopBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.LocalScopeBinder"; "Microsoft.CodeAnalysis.CSharp.LoopBinder"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceLocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax" }
   "Microsoft.CodeAnalysis.CSharp.HostObjectModelBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.LookupResult"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingMetadataTypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.ImplicitlyTypedFieldBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol" }
   "Microsoft.CodeAnalysis.CSharp.ImplicitlyTypedLocalBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Imports" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AliasAndExternAliasDirective"; "Microsoft.CodeAnalysis.CSharp.AliasAndUsingDirective"; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BuckStopsHereBinder"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.InContainerBinder"; "Microsoft.CodeAnalysis.CSharp.LocalizableErrorArgument"; "Microsoft.CodeAnalysis.CSharp.LookupOptionExtensions"; "Microsoft.CodeAnalysis.CSharp.MessageIDExtensions"; "Microsoft.CodeAnalysis.CSharp.NamespaceOrTypeAndUsingDirective"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolCompletionState"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory" }
   "Microsoft.CodeAnalysis.CSharp.InContainerBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Imports"; "Microsoft.CodeAnalysis.CSharp.LookupResult"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MergedNamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.InMethodBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.LocalScopeBinder"; "Microsoft.CodeAnalysis.CSharp.LookupOptionExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CatchDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ForEachStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FromClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.InvocationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.JoinClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.JoinIntoClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LetClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryContinuationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.VariableDeclaratorSyntax" }
   "Microsoft.CodeAnalysis.CSharp.InitializerSemanticModel" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.MemberSemanticModel"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceEnumConstantSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.InteractiveUsingsBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Imports"; "Microsoft.CodeAnalysis.CSharp.NamespaceOrTypeAndUsingDirective"; "Microsoft.CodeAnalysis.CSharp.UsingsBinder" }
   "Microsoft.CodeAnalysis.CSharp.IteratorAndAsyncCaptureWalker" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundParameter"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CaptureWalkerEmptyStructTypeCache"; "Microsoft.CodeAnalysis.CSharp.DataFlowPass"; "Microsoft.CodeAnalysis.CSharp.OutsideVariablesUsedInside"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.IteratorMethodToClassRewriter" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalGoto"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundGotoStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLabel"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchSection"; "Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.BoundTreeWalker"; "Microsoft.CodeAnalysis.CSharp.BoundTryStatement"; "Microsoft.CodeAnalysis.CSharp.BoundYieldReturnStatement"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.LabelCollector"; "Microsoft.CodeAnalysis.CSharp.StateMachineMethodToClassRewriter"; "Microsoft.CodeAnalysis.CSharp.StateMachineStates"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInstanceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.SyntheticBoundNodeFactory" }
   "Microsoft.CodeAnalysis.CSharp.IteratorRewriter" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CapturedSymbolReplacement"; "Microsoft.CodeAnalysis.CSharp.IteratorMethodToClassRewriter"; "Microsoft.CodeAnalysis.CSharp.StateMachineRewriter"; "Microsoft.CodeAnalysis.CSharp.StateMachineStates"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedNames"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedContainer"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedImplementationMethod"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInstanceConstructor"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.SyntheticBoundNodeFactory" }
   "Microsoft.CodeAnalysis.CSharp.LabelCollector" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundLabelStatement"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeWalker"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol" }
   "Microsoft.CodeAnalysis.CSharp.LambdaRewriter" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCall"; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundConversion"; "Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement"; "Microsoft.CodeAnalysis.CSharp.BoundFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundLambda"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundMethodGroup"; "Microsoft.CodeAnalysis.CSharp.BoundMethodOrPropertyGroup"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNodeExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundParameter"; "Microsoft.CodeAnalysis.CSharp.BoundSequence"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePoint"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundStatementList"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement"; "Microsoft.CodeAnalysis.CSharp.BoundThisReference"; "Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.BoundTreeWalker"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CapturedSymbolReplacement"; "Microsoft.CodeAnalysis.CSharp.CapturedToFrameSymbolReplacement"; "Microsoft.CodeAnalysis.CSharp.Compiler"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.FlowAnalysisPass"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedNames"; "Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodToClassRewriter"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedCapturedVariable"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedContainer"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedFieldSymbolBase"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInstanceConstructor"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedLocal"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.TypeCompilationState"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.LanguageVersionExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.LanguageVersion" }
   "Microsoft.CodeAnalysis.CSharp.LazyObsoleteDiagnosticInfo" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BinderFlags"; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.MessageProvider"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ObsoleteAttributeHelpers" }
   "Microsoft.CodeAnalysis.CSharp.LexicalOrderSymbolComparer" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LexicalSortKey" }
   "Microsoft.CodeAnalysis.CSharp.LocalBinderFactory" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BinderFlagsExtensions"; "Microsoft.CodeAnalysis.CSharp.BlockBinder"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.CatchClauseBinder"; "Microsoft.CodeAnalysis.CSharp.FixedStatementBinder"; "Microsoft.CodeAnalysis.CSharp.ForEachLoopBinder"; "Microsoft.CodeAnalysis.CSharp.ForLoopBinder"; "Microsoft.CodeAnalysis.CSharp.LockBinder"; "Microsoft.CodeAnalysis.CSharp.SwitchBinder"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions"; "Microsoft.CodeAnalysis.CSharp.UsingStatementBinder"; "Microsoft.CodeAnalysis.CSharp.WhileBinder" }
   "Microsoft.CodeAnalysis.CSharp.LocalInProgressBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol" }
   "Microsoft.CodeAnalysis.CSharp.LocalRewriter" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind"; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorSignature"; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BoundAnonymousObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundArrayAccess"; "Microsoft.CodeAnalysis.CSharp.BoundArrayCreation"; "Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization"; "Microsoft.CodeAnalysis.CSharp.BoundArrayLength"; "Microsoft.CodeAnalysis.CSharp.BoundAsOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundBadExpression"; "Microsoft.CodeAnalysis.CSharp.BoundBadStatement"; "Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator"; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundBreakStatement"; "Microsoft.CodeAnalysis.CSharp.BoundCall"; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundCollectionInitializerExpression"; "Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalGoto"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalOperator"; "Microsoft.CodeAnalysis.CSharp.BoundContinueStatement"; "Microsoft.CodeAnalysis.CSharp.BoundConversion"; "Microsoft.CodeAnalysis.CSharp.BoundDefaultOperator"; "Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundDoStatement"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicCollectionElementInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicMemberAccess"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundEventAccess"; "Microsoft.CodeAnalysis.CSharp.BoundEventAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement"; "Microsoft.CodeAnalysis.CSharp.BoundFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundFixedLocalCollectionInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundFixedStatement"; "Microsoft.CodeAnalysis.CSharp.BoundForEachStatement"; "Microsoft.CodeAnalysis.CSharp.BoundForStatement"; "Microsoft.CodeAnalysis.CSharp.BoundGotoStatement"; "Microsoft.CodeAnalysis.CSharp.BoundIfStatement"; "Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator"; "Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess"; "Microsoft.CodeAnalysis.CSharp.BoundIsOperator"; "Microsoft.CodeAnalysis.CSharp.BoundKind"; "Microsoft.CodeAnalysis.CSharp.BoundLabelStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLabeledStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLambda"; "Microsoft.CodeAnalysis.CSharp.BoundLiteral"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration"; "Microsoft.CodeAnalysis.CSharp.BoundLockStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLoopStatement"; "Microsoft.CodeAnalysis.CSharp.BoundMethodGroup"; "Microsoft.CodeAnalysis.CSharp.BoundMethodOrPropertyGroup"; "Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarations"; "Microsoft.CodeAnalysis.CSharp.BoundNewT"; "Microsoft.CodeAnalysis.CSharp.BoundNoPiaObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator"; "Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpression"; "Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerMember"; "Microsoft.CodeAnalysis.CSharp.BoundParameter"; "Microsoft.CodeAnalysis.CSharp.BoundPointerElementAccess"; "Microsoft.CodeAnalysis.CSharp.BoundPointerIndirectionOperator"; "Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess"; "Microsoft.CodeAnalysis.CSharp.BoundQueryClause"; "Microsoft.CodeAnalysis.CSharp.BoundRangeVariable"; "Microsoft.CodeAnalysis.CSharp.BoundRefTypeOperator"; "Microsoft.CodeAnalysis.CSharp.BoundReturnStatement"; "Microsoft.CodeAnalysis.CSharp.BoundSequence"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePoint"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePointWithSpan"; "Microsoft.CodeAnalysis.CSharp.BoundStackAllocArrayCreation"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundStatementList"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchSection"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement"; "Microsoft.CodeAnalysis.CSharp.BoundThisReference"; "Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.BoundTryStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTypeExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTypeOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator"; "Microsoft.CodeAnalysis.CSharp.BoundUsingStatement"; "Microsoft.CodeAnalysis.CSharp.BoundWhileStatement"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.ConversionKind"; "Microsoft.CodeAnalysis.CSharp.ConversionKindExtensions"; "Microsoft.CodeAnalysis.CSharp.ConversionsBase"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedEvent"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedField"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedMethod"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedParameter"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedProperty"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedType"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypeParameter"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.ForEachEnumeratorInfo"; "Microsoft.CodeAnalysis.CSharp.LoweredDynamicOperation"; "Microsoft.CodeAnalysis.CSharp.LoweredDynamicOperationFactory"; "Microsoft.CodeAnalysis.CSharp.OperatorKindExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.ConstantValueUtils"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ImplicitNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedStringSwitchHashMethod"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions"; "Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields"; "Microsoft.CodeAnalysis.CSharp.SyntheticBoundNodeFactory"; "Microsoft.CodeAnalysis.CSharp.TypeCompilationState"; "Microsoft.CodeAnalysis.CSharp.TypeConversions"; "Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind"; "Microsoft.CodeAnalysis.CSharp.UnmatchedGotoFinder" }
   "Microsoft.CodeAnalysis.CSharp.LocalScopeBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.LookupOptionExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.LocalVariableDeclaratorsVisitor" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxWalker"; "Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.LocalizableErrorArgument" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.ErrorFacts"; "Microsoft.CodeAnalysis.CSharp.MessageID" }
   "Microsoft.CodeAnalysis.CSharp.LockBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundLockStatement"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.LockOrUsingStatementExpressionHandler"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.LockOrUsingStatementExpressionHandler" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundParameter"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.LookupPosition" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxNavigator"; "Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.LookupResult" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.LocalizableErrorArgument"; "Microsoft.CodeAnalysis.CSharp.LookupResultKind"; "Microsoft.CodeAnalysis.CSharp.MessageIDExtensions"; "Microsoft.CodeAnalysis.CSharp.SingleLookupResult"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.LookupSymbolsInfo" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.LoopBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.LocalScopeBinder"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol" }
   "Microsoft.CodeAnalysis.CSharp.LoweredDynamicOperation" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundBadExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.SyntheticBoundNodeFactory" }
   "Microsoft.CodeAnalysis.CSharp.LoweredDynamicOperationFactory" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundKind"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.LoweredDynamicOperation"; "Microsoft.CodeAnalysis.CSharp.OperatorKindExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.DynamicTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedNames"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedContainer"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedFieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.SyntheticBoundNodeFactory"; "Microsoft.CodeAnalysis.CSharp.TypeCompilationState" }
   "Microsoft.CodeAnalysis.CSharp.MemberAnalysisResult" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.ArgumentAnalysisResult"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.MemberResolutionKind"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.MemberResolutionResult`1" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.MemberAnalysisResult" }
   "Microsoft.CodeAnalysis.CSharp.MemberSemanticModel" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AwaitExpressionInfo"; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BoundAnonymousObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundAwaitExpression"; "Microsoft.CodeAnalysis.CSharp.BoundCollectionInitializerExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundForEachStatement"; "Microsoft.CodeAnalysis.CSharp.BoundKind"; "Microsoft.CodeAnalysis.CSharp.BoundLambda"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundQueryClause"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.BoundTreeWalker"; "Microsoft.CodeAnalysis.CSharp.BoundTypeExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTypeOrValueExpression"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpTypeInfo"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.ConversionsBase"; "Microsoft.CodeAnalysis.CSharp.ExecutableCodeBinder"; "Microsoft.CodeAnalysis.CSharp.ForEachEnumeratorInfo"; "Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo"; "Microsoft.CodeAnalysis.CSharp.LookupPosition"; "Microsoft.CodeAnalysis.CSharp.QueryClauseInfo"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeManager"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions"; "Microsoft.CodeAnalysis.CSharp.SyntaxTreeSemanticModel"; "Microsoft.CodeAnalysis.CSharp.TypeofBinder"; "Microsoft.CodeAnalysis.CSharp.UnboundLambda" }
   "Microsoft.CodeAnalysis.CSharp.MergedNamespaceDeclaration" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Declaration"; "Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration"; "Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration"; "Microsoft.CodeAnalysis.CSharp.SingleNamespaceDeclaration"; "Microsoft.CodeAnalysis.CSharp.SingleNamespaceOrTypeDeclaration"; "Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration"; "Microsoft.CodeAnalysis.CSharp.Symbols.LexicalSortKey" }
   "Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Declaration" }
   "Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Declaration"; "Microsoft.CodeAnalysis.CSharp.SingleNamespaceOrTypeDeclaration"; "Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration"; "Microsoft.CodeAnalysis.CSharp.Symbols.LexicalSortKey"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.MessageIDExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.LocalizableErrorArgument"; "Microsoft.CodeAnalysis.CSharp.MessageID" }
   "Microsoft.CodeAnalysis.CSharp.MessageProvider" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnostic"; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.ErrorCode"; "Microsoft.CodeAnalysis.CSharp.ErrorFacts"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.MethodBodyCompiler" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AsyncRewriter2"; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement"; "Microsoft.CodeAnalysis.CSharp.BoundFieldInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePoint"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePointWithSpan"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundStatementList"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Compiler"; "Microsoft.CodeAnalysis.CSharp.ConstantFieldsInProgress"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Imports"; "Microsoft.CodeAnalysis.CSharp.MemberSemanticModel"; "Microsoft.CodeAnalysis.CSharp.MethodBodySynthesizer"; "Microsoft.CodeAnalysis.CSharp.NamespaceScopeBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeManager"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceEventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberFieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedExplicitImplementationMethod"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedStaticConstructor"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields"; "Microsoft.CodeAnalysis.CSharp.TypeCompilationState" }
   "Microsoft.CodeAnalysis.CSharp.MethodBodySemanticModel" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel"; "Microsoft.CodeAnalysis.CSharp.ExecutableCodeBinder"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.MethodBodySynthesizer" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundBaseReference"; "Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator"; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCall"; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalGoto"; "Microsoft.CodeAnalysis.CSharp.BoundConversion"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement"; "Microsoft.CodeAnalysis.CSharp.BoundFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundLabelStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLiteral"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundParameter"; "Microsoft.CodeAnalysis.CSharp.BoundReturnStatement"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePoint"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePointWithSpan"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundThisReference"; "Microsoft.CodeAnalysis.CSharp.BoundTryStatement"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ImplicitNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceEventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedLocal"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields" }
   "Microsoft.CodeAnalysis.CSharp.MethodGroup" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.LookupResultKind"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.MethodGroupResolution" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AnalyzedArguments"; "Microsoft.CodeAnalysis.CSharp.LookupResultKind"; "Microsoft.CodeAnalysis.CSharp.MethodGroup"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.MethodTypeInferenceResult" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.MethodTypeInferrer" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AnalyzedArguments"; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundMethodGroup"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.Conversions"; "Microsoft.CodeAnalysis.CSharp.ConversionsBase"; "Microsoft.CodeAnalysis.CSharp.MethodGroupResolution"; "Microsoft.CodeAnalysis.CSharp.MethodTypeInferenceResult"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.UnboundLambda" }
   "Microsoft.CodeAnalysis.CSharp.NamespaceDeclarationSyntaxReference" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.NamespaceOrTypeAndUsingDirective" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax" }
   "Microsoft.CodeAnalysis.CSharp.NamespaceScopeBuilder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AliasAndExternAliasDirective"; "Microsoft.CodeAnalysis.CSharp.AliasAndUsingDirective"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Imports"; "Microsoft.CodeAnalysis.CSharp.NamespaceOrTypeAndUsingDirective"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.OperatorFacts" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts" }
   "Microsoft.CodeAnalysis.CSharp.OperatorKindExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind"; "Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind" }
   "Microsoft.CodeAnalysis.CSharp.OutsideVariablesUsedInside" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundParameter"; "Microsoft.CodeAnalysis.CSharp.BoundSequence"; "Microsoft.CodeAnalysis.CSharp.BoundTreeWalker"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.OverloadResolution" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AnalyzedArguments"; "Microsoft.CodeAnalysis.CSharp.ArgumentAnalysisResult"; "Microsoft.CodeAnalysis.CSharp.BetterResult"; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorAnalysisResult"; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorKind"; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorOverloadResolutionResult"; "Microsoft.CodeAnalysis.CSharp.BinaryOperatorSignature"; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundLambda"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundReturnStatement"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundStatementList"; "Microsoft.CodeAnalysis.CSharp.BuiltInOperators"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.ConversionsBase"; "Microsoft.CodeAnalysis.CSharp.MemberAnalysisResult"; "Microsoft.CodeAnalysis.CSharp.OperatorFacts"; "Microsoft.CodeAnalysis.CSharp.OperatorKindExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.UnaryOperatorAnalysisResult"; "Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind"; "Microsoft.CodeAnalysis.CSharp.UnaryOperatorOverloadResolutionResult"; "Microsoft.CodeAnalysis.CSharp.UnaryOperatorSignature"; "Microsoft.CodeAnalysis.CSharp.UnboundLambda" }
   "Microsoft.CodeAnalysis.CSharp.OverloadResolutionResult`1" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AnalyzedArguments"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.DiagnosticInfoWithSymbols"; "Microsoft.CodeAnalysis.CSharp.MemberAnalysisResult"; "Microsoft.CodeAnalysis.CSharp.MemberResolutionKind"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.UnboundLambda" }
   "Microsoft.CodeAnalysis.CSharp.PlainUnboundLambdaState" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.UnboundLambdaState" }
   "Microsoft.CodeAnalysis.CSharp.PreciseAbstractFlowPass`1" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundAddressOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAnonymousObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundArgListOperator"; "Microsoft.CodeAnalysis.CSharp.BoundArrayAccess"; "Microsoft.CodeAnalysis.CSharp.BoundArrayCreation"; "Microsoft.CodeAnalysis.CSharp.BoundArrayInitialization"; "Microsoft.CodeAnalysis.CSharp.BoundArrayLength"; "Microsoft.CodeAnalysis.CSharp.BoundAsOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAwaitExpression"; "Microsoft.CodeAnalysis.CSharp.BoundBadExpression"; "Microsoft.CodeAnalysis.CSharp.BoundBadStatement"; "Microsoft.CodeAnalysis.CSharp.BoundBinaryOperator"; "Microsoft.CodeAnalysis.CSharp.BoundBreakStatement"; "Microsoft.CodeAnalysis.CSharp.BoundCall"; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCollectionElementInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundCollectionInitializerExpression"; "Microsoft.CodeAnalysis.CSharp.BoundCompoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalGoto"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalOperator"; "Microsoft.CodeAnalysis.CSharp.BoundContinueStatement"; "Microsoft.CodeAnalysis.CSharp.BoundConversion"; "Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundDoStatement"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicCollectionElementInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicIndexerAccess"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicInvocation"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicMemberAccess"; "Microsoft.CodeAnalysis.CSharp.BoundDynamicObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundEventAccess"; "Microsoft.CodeAnalysis.CSharp.BoundEventAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement"; "Microsoft.CodeAnalysis.CSharp.BoundFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundFieldInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundFixedLocalCollectionInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundFixedStatement"; "Microsoft.CodeAnalysis.CSharp.BoundForEachStatement"; "Microsoft.CodeAnalysis.CSharp.BoundForStatement"; "Microsoft.CodeAnalysis.CSharp.BoundGlobalStatementInitializer"; "Microsoft.CodeAnalysis.CSharp.BoundGotoStatement"; "Microsoft.CodeAnalysis.CSharp.BoundIfStatement"; "Microsoft.CodeAnalysis.CSharp.BoundIncrementOperator"; "Microsoft.CodeAnalysis.CSharp.BoundIndexerAccess"; "Microsoft.CodeAnalysis.CSharp.BoundIsOperator"; "Microsoft.CodeAnalysis.CSharp.BoundKind"; "Microsoft.CodeAnalysis.CSharp.BoundLabelStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLabeledStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration"; "Microsoft.CodeAnalysis.CSharp.BoundLockStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLoopStatement"; "Microsoft.CodeAnalysis.CSharp.BoundMakeRefOperator"; "Microsoft.CodeAnalysis.CSharp.BoundMethodGroup"; "Microsoft.CodeAnalysis.CSharp.BoundMethodOrPropertyGroup"; "Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarations"; "Microsoft.CodeAnalysis.CSharp.BoundNewT"; "Microsoft.CodeAnalysis.CSharp.BoundNoPiaObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator"; "Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundObjectInitializerExpression"; "Microsoft.CodeAnalysis.CSharp.BoundParameter"; "Microsoft.CodeAnalysis.CSharp.BoundPointerElementAccess"; "Microsoft.CodeAnalysis.CSharp.BoundPointerIndirectionOperator"; "Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess"; "Microsoft.CodeAnalysis.CSharp.BoundQueryClause"; "Microsoft.CodeAnalysis.CSharp.BoundRefTypeOperator"; "Microsoft.CodeAnalysis.CSharp.BoundRefValueOperator"; "Microsoft.CodeAnalysis.CSharp.BoundReturnStatement"; "Microsoft.CodeAnalysis.CSharp.BoundSequence"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePoint"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePointExpression"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePointWithSpan"; "Microsoft.CodeAnalysis.CSharp.BoundStackAllocArrayCreation"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundStatementExtensions"; "Microsoft.CodeAnalysis.CSharp.BoundStatementList"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchSection"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement"; "Microsoft.CodeAnalysis.CSharp.BoundThrowStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.BoundTryStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTypeOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundTypeOrValueExpression"; "Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator"; "Microsoft.CodeAnalysis.CSharp.BoundUsingStatement"; "Microsoft.CodeAnalysis.CSharp.BoundWhileStatement"; "Microsoft.CodeAnalysis.CSharp.BoundYieldReturnStatement"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.UnboundLambda"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.ReadWriteWalker" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundForEachStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundParameter"; "Microsoft.CodeAnalysis.CSharp.BoundRangeVariable"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.DataFlowPass"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.UnboundLambda" }
   "Microsoft.CodeAnalysis.CSharp.RegionAnalysisContext" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.RegionReachableWalker" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.ControlFlowPass" }
   "Microsoft.CodeAnalysis.CSharp.SingleLookupResult" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.LookupResultKind"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.SingleNamespaceDeclaration" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.SingleNamespaceOrTypeDeclaration" }
   "Microsoft.CodeAnalysis.CSharp.SingleNamespaceOrTypeDeclaration" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Declaration" }
   "Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Declaration"; "Microsoft.CodeAnalysis.CSharp.DeclarationKind"; "Microsoft.CodeAnalysis.CSharp.DeclarationModifiers"; "Microsoft.CodeAnalysis.CSharp.SingleNamespaceOrTypeDeclaration" }
   "Microsoft.CodeAnalysis.CSharp.SourceDocumentationCommentUtils" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DocumentationCommentCompiler"; "Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind" }
   "Microsoft.CodeAnalysis.CSharp.SpeculativeSyntaxTreeSemanticModel" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharp.SyntaxTreeSemanticModel" }
   "Microsoft.CodeAnalysis.CSharp.StateMachineMethodToClassRewriter" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundArrayAccess"; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundSequence"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchSection"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement"; "Microsoft.CodeAnalysis.CSharp.BoundThisReference"; "Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.BoundTryStatement"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CapturedSymbolReplacement"; "Microsoft.CodeAnalysis.CSharp.CapturedToExpressionSymbolReplacement"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.EmptyStructTypeCache"; "Microsoft.CodeAnalysis.CSharp.StateMachineStates"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedNames"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodToClassRewriter"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedContainer"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedFieldSymbolBase"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.SyntheticBoundNodeFactory"; "Microsoft.CodeAnalysis.CSharp.TypeCompilationState" }
   "Microsoft.CodeAnalysis.CSharp.StateMachineRewriter" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CapturedSymbolReplacement"; "Microsoft.CodeAnalysis.CSharp.CapturedToFrameSymbolReplacement"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.IteratorAndAsyncCaptureWalker"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedNames"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedContainer"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedFieldSymbolBase"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.SyntheticBoundNodeFactory"; "Microsoft.CodeAnalysis.CSharp.TypeCompilationState" }
   "Microsoft.CodeAnalysis.CSharp.SwitchBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BoundBadExpression"; "Microsoft.CodeAnalysis.CSharp.BoundBadStatement"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundGotoStatement"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchSection"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.ConversionsBase"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.LocalScopeBinder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceLabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AccessCheck"; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.DocumentationCommentIDVisitor"; "Microsoft.CodeAnalysis.CSharp.EarlyWellKnownAttributeBinder"; "Microsoft.CodeAnalysis.CSharp.SymbolDisplay"; "Microsoft.CodeAnalysis.CSharp.Symbols.AttributeLocation"; "Microsoft.CodeAnalysis.CSharp.Symbols.AttributeLocationExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.IAttributeTargetSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts" }
   "Microsoft.CodeAnalysis.CSharp.SymbolDisplay" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.ObjectDisplay" }
   "Microsoft.CodeAnalysis.CSharp.SymbolDisplayVisitor" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpExtensions"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.SymbolDisplay"; "Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ExplicitInterfaceHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.NoPiaIllegalGenericInstantiationSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedGlobalMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.SymbolDistinguisher" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol" }
   "Microsoft.CodeAnalysis.CSharp.SymbolKindExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.MessageIDExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeManager"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.DynamicTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeParameterMap" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.InContainerBinder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ConstraintsHelper"; "Microsoft.CodeAnalysis.CSharp.Symbols.LexicalSortKey"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolCompletionState"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.TypeConversions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeDescriptor" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeField"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeField" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeManager" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundLiteral"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Compiler"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeDescriptor"; "Microsoft.CodeAnalysis.CSharp.Symbols.AnonymousTypeField"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedNames"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertyAccessorSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedDelegateSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInstanceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.SyntheticBoundNodeFactory"; "Microsoft.CodeAnalysis.CSharp.TypeCompilationState" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ConstructedNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.DynamicTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingMetadataTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.AttributeDataExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceAttributeData" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.AttributeLocationExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.BaseTypeAnalysis" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ByRefReturnErrorTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AttributeDataExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.AttributeLocation"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingMetadataTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.TypedConstantExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpCustomModifier" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ConstantEvaluationHelpers" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceFieldSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ConstantValueUtils" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BinderFactory"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.ConstantFieldsInProgress"; "Microsoft.CodeAnalysis.CSharp.ConstantFieldsInProgressBinder"; "Microsoft.CodeAnalysis.CSharp.EarlyWellKnownAttributeBinder"; "Microsoft.CodeAnalysis.CSharp.LocalScopeBinder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceEnumConstantSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ConstraintsHelper" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.ConversionsBase"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterBounds"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ConstructedErrorTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ConstructedMethodSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ConstructedNamedTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ConversionSignatureComparer" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.CrefTypeParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.CustomModifierUtils" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.DynamicTypeDecoder"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceParameterSymbolBase"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.DynamicTypeEraser" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.DynamicTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.EnumConversions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.DeclarationKind" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorMethodSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorPropertySymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.LookupResultKindExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.ConstructedErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedNestedErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.UnsupportedMetadataTypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AccessCheck"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersResult"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedEventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbolExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ExplicitInterfaceHelpers" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ExplicitInterfaceMethodTypeParameterMap" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenMethodTypeParameterMapBase" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.LookupResultKind"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.FieldInitializer" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.ConstantFieldsInProgress"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedFieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.FixedFieldImplementationType" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedNames"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberFieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedContainer"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedFieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInstanceConstructor"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedNames" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedNameKind" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ImplicitNamedTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Declaration"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolCompletionState"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.IndexedTypeParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.MessageID"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.UnboundLambda"; "Microsoft.CodeAnalysis.CSharp.UnboundLambdaState" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.LexicalSortKey" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.ExplicitInterfaceHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.IndexedTypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.MergedNamespaceSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceExtent"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.DynamicTypeDecoder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.DynamicTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.MemberRefMetadataDecoder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.IndexedTypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.MetadataDecoder"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PENamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.UnsupportedMetadataTypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.MetadataDecoder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ByRefReturnErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpCustomModifier"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.MemberRefMetadataDecoder"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEFieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PENamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingMetadataTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingModuleSymbolWithName"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NoPiaIllegalGenericInstantiationSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.UnsupportedMetadataTypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEAssemblySymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MetadataOrSourceAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEAttributeData" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.MetadataDecoder"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEEventSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.DocumentationComments.PEDocumentationCommentUtils"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.MetadataDecoder"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PENamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ObsoleteAttributeHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.PEPropertyOrEventHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEFieldSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.ConstantFieldsInProgress"; "Microsoft.CodeAnalysis.CSharp.DocumentationComments.PEDocumentationCommentUtils"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpCustomModifier"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.DynamicTypeDecoder"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.MetadataDecoder"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PENamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PENamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ObsoleteAttributeHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEGlobalNamespaceSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PENamespaceSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEMethodSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.DocumentationComments.PEDocumentationCommentUtils"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.MetadataDecoder"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PENamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PETypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ObsoleteAttributeHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersResult"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ThisParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEModuleSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AttributeDataExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PENamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PENamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingMetadataTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NonMissingModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PENamedTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.DocumentationComments.PEDocumentationCommentUtils"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.BaseTypeAnalysis"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.IndexedTypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.DynamicTypeDecoder"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.MetadataDecoder"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEEventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEFieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PENamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEPropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PETypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ObsoleteAttributeHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInstanceConstructor"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.UnsupportedMetadataTypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PENamespaceSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.MetadataDecoder"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PENamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PENestedNamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingMetadataTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceExtent"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PENestedNamespaceSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PENamespaceSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.ConversionsBase"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.TypeConversions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEPropertySymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AccessCheck"; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.DocumentationComments.PEDocumentationCommentUtils"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.MetadataDecoder"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PENamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ObsoleteAttributeHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.PEPropertyOrEventHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PETypeParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.ConstraintsHelper"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.MetadataDecoder"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PENamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterBounds"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.MetadataOrSourceAssemblySymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingMetadataTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NonMissingAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.MethodBodySynthesizer" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.SyntheticBoundNodeFactory" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AccessCheck"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpExtensions"; "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Emit.SpecializedMethodReference"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ByRefReturnErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.IAttributeTargetSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersResult"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSignature"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ReducedExtensionMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedGlobalMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbolExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundLiteral"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree"; "Microsoft.CodeAnalysis.CSharp.MethodTypeInferrer"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ConstraintsHelper"; "Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.TypeConversions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.MethodToClassRewriter" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAwaitExpression"; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCall"; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundConversion"; "Microsoft.CodeAnalysis.CSharp.BoundDelegateCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundFieldInfo"; "Microsoft.CodeAnalysis.CSharp.BoundForStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundLoopStatement"; "Microsoft.CodeAnalysis.CSharp.BoundMethodGroup"; "Microsoft.CodeAnalysis.CSharp.BoundMethodInfo"; "Microsoft.CodeAnalysis.CSharp.BoundMethodOrPropertyGroup"; "Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarations"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundParameter"; "Microsoft.CodeAnalysis.CSharp.BoundPropertyAccess"; "Microsoft.CodeAnalysis.CSharp.BoundSequence"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundStatementList"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeRewriter"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.BoundTypeExpression"; "Microsoft.CodeAnalysis.CSharp.BoundUsingStatement"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CapturedSymbolReplacement"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodBodySynthesizer"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedLocal"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.SyntheticBoundNodeFactory"; "Microsoft.CodeAnalysis.CSharp.TypeCompilationState" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.MissingAssemblySymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingMetadataTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.MissingCorLibrarySymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingMetadataTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.MissingMetadataTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingNamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.MissingModuleSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingMetadataTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingNamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.MissingModuleSymbolWithName" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingModuleSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.MissingNamespaceSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceExtent"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ModifierUtils" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.DeclarationModifiers"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceExtent"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.MutableTypeMap" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeParameterMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.MethodImplementation"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.BaseTypeAnalysis"; "Microsoft.CodeAnalysis.CSharp.Symbols.ConstructedNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PENamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NoPiaIllegalGenericInstantiationSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedNestedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceExtent" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.EnumConversions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EnumConversions"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingMetadataTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceExtent"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.NoPiaAmbiguousCanonicalTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.NoPiaIllegalGenericInstantiationSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.NoPiaMissingCanonicalTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.NonMissingAssemblySymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MergedNamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingMetadataTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceExtent"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.NonMissingModuleSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.ErrorCode"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingMetadataTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ObsoleteAttributeHelpers" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BinderFlagsExtensions"; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.ErrorCode"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenMethodTypeParameterMap" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenMethodTypeParameterMapBase" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenMethodTypeParameterMapBase" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersHelpers" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AccessCheck"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersResult"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersResult" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.PEPropertyOrEventHelpers" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterHelpers" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSignature" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.PreprocessingSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AccessCheck"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ByRefReturnErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersResult"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSignature"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedPropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedSealedPropertyAccessor"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbolExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.RangeVariableSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ReducedExtensionMethodSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.WrappedParameterSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.RefKindExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingAssemblySymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NonMissingAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingAttributeData" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingEventSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingModuleSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingFieldSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingModuleSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingMethodParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingParameterSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingMethodSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingMethodParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingModuleSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.IndexedTypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.MetadataDecoder"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PENamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingMetadataTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NoPiaIllegalGenericInstantiationSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NonMissingModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetOptions"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingEventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingFieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingNamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingPropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingTypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyPropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.UnsupportedMetadataTypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingNamedTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.BaseTypeAnalysis"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingNamespaceSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingMetadataTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceExtent"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingModuleSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingPropertyParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingPropertySymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingPropertySymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingPropertyParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingTypeParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.Retargeting.RetargetingModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyPropertySymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DeclarationTable"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.MessageProvider"; "Microsoft.CodeAnalysis.CSharp.RootSingleNamespaceDeclaration"; "Microsoft.CodeAnalysis.CSharp.SingleNamespaceOrTypeDeclaration"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AttributeDataExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.AttributeLocation"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MergedNamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.Metadata.PE.PEModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MetadataOrSourceAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingMetadataTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceExtent"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolCompletionState"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceAttributeData" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceClonedParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceParameterSymbolBase" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceComplexParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BinderFactory"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.ConversionsBase"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.EarlyWellKnownAttributeBinder"; "Microsoft.CodeAnalysis.CSharp.MessageProvider"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AttributeLocation"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterEarlyWellKnownAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceParameterSymbolBase"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolCompletionState"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceConstructorSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BinderFactory"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceCustomEventAccessorSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceEventAccessorSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceEventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceCustomEventSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.ConstraintsHelper"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceCustomEventAccessorSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceEventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceDelegateMethodSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceClonedParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.VarianceSafety"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceDestructorSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceEnumConstantSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.ConstantFieldsInProgress"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ConstantValueUtils"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceFieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceEventAccessorSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceEventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAccessorValueParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceEventFieldSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceEventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberFieldSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceEventSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AccessCheck"; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.CSDiagnostic"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DeclarationModifiers"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.EarlyWellKnownAttributeBinder"; "Microsoft.CodeAnalysis.CSharp.SourceDocumentationCommentUtils"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AttributeLocation"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.ConstraintsHelper"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LexicalSortKey"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModifierUtils"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersResult"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolCompletionState"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceFieldLikeEventSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceEventFieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceEventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedFieldLikeEventAccessorSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceFieldSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.ConstantFieldsInProgress"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.EarlyWellKnownAttributeBinder"; "Microsoft.CodeAnalysis.CSharp.MessageProvider"; "Microsoft.CodeAnalysis.CSharp.SourceDocumentationCommentUtils"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AttributeDataExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.AttributeLocation"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.ConstantEvaluationHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LexicalSortKey"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolCompletionState"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceFixedFieldSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BinderFactory"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ConstantValueUtils"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceFieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberFieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolCompletionState"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceLabelSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceLocalSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.ForEachLoopBinder"; "Microsoft.CodeAnalysis.CSharp.ImplicitlyTypedLocalBinder"; "Microsoft.CodeAnalysis.CSharp.LocalInProgressBinder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EvaluatedConstant"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalDeclarationKind"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AccessCheck"; "Microsoft.CodeAnalysis.CSharp.BinderFactory"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Declaration"; "Microsoft.CodeAnalysis.CSharp.DeclarationModifiers"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.EnumExtensions"; "Microsoft.CodeAnalysis.CSharp.ErrorCode"; "Microsoft.CodeAnalysis.CSharp.LexicalOrderSymbolComparer"; "Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration"; "Microsoft.CodeAnalysis.CSharp.SingleNamespaceOrTypeDeclaration"; "Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.BaseTypeAnalysis"; "Microsoft.CodeAnalysis.CSharp.Symbols.ConversionSignatureComparer"; "Microsoft.CodeAnalysis.CSharp.Symbols.EnumConversions"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldInitializer"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LexicalSortKey"; "Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModifierUtils"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersResult"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceDelegateMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceEnumConstantSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceEventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertyAccessorSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceUserDefinedConversionSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolCompletionState"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedBackingFieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedExplicitImplementationMethod"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInstanceConstructor"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedStaticConstructor"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedSubmissionConstructor"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions"; "Microsoft.CodeAnalysis.CSharp.TypeConversions"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberFieldSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BinderFactory"; "Microsoft.CodeAnalysis.CSharp.CSDiagnostic"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.ConstantFieldsInProgress"; "Microsoft.CodeAnalysis.CSharp.DeclarationModifiers"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpCustomModifier"; "Microsoft.CodeAnalysis.CSharp.Symbols.ConstantValueUtils"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModifierUtils"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceFieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolCompletionState"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AccessCheck"; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BinderFactory"; "Microsoft.CodeAnalysis.CSharp.BinderFlagsExtensions"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.SourceDocumentationCommentUtils"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ConstraintsHelper"; "Microsoft.CodeAnalysis.CSharp.Symbols.CustomModifierUtils"; "Microsoft.CodeAnalysis.CSharp.Symbols.ExplicitInterfaceHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.ExplicitInterfaceMethodTypeParameterMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.IndexedTypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LexicalSortKey"; "Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenMethodTypeParameterMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodTypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceOverridingMethodTypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolCompletionState"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterConstraintClause"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AsyncRewriter2"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DeclarationModifiers"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.EarlyWellKnownAttributeBinder"; "Microsoft.CodeAnalysis.CSharp.EnumExtensions"; "Microsoft.CodeAnalysis.CSharp.MessageProvider"; "Microsoft.CodeAnalysis.CSharp.SourceDocumentationCommentUtils"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AttributeDataExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.AttributeLocation"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.LexicalSortKey"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModifierUtils"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersResult"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolCompletionState"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.ThisParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodTypeParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ConstraintsHelper"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DeclarationTable"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.RootSingleNamespaceDeclaration"; "Microsoft.CodeAnalysis.CSharp.SingleNamespaceOrTypeDeclaration"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AttributeDataExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.AttributeLocation"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.MissingMetadataTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NonMissingModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceAssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolCompletionState"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BinderFactory"; "Microsoft.CodeAnalysis.CSharp.BinderFlagsExtensions"; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Declaration"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.EarlyWellKnownAttributeBinder"; "Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration"; "Microsoft.CodeAnalysis.CSharp.MessageProvider"; "Microsoft.CodeAnalysis.CSharp.SingleNamespaceOrTypeDeclaration"; "Microsoft.CodeAnalysis.CSharp.SingleTypeDeclaration"; "Microsoft.CodeAnalysis.CSharp.SourceDocumentationCommentUtils"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AttributeDataExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.AttributeLocation"; "Microsoft.CodeAnalysis.CSharp.Symbols.BaseTypeAnalysis"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.ConstraintsHelper"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolCompletionState"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedEnumValueFieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterConstraintClause"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeWellKnownAttributeData"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind"; "Microsoft.CodeAnalysis.CSharp.TypeConversions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamespaceSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Compiler"; "Microsoft.CodeAnalysis.CSharp.Declaration"; "Microsoft.CodeAnalysis.CSharp.DeclarationKind"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Imports"; "Microsoft.CodeAnalysis.CSharp.LexicalOrderSymbolComparer"; "Microsoft.CodeAnalysis.CSharp.MergedNamespaceDeclaration"; "Microsoft.CodeAnalysis.CSharp.MergedNamespaceOrTypeDeclaration"; "Microsoft.CodeAnalysis.CSharp.MergedTypeDeclaration"; "Microsoft.CodeAnalysis.CSharp.NamespaceDeclarationSyntaxReference"; "Microsoft.CodeAnalysis.CSharp.SingleNamespaceDeclaration"; "Microsoft.CodeAnalysis.CSharp.SingleNamespaceOrTypeDeclaration"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ImplicitNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LexicalSortKey"; "Microsoft.CodeAnalysis.CSharp.Symbols.MergedNamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceExtent"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolCompletionState"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceOverridingMethodTypeParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ConstraintsHelper"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenMethodTypeParameterMapBase"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterBounds"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.CustomModifierUtils"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceParameterSymbolBase"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolCompletionState"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceParameterSymbolBase" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertyAccessorSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AccessCheck"; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BinderFactory"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CustomModifierUtils"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModifierUtils"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceClonedParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAccessorValueParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AccessCheck"; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BinderFactory"; "Microsoft.CodeAnalysis.CSharp.CSDiagnostic"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DeclarationModifiers"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.EarlyWellKnownAttributeBinder"; "Microsoft.CodeAnalysis.CSharp.SourceDocumentationCommentUtils"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AttributeLocation"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.ConstraintsHelper"; "Microsoft.CodeAnalysis.CSharp.Symbols.LexicalSortKey"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModifierUtils"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersResult"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertyEarlyWellKnownAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertyAccessorSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolCompletionState"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedBackingFieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedSealedPropertyAccessor"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceSimpleParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolCompletionState"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceTypeParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ConstraintsHelper"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceTypeParameterSymbolBase" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CSharpAttributeData"; "Microsoft.CodeAnalysis.CSharp.Symbols.ConstraintsHelper"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolCompletionState"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterBounds"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.TypeConversions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceUserDefinedConversionSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceUserDefinedOperatorSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.OperatorFacts"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SourceUserDefinedOperatorSymbolBase" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BinderFactory"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ConstraintsHelper"; "Microsoft.CodeAnalysis.CSharp.Symbols.LexicalSortKey"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedErrorTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedEventSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ExplicitInterfaceHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersResult"; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedFieldSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedMethodSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.ExplicitInterfaceHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersResult"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedNamedTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedNestedErrorTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedNestedTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedNamedTypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.WrappedParameterSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedPropertySymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.ExplicitInterfaceHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.OverriddenOrHiddenMembersResult"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedTypeParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolCompletionState" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.SymbolKindExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAccessorValueParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedAttributeData" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceAttributeData" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedBackingFieldSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedFieldSymbolBase" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedCapturedVariable" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedNames"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedFieldSymbolBase"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedContainer" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedDelegateSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInstanceConstructor"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInstanceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedEntryPointSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundParameter"; "Microsoft.CodeAnalysis.CSharp.BoundReturnStatement"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInstanceConstructor"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedLocal"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedEnumValueFieldSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedFieldSymbolBase" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedExplicitImplementationMethod" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodBodySynthesizer"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedImplementationMethod"; "Microsoft.CodeAnalysis.CSharp.SyntheticBoundNodeFactory" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedFieldLikeEventAccessorSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceEventAccessorSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceEventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedFieldSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedFieldSymbolBase" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.DeclarationModifiers"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModifierUtils"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedGlobalMethodSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedImplementationMethod" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ExplicitInterfaceHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.LexicalSortKey"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInstanceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedImplementationReadOnlyProperty" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ExplicitInterfaceHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedImplementationMethod" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInstanceConstructor" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LexicalSortKey"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInstanceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInstanceMethodSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ThisParameterSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedIntrinsicOperatorSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedIteratorLocalFieldSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedLocal" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalDeclarationKind"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TempKind"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedSealedPropertyAccessor" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AccessCheck"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LexicalSortKey"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodBodySynthesizer"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInstanceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.SyntheticBoundNodeFactory" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedStaticConstructor" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedStringSwitchHashMethod" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedGlobalMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.SyntheticBoundNodeFactory" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedSubmissionConstructor" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedInstanceConstructor"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedTypeParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedTypeParameterSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.ThisParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeParameterMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SubstitutedTypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterBounds" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterBuilder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpExtensions"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceTypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterConstraintClause" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterConstraintKind"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterDiagnosticInfo" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbolExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.FunctionExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.IndexedTypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SignatureOnlyMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AccessCheck"; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.DynamicTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SpecialTypeExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.UnboundArgumentErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.TypeUnification" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.TypeWellKnownAttributeData" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.UnboundArgumentErrorTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.UnsupportedMetadataTypeSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.Symbols.ErrorTypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.VarianceSafety" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Symbols.WrappedParameterSymbol" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AccessorListSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AliasQualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AnonymousMethodExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AnonymousObjectCreationExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArrayRankSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Symbols.AttributeLocationExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeTargetSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BadDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InstanceExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BinaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BracketedArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.BranchingDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BreakStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.CSharpLineDirectiveMap" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.CSharpPragmaWarningStateMap" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpExtensions"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CastExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CatchClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CatchDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CatchFilterClauseSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CheckedExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CheckedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ClassDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ClassOrStructConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CompilationUnitSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveStack"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.BranchingDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConditionalExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConstructorConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConstructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConstructorInitializerSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ContinueStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConversionOperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConversionOperatorMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefBracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DefaultExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DefineDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DelegateDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DestructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StructuredTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DocumentationCommentTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StructuredTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.BranchingDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BranchingDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConditionalDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ElifDirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ElseClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.BranchingDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BranchingDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ElseDirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EmptyStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EndIfDirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EndRegionDirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EnumDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EnumMemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ErrorDirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EventDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EventFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExplicitInterfaceSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExternAliasDirectiveSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FinallyClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FixedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ForEachStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ForStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FromClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.GenericNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.GotoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.GreenNodeExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.GroupClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SelectOrGroupClauseSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.BranchingDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BranchingDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConditionalDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IfDirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IfStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ImplicitArrayCreationExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IndexerDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IndexerMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.InitializerExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InstanceExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.InterfaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AbstractLexer" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SlidingTextWindow"; "Microsoft.CodeAnalysis.CSharp.SyntaxDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.XmlSyntaxDiagnosticInfo" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AccessorDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AccessorListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AliasQualifiedNameSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AnonymousMethodExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AnonymousObjectCreationExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AnonymousObjectMemberDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AnonymousObjectMemberDeclaratorSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameEqualsSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArgumentListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArgumentSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameColonSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArrayCreationExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArrayTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.InitializerExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArrayRankSpecifierSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArrayTypeSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArrayRankSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeArgumentListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeArgumentSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameColonSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameEqualsSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeTargetSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeTargetSpecifierSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BadDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseArgumentListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseCrefParameterListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.InstanceExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseFieldDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseMethodDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseParameterListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BasePropertyDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseTypeDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BinaryExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BlendedNode" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.Blender"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.Blender" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpExtensions"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AbstractLexer"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BlendedNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveStack"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.Lexer"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LexerMode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SlidingTextWindow"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BlockSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BracketedArgumentListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BracketedParameterListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BranchingDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BreakStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ChildSyntaxList"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.GreenStats"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StructuredTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactoryContext"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxList"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxNavigator"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxRewriter" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AccessorListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AliasQualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AnonymousMethodExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AnonymousObjectCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AnonymousObjectMemberDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArrayRankSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArrayTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeTargetSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BadDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseCrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BasePropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BinaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BracketedArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BranchingDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BreakStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CastExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CatchClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CatchDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CatchFilterClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CheckedExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CheckedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ClassDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ClassOrStructConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CompilationUnitSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConditionalDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConditionalExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConstructorConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConstructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConstructorInitializerSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ContinueStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConversionOperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConversionOperatorMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefBracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DefaultExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DefineDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DelegateDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DestructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DocumentationCommentTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ElementAccessExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ElifDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ElseClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ElseDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EmptyStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EndIfDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EndRegionDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EnumDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EnumMemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ErrorDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EventDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EventFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExplicitInterfaceSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExternAliasDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FinallyClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FixedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ForEachStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ForStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FromClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.GenericNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.GlobalStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.GotoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.GroupClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IfDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IfStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ImplicitArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IncompleteMemberSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IndexerDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IndexerMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.InitializerExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.InterfaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.InvocationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.JoinClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.JoinIntoClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LabeledStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LetClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LineDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LiteralExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LocalDeclarationStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LockStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MakeRefExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberAccessExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameColonSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameEqualsSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NamespaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NullableTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ObjectCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OmittedArraySizeExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OmittedTypeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OperatorMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OrderByClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OrderingSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParenthesizedExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParenthesizedLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PointerTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PostfixUnaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PragmaChecksumDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PragmaWarningDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PredefinedTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PrefixUnaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QualifiedCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryBodySyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryContinuationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.RefTypeExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.RefValueExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ReferenceDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.RegionDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ReturnStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SelectClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SelectOrGroupClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SimpleLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SizeOfExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SkippedTokensTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StackAllocArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StructDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SwitchLabelSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SwitchSectionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SwitchStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ThisExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ThrowStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TryStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeOfExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterConstraintClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.UndefDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.UnsafeStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.UsingDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.UsingStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.VariableDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.WarningDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.WhereClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.WhileStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlCDataSectionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlCommentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlCrefAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlElementEndTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlElementStartTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlElementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlEmptyElementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNameAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlPrefixSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlProcessingInstructionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlTextAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlTextSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.YieldStatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor`1" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CastExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CatchClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CatchDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CatchFilterClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CatchDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CatchFilterClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CheckedExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CheckedStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ClassDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterConstraintClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterListSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ClassOrStructConstraintSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterConstraintSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CompilationUnitSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExternAliasDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.UsingDirectiveSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConditionalDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BranchingDirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConditionalExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConstructorConstraintSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterConstraintSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConstructorDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConstructorInitializerSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConstructorInitializerSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ContextAwareSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AliasQualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AnonymousObjectMemberDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeTargetSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BreakStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CheckedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ClassOrStructConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConstructorConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ContinueStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ElementAccessExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ElseClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EmptyStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExplicitInterfaceSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FinallyClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.GenericNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.GlobalStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IndexerMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.InvocationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.JoinIntoClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LabeledStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LiteralExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameColonSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameEqualsSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NullableTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OmittedArraySizeExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OmittedTypeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OperatorMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OrderingSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParenthesizedExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PointerTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PostfixUnaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PredefinedTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PrefixUnaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QualifiedCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryContinuationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ReturnStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SelectClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StackAllocArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactoryContext"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxNodeCache"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ThisExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ThrowStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.UnsafeStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.VariableDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.WhereClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlElementEndTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlPrefixSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ContinueStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConversionOperatorDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConversionOperatorMemberCrefSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefBracketedParameterListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseCrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefParameterListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseCrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefParameterSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DefaultExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DefineDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DelegateDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterConstraintClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DestructorDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.Directive" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BranchingDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DefineDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.UndefDirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveParser" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpParseOptions"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BinaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveStack"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LiteralExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParenthesizedExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PrefixUnaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxParser"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveStack" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DefineState"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.Directive"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StructuredTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DoStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DocumentationCommentParser" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseCrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConversionOperatorMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefBracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DocumentationCommentTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OperatorMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxListBuilder"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxListBuilderExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxListPool"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxParser"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlCDataSectionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlCommentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlElementEndTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlElementStartTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNodeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlProcessingInstructionSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind"; "Microsoft.CodeAnalysis.CSharp.XmlParseErrorCode"; "Microsoft.CodeAnalysis.CSharp.XmlSyntaxDiagnosticInfo" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DocumentationCommentTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StructuredTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNodeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DocumentationCommentXmlTokens" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxListBuilder"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ElementAccessExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BracketedArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ElifDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConditionalDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ElseClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ElseDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BranchingDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EmptyStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EndIfDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EndRegionDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EnumDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EnumMemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EnumMemberDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EqualsValueClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ErrorDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EventDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AccessorListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BasePropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExplicitInterfaceSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EventFieldDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.VariableDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExplicitInterfaceSpecifierSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExternAliasDirectiveSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FieldDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.VariableDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FinallyClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FixedStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.VariableDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ForEachStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ForStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.VariableDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FromClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.GenericNameSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeArgumentListSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.GlobalStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.GotoStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.GroupClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SelectOrGroupClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IdentifierNameSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IfDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConditionalDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IfStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ElseClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ImplicitArrayCreationExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.InitializerExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IncompleteMemberSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IndexerDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AccessorListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BasePropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExplicitInterfaceSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IndexerMemberCrefSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefBracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.InitializerExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.InstanceExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.InterfaceDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterConstraintClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterListSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.InvocationExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.JoinClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.JoinIntoClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.JoinIntoClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LabeledStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Symbols.AttributeLocationExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AccessorListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AliasQualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AnonymousMethodExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AnonymousObjectCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AnonymousObjectMemberDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArrayRankSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArrayTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeTargetSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BracketedArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CatchClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CheckedExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ChildSyntaxList"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CompilationUnitSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConstructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConstructorInitializerSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ContextAwareSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConversionOperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DefaultExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DelegateDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DestructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ElseClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EnumDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EnumMemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExplicitInterfaceSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExternAliasDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FinallyClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FixedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ForEachStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ForStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FromClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.GotoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.GroupClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IfStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ImplicitArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IncompleteMemberSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.InitializerExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.JoinClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.JoinIntoClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LetClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LocalDeclarationStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LockStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MakeRefExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NamespaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NullableTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OrderingSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PredefinedTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryBodySyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.RefTypeExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.RefValueExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ReturnStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SizeOfExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SwitchLabelSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SwitchSectionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SwitchStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactoryContext"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxList"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxListBuilder"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxListBuilderExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxListPool"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxParser"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ThrowStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TryStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeOfExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterConstraintClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.UsingDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.UsingStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.VariableDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.WhileStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.YieldStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LetClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.Lexer" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpParseOptions"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AbstractLexer"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BranchingDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveStack"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DocumentationCommentParser"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DocumentationCommentXmlTokens"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LexerCache"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LexerMode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SlidingTextWindow"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxList"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxListBuilder"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxParser"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxTrivia"; "Microsoft.CodeAnalysis.CSharp.SyntaxDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind"; "Microsoft.CodeAnalysis.CSharp.XmlParseErrorCode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LexerCache" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxTrivia"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LineDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LiteralExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LocalDeclarationStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LockStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MakeRefExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberAccessExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberCrefSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MethodDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExplicitInterfaceSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterConstraintClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameColonSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameEqualsSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameMemberCrefSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NamespaceDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExternAliasDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.UsingDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NullableTypeSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ObjectCreationExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.InitializerExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OmittedArraySizeExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OmittedTypeArgumentSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OperatorDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OperatorMemberCrefSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OrderByClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OrderingSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OrderingSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParenthesizedExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParenthesizedLambdaExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PointerTypeSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PostfixUnaryExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PragmaChecksumDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PragmaWarningDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PredefinedTypeSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PrefixUnaryExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PropertyDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AccessorListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BasePropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExplicitInterfaceSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QualifiedCrefSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QualifiedNameSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryBodySyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryContinuationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SelectOrGroupClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryContinuationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryBodySyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FromClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryBodySyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.RefTypeExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.RefValueExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ReferenceDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.RegionDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ReturnStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SelectClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SelectOrGroupClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SelectOrGroupClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SeparatedSyntaxListBuilder`1" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxListBuilder" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SeparatedSyntaxList`1" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SimpleLambdaExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SimpleNameSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SizeOfExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SkippedTokensTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StructuredTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.SkippedTokensTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SlidingTextWindow" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.SyntaxDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StackAllocArrayCreationExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StructDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterConstraintClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StructuredTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SwitchLabelSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SwitchSectionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SwitchLabelSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SwitchStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SwitchSectionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxDiagnosticInfoList" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AccessorListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AliasQualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AnonymousMethodExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AnonymousObjectCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AnonymousObjectMemberDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArrayRankSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArrayTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeTargetSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BadDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BinaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BracketedArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BreakStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CastExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CatchClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CatchDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CatchFilterClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CheckedExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CheckedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ClassDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ClassOrStructConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CompilationUnitSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConditionalExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConstructorConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConstructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConstructorInitializerSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ContinueStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConversionOperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ConversionOperatorMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefBracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DefaultExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DefineDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DelegateDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DestructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DocumentationCommentTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ElementAccessExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ElifDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ElseClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ElseDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EmptyStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EndIfDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EndRegionDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EnumDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EnumMemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ErrorDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EventDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EventFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExplicitInterfaceSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExternAliasDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FinallyClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FixedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ForEachStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ForStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FromClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.GenericNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.GlobalStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.GotoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.GroupClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IfDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IfStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ImplicitArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IncompleteMemberSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IndexerDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IndexerMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.InitializerExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.InterfaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.InvocationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.JoinClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.JoinIntoClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LabeledStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LetClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LineDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LiteralExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LocalDeclarationStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LockStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MakeRefExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberAccessExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameColonSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameEqualsSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NamespaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NullableTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ObjectCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OmittedArraySizeExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OmittedTypeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OperatorMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OrderByClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OrderingSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParenthesizedExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParenthesizedLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PointerTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PostfixUnaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PragmaChecksumDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PragmaWarningDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PredefinedTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PrefixUnaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QualifiedCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryBodySyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryContinuationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.RefTypeExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.RefValueExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ReferenceDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.RegionDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ReturnStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SelectClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SimpleLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SizeOfExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SkippedTokensTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StackAllocArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StructDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SwitchLabelSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SwitchSectionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SwitchStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxList"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxNodeCache"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxTrivia"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ThisExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ThrowStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TryStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeOfExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterConstraintClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.UndefDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.UnsafeStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.UsingDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.UsingStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.VariableDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.WarningDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.WhereClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.WhileStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlCDataSectionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlCommentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlCrefAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlElementEndTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlElementStartTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlElementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlEmptyElementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNameAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlPrefixSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlProcessingInstructionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlTextAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlTextSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.YieldStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFirstTokenReplacer" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxRewriter"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.SyntaxDiagnosticInfo" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxLastTokenReplacer" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxRewriter"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ChildSyntaxList"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxList" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxListBuilder"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxNodeCache"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxList" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxListBuilder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxList"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxListBuilderExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxListBuilderExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxListBuilder"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxListBuilder`1" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxListBuilder"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxListBuilderExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxListPool" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxListBuilder" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxList`1" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxNodeCache" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.GreenStats" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxParser" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpParseOptions"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.LanguageVersionExtensions"; "Microsoft.CodeAnalysis.CSharp.LocalizableErrorArgument"; "Microsoft.CodeAnalysis.CSharp.MessageIDExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AbstractLexer"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BlendedNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.Blender"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.Lexer"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LexerMode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SlidingTextWindow"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFirstTokenReplacer"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxLastTokenReplacer"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxList"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxListBuilder"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.SyntaxDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxTrivia" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ThisExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.InstanceExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ThrowStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TryStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CatchClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FinallyClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeArgumentListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeConstraintSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeCrefSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseTypeDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeOfExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterConstraintClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterConstraintSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.UndefDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.UnsafeStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.UsingDirectiveSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameEqualsSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.UsingStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.VariableDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.VariableDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.VariableDeclaratorSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BracketedArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.WarningDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.WhereClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.WhileStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlAttributeSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlCDataSectionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNodeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlCommentSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNodeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlCrefAttributeSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlElementEndTagSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlElementStartTagSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlElementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlElementEndTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlElementStartTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNodeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlEmptyElementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNodeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNameAttributeSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNameSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlPrefixSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNodeSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlPrefixSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlProcessingInstructionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNodeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlTextAttributeSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlTextSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNodeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.YieldStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.JoinClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.JoinIntoClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LabeledStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LetClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LineDirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LiteralExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LocalDeclarationStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LockStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MakeRefExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MemberAccessExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.MemberCrefSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.MethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameColonSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameEqualsSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NamespaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NullableTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ObjectCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OmittedArraySizeExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OmittedTypeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OperatorMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OrderByClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.OrderingSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParenthesizedExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ParenthesizedLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PointerTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PostfixUnaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PragmaChecksumDirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PragmaWarningDirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PredefinedTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PrefixUnaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.PropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QualifiedCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SelectOrGroupClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryContinuationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.RefTypeExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.RefValueExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ReferenceDirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.RegionDirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ReturnStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SelectClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SelectOrGroupClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.SelectOrGroupClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.SeparatedSyntaxListBuilder`1" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxListBuilder"; "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxListBuilderExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SimpleLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SizeOfExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.SkippedTokensTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.StructuredTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StackAllocArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StructDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.StructuredTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SwitchLabelSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SwitchStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxEquivalence" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BaseFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxFormatter" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StructuredTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxList" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxList" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxListBuilder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxList"; "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxListBuilderExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxListBuilderExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxListBuilder" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxListBuilder`1" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxListBuilder"; "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxListBuilderExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxNavigator" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.SyntaxTriviaFunctions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxNodeOrTokenListBuilder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxList"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxNodeRemover" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxTriviaListBuilder"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxReplacer" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxTokenListBuilder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxList"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxTriviaListBuilder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxList" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InstanceExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ThisExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ThrowStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TryStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeOfExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterConstraintClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SimpleNameSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.UndefDirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.UnsafeStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.UsingDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.UsingStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.VariableDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.DirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.WarningDirectiveTriviaSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.WhereClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.WhileStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlCDataSectionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlCommentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlCrefAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlElementEndTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlElementStartTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlEmptyElementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNameAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlPrefixSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlProcessingInstructionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlTextAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" }
   "Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.YieldStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.SyntaxDiagnosticInfo" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.MessageProvider" }
   "Microsoft.CodeAnalysis.CSharp.SyntaxExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxFormatter"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeElementKind"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind" }
   "Microsoft.CodeAnalysis.CSharp.SyntaxFactory" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpParseOptions"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree"; "Microsoft.CodeAnalysis.CSharp.DeclarationKind"; "Microsoft.CodeAnalysis.CSharp.ErrorCode"; "Microsoft.CodeAnalysis.CSharp.ObjectDisplay"; "Microsoft.CodeAnalysis.CSharp.SymbolDisplay"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.AttributeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.BracketedArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CrefParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.FromClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.LanguageParser"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.Lexer"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameColonSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameEqualsSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.QueryBodySyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxTrivia"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlElementStartTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.XmlPrefixSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SelectOrGroupClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SkippedTokensTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StructuredTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxEquivalence"; "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxNodeOrTokenListBuilder"; "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxTokenListBuilder"; "Microsoft.CodeAnalysis.CSharp.Syntax.SyntaxTriviaListBuilder"; "Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.SyntaxFacts" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.SyntaxNodeExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.SyntaxTreeDiagnosticEnumerator" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSDiagnostic"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Syntax.InternalSyntax.SyntaxToken"; "Microsoft.CodeAnalysis.CSharp.SyntaxDiagnosticInfo" }
   "Microsoft.CodeAnalysis.CSharp.SyntaxTreeSemanticModel" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AliasAndExternAliasDirective"; "Microsoft.CodeAnalysis.CSharp.AliasAndUsingDirective"; "Microsoft.CodeAnalysis.CSharp.AttributeSemanticModel"; "Microsoft.CodeAnalysis.CSharp.AwaitExpressionInfo"; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BinderFactory"; "Microsoft.CodeAnalysis.CSharp.BoundBadStatement"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpControlFlowAnalysis"; "Microsoft.CodeAnalysis.CSharp.CSharpDataFlowAnalysis"; "Microsoft.CodeAnalysis.CSharp.CSharpSemanticModel"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo"; "Microsoft.CodeAnalysis.CSharp.Imports"; "Microsoft.CodeAnalysis.CSharp.InContainerBinder"; "Microsoft.CodeAnalysis.CSharp.InitializerSemanticModel"; "Microsoft.CodeAnalysis.CSharp.LocalScopeBinder"; "Microsoft.CodeAnalysis.CSharp.LookupPosition"; "Microsoft.CodeAnalysis.CSharp.MemberSemanticModel"; "Microsoft.CodeAnalysis.CSharp.MethodBodySemanticModel"; "Microsoft.CodeAnalysis.CSharp.OperatorFacts"; "Microsoft.CodeAnalysis.CSharp.QueryClauseInfo"; "Microsoft.CodeAnalysis.CSharp.RegionAnalysisContext"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AliasSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.EventSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ExplicitInterfaceHelpers"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ImplicitNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberFieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFactory"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind"; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.SyntaxTriviaFunctions" -> { rank=none; "Microsoft.CodeAnalysis.CSharpExtensions" }
   "Microsoft.CodeAnalysis.CSharp.SynthesizedMethodMetadataCompiler" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSymbolVisitor"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberContainerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourcePropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedExplicitImplementationMethod"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.SynthesizedSubmissionFields" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ImplicitNamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedFieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.SyntheticBoundNodeFactory" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BoundArrayAccess"; "Microsoft.CodeAnalysis.CSharp.BoundArrayLength"; "Microsoft.CodeAnalysis.CSharp.BoundAsOperator"; "Microsoft.CodeAnalysis.CSharp.BoundAssignmentOperator"; "Microsoft.CodeAnalysis.CSharp.BoundBadExpression"; "Microsoft.CodeAnalysis.CSharp.BoundBaseReference"; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundConditionalGoto"; "Microsoft.CodeAnalysis.CSharp.BoundConversion"; "Microsoft.CodeAnalysis.CSharp.BoundDefaultOperator"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundExpressionStatement"; "Microsoft.CodeAnalysis.CSharp.BoundFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundFieldInfo"; "Microsoft.CodeAnalysis.CSharp.BoundGotoStatement"; "Microsoft.CodeAnalysis.CSharp.BoundHoistedFieldAccess"; "Microsoft.CodeAnalysis.CSharp.BoundLabelStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLiteral"; "Microsoft.CodeAnalysis.CSharp.BoundLocal"; "Microsoft.CodeAnalysis.CSharp.BoundMethodInfo"; "Microsoft.CodeAnalysis.CSharp.BoundNoOpStatement"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundNullCoalescingOperator"; "Microsoft.CodeAnalysis.CSharp.BoundObjectCreationExpression"; "Microsoft.CodeAnalysis.CSharp.BoundParameter"; "Microsoft.CodeAnalysis.CSharp.BoundSequence"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePoint"; "Microsoft.CodeAnalysis.CSharp.BoundSequencePointWithSpan"; "Microsoft.CodeAnalysis.CSharp.BoundSizeOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchSection"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement"; "Microsoft.CodeAnalysis.CSharp.BoundThisReference"; "Microsoft.CodeAnalysis.CSharp.BoundThrowStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTryStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTypeExpression"; "Microsoft.CodeAnalysis.CSharp.BoundTypeOfOperator"; "Microsoft.CodeAnalysis.CSharp.BoundUnaryOperator"; "Microsoft.CodeAnalysis.CSharp.CSDiagnostic"; "Microsoft.CodeAnalysis.CSharp.CSDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.ConversionsBase"; "Microsoft.CodeAnalysis.CSharp.Emit.NoPia.EmbeddedTypesManager"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AssemblySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.FieldSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.GeneratedLabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceOrTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PropertySymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceLabelSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceModuleSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SynthesizedImplementationReadOnlyProperty"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.TypeCompilationState" }
   "Microsoft.CodeAnalysis.CSharp.TypeCompilationState" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.Emit.PEModuleBuilder"; "Microsoft.CodeAnalysis.CSharp.Imports"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.TypeConversions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.ConversionsBase" }
   "Microsoft.CodeAnalysis.CSharp.TypeUnification" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.AbstractTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.ArrayTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MutableTypeMap"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.PointerTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol" }
   "Microsoft.CodeAnalysis.CSharp.TypeofBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax" }
   "Microsoft.CodeAnalysis.CSharp.UnaryOperatorAnalysisResult" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.OperatorAnalysisResultKind"; "Microsoft.CodeAnalysis.CSharp.UnaryOperatorSignature" }
   "Microsoft.CodeAnalysis.CSharp.UnaryOperatorOverloadResolutionResult" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.OperatorAnalysisResultKind"; "Microsoft.CodeAnalysis.CSharp.UnaryOperatorAnalysisResult"; "Microsoft.CodeAnalysis.CSharp.UnaryOperatorSignature" }
   "Microsoft.CodeAnalysis.CSharp.UnaryOperatorSignature" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.UnaryOperatorKind" }
   "Microsoft.CodeAnalysis.CSharp.UnassignedAddressTakenVariablesWalker" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundAddressOfOperator"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.DataFlowPass"; "Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax" }
   "Microsoft.CodeAnalysis.CSharp.UnassignedVariablesWalker" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.DataFlowPass"; "Microsoft.CodeAnalysis.CSharp.Symbol" }
   "Microsoft.CodeAnalysis.CSharp.UnboundLambda" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.LocalizableErrorArgument"; "Microsoft.CodeAnalysis.CSharp.MessageIDExtensions"; "Microsoft.CodeAnalysis.CSharp.UnboundLambdaState" }
   "Microsoft.CodeAnalysis.CSharp.UnboundLambdaState" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BoundBlock"; "Microsoft.CodeAnalysis.CSharp.BoundLambda"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.ControlFlowPass"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.ErrorCode"; "Microsoft.CodeAnalysis.CSharp.ErrorFacts"; "Microsoft.CodeAnalysis.CSharp.ExecutableCodeBinder"; "Microsoft.CodeAnalysis.CSharp.FlowAnalysisPass"; "Microsoft.CodeAnalysis.CSharp.LocalizableErrorArgument"; "Microsoft.CodeAnalysis.CSharp.MessageIDExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ExtendedErrorTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MemberSignatureComparer"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceMemberMethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.UnboundLambda"; "Microsoft.CodeAnalysis.CSharp.WithLambdaParametersBinder" }
   "Microsoft.CodeAnalysis.CSharp.UnmatchedGotoFinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.BoundConditionalGoto"; "Microsoft.CodeAnalysis.CSharp.BoundGotoStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLabelStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLabeledStatement"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchLabel"; "Microsoft.CodeAnalysis.CSharp.BoundSwitchStatement"; "Microsoft.CodeAnalysis.CSharp.BoundTreeVisitor"; "Microsoft.CodeAnalysis.CSharp.BoundTreeWalker"; "Microsoft.CodeAnalysis.CSharp.Symbols.LabelSymbol" }
   "Microsoft.CodeAnalysis.CSharp.UnprocessedDocumentationCommentFinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxWalker"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxExtensions" }
   "Microsoft.CodeAnalysis.CSharp.UserDefinedConversionAnalysis" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.UserDefinedConversionAnalysisKind" }
   "Microsoft.CodeAnalysis.CSharp.UserDefinedConversionResult" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.UserDefinedConversionAnalysis"; "Microsoft.CodeAnalysis.CSharp.UserDefinedConversionAnalysisKind"; "Microsoft.CodeAnalysis.CSharp.UserDefinedConversionResultKind" }
   "Microsoft.CodeAnalysis.CSharp.UsingStatementBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.BoundExpression"; "Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration"; "Microsoft.CodeAnalysis.CSharp.BoundMultipleLocalDeclarations"; "Microsoft.CodeAnalysis.CSharp.BoundStatement"; "Microsoft.CodeAnalysis.CSharp.BoundUsingStatement"; "Microsoft.CodeAnalysis.CSharp.CSharpCompilation"; "Microsoft.CodeAnalysis.CSharp.Conversion"; "Microsoft.CodeAnalysis.CSharp.ConversionsBase"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.LocalScopeBinder"; "Microsoft.CodeAnalysis.CSharp.LockOrUsingStatementExpressionHandler"; "Microsoft.CodeAnalysis.CSharp.Symbols.LocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.SourceLocalSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeSymbolExtensions"; "Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax" }
   "Microsoft.CodeAnalysis.CSharp.UsingsBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.Imports"; "Microsoft.CodeAnalysis.CSharp.NamespaceOrTypeAndUsingDirective"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamespaceSymbol" }
   "Microsoft.CodeAnalysis.CSharp.VariablesDeclaredWalker" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.AbstractRegionControlFlowPass"; "Microsoft.CodeAnalysis.CSharp.BoundCatchBlock"; "Microsoft.CodeAnalysis.CSharp.BoundForEachStatement"; "Microsoft.CodeAnalysis.CSharp.BoundLambda"; "Microsoft.CodeAnalysis.CSharp.BoundLocalDeclaration"; "Microsoft.CodeAnalysis.CSharp.BoundNode"; "Microsoft.CodeAnalysis.CSharp.BoundQueryClause"; "Microsoft.CodeAnalysis.CSharp.ControlFlowPass"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol" }
   "Microsoft.CodeAnalysis.CSharp.WhileBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.LoopBinder" }
   "Microsoft.CodeAnalysis.CSharp.WithClassTypeParametersBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.LookupOptionExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.NamedTypeSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.WithTypeParametersBinder" }
   "Microsoft.CodeAnalysis.CSharp.WithCrefTypeParametersBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode"; "Microsoft.CodeAnalysis.CSharp.LookupOptionExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.CrefTypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.MemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax"; "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax"; "Microsoft.CodeAnalysis.CSharp.SyntaxFacts"; "Microsoft.CodeAnalysis.CSharp.SyntaxKind"; "Microsoft.CodeAnalysis.CSharp.WithTypeParametersBinder" }
   "Microsoft.CodeAnalysis.CSharp.WithLambdaParametersBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.DiagnosticBagExtensions"; "Microsoft.CodeAnalysis.CSharp.LocalScopeBinder"; "Microsoft.CodeAnalysis.CSharp.LookupOptionExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.LambdaSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax" }
   "Microsoft.CodeAnalysis.CSharp.WithMethodTypeParametersBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.LookupOptionExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.MethodSymbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.TypeParameterSymbol"; "Microsoft.CodeAnalysis.CSharp.WithTypeParametersBinder" }
   "Microsoft.CodeAnalysis.CSharp.WithParametersBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder"; "Microsoft.CodeAnalysis.CSharp.LookupOptionExtensions"; "Microsoft.CodeAnalysis.CSharp.Symbol"; "Microsoft.CodeAnalysis.CSharp.Symbols.ParameterSymbol" }
   "Microsoft.CodeAnalysis.CSharp.WithTypeParametersBinder" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.Binder" }
   "Microsoft.CodeAnalysis.CSharp.XmlSyntaxDiagnosticInfo" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.SyntaxDiagnosticInfo"; "Microsoft.CodeAnalysis.CSharp.XmlParseErrorCode" }
   "Microsoft.CodeAnalysis.CSharpExtensions" -> { rank=none; "Microsoft.CodeAnalysis.CSharp.SyntaxKind" }
   }

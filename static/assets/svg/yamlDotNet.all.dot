digraph G {
    page="40,60"; 
    ratio=auto;
    rankdir=LR;
    fontsize=10;
   "YamlDotNet.Core.CharacterAnalyzer`1" -> { rank=none; "YamlDotNet.Core.ILookAheadBuffer" }
   "YamlDotNet.Core.Constants" -> { rank=none; "YamlDotNet.Core.Tokens.TagDirective" }
   "YamlDotNet.Core.Emitter" -> { rank=none; "YamlDotNet.Core.Constants"; "YamlDotNet.Core.EmitterState"; "YamlDotNet.Core.Events.AnchorAlias"; "YamlDotNet.Core.Events.DocumentEnd"; "YamlDotNet.Core.Events.DocumentStart"; "YamlDotNet.Core.Events.EventType"; "YamlDotNet.Core.Events.IAnchorAlias"; "YamlDotNet.Core.Events.IDocumentEnd"; "YamlDotNet.Core.Events.IDocumentStart"; "YamlDotNet.Core.Events.IMappingEnd"; "YamlDotNet.Core.Events.IMappingStart"; "YamlDotNet.Core.Events.IParsingEvent"; "YamlDotNet.Core.Events.IScalar"; "YamlDotNet.Core.Events.ISequenceEnd"; "YamlDotNet.Core.Events.ISequenceStart"; "YamlDotNet.Core.Events.IStreamEnd"; "YamlDotNet.Core.Events.IStreamStart"; "YamlDotNet.Core.Events.MappingStart"; "YamlDotNet.Core.Events.NodeEvent"; "YamlDotNet.Core.Events.Scalar"; "YamlDotNet.Core.Events.SequenceStart"; "YamlDotNet.Core.ScalarStyle"; "YamlDotNet.Core.StringLookAheadBuffer"; "YamlDotNet.Core.TagDirectiveCollection"; "YamlDotNet.Core.Tokens.TagDirective"; "YamlDotNet.Core.Tokens.VersionDirective"; "YamlDotNet.Core.Version"; "YamlDotNet.Core.YamlException" }
   "YamlDotNet.Core.EventReader" -> { rank=none; "YamlDotNet.Core.Events.ParsingEvent"; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.Parser"; "YamlDotNet.Core.YamlException" }
   "YamlDotNet.Core.Events.AnchorAlias" -> { rank=none; "YamlDotNet.Core.Events.IAnchorAlias"; "YamlDotNet.Core.Events.IParsingEvent"; "YamlDotNet.Core.Events.NodeEvent"; "YamlDotNet.Core.Events.ParsingEvent"; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.YamlException" }
   "YamlDotNet.Core.Events.DocumentEnd" -> { rank=none; "YamlDotNet.Core.Events.IDocumentEnd"; "YamlDotNet.Core.Events.IParsingEvent"; "YamlDotNet.Core.Events.ParsingEvent"; "YamlDotNet.Core.Mark" }
   "YamlDotNet.Core.Events.DocumentStart" -> { rank=none; "YamlDotNet.Core.Events.IDocumentStart"; "YamlDotNet.Core.Events.IParsingEvent"; "YamlDotNet.Core.Events.ParsingEvent"; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.TagDirectiveCollection"; "YamlDotNet.Core.Tokens.VersionDirective" }
   "YamlDotNet.Core.Events.IAnchorAlias" -> { rank=none; "YamlDotNet.Core.Events.IParsingEvent" }
   "YamlDotNet.Core.Events.IDocumentEnd" -> { rank=none; "YamlDotNet.Core.Events.IParsingEvent" }
   "YamlDotNet.Core.Events.IDocumentStart" -> { rank=none; "YamlDotNet.Core.Events.IParsingEvent"; "YamlDotNet.Core.TagDirectiveCollection"; "YamlDotNet.Core.Tokens.VersionDirective" }
   "YamlDotNet.Core.Events.IMappingEnd" -> { rank=none; "YamlDotNet.Core.Events.IParsingEvent" }
   "YamlDotNet.Core.Events.IMappingStart" -> { rank=none; "YamlDotNet.Core.Events.INodeEvent"; "YamlDotNet.Core.Events.IParsingEvent"; "YamlDotNet.Core.Events.MappingStyle" }
   "YamlDotNet.Core.Events.INodeEvent" -> { rank=none; "YamlDotNet.Core.Events.IParsingEvent" }
   "YamlDotNet.Core.Events.IParsingEvent" -> { rank=none; "YamlDotNet.Core.Mark" }
   "YamlDotNet.Core.Events.IScalar" -> { rank=none; "YamlDotNet.Core.Events.INodeEvent"; "YamlDotNet.Core.Events.IParsingEvent"; "YamlDotNet.Core.ScalarStyle" }
   "YamlDotNet.Core.Events.ISequenceEnd" -> { rank=none; "YamlDotNet.Core.Events.IParsingEvent" }
   "YamlDotNet.Core.Events.ISequenceStart" -> { rank=none; "YamlDotNet.Core.Events.INodeEvent"; "YamlDotNet.Core.Events.IParsingEvent"; "YamlDotNet.Core.Events.SequenceStyle" }
   "YamlDotNet.Core.Events.IStreamEnd" -> { rank=none; "YamlDotNet.Core.Events.IParsingEvent" }
   "YamlDotNet.Core.Events.IStreamStart" -> { rank=none; "YamlDotNet.Core.Events.IParsingEvent" }
   "YamlDotNet.Core.Events.MappingEnd" -> { rank=none; "YamlDotNet.Core.Events.IMappingEnd"; "YamlDotNet.Core.Events.IParsingEvent"; "YamlDotNet.Core.Events.ParsingEvent"; "YamlDotNet.Core.Mark" }
   "YamlDotNet.Core.Events.MappingStart" -> { rank=none; "YamlDotNet.Core.Events.IMappingStart"; "YamlDotNet.Core.Events.INodeEvent"; "YamlDotNet.Core.Events.IParsingEvent"; "YamlDotNet.Core.Events.MappingStyle"; "YamlDotNet.Core.Events.NodeEvent"; "YamlDotNet.Core.Mark" }
   "YamlDotNet.Core.Events.NodeEvent" -> { rank=none; "YamlDotNet.Core.Events.INodeEvent"; "YamlDotNet.Core.Events.IParsingEvent"; "YamlDotNet.Core.Events.ParsingEvent"; "YamlDotNet.Core.Mark" }
   "YamlDotNet.Core.Events.ParsingEvent" -> { rank=none; "YamlDotNet.Core.Events.IParsingEvent"; "YamlDotNet.Core.Mark" }
   "YamlDotNet.Core.Events.Scalar" -> { rank=none; "YamlDotNet.Core.Events.INodeEvent"; "YamlDotNet.Core.Events.IParsingEvent"; "YamlDotNet.Core.Events.IScalar"; "YamlDotNet.Core.Events.NodeEvent"; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.ScalarStyle" }
   "YamlDotNet.Core.Events.SequenceEnd" -> { rank=none; "YamlDotNet.Core.Events.IParsingEvent"; "YamlDotNet.Core.Events.ISequenceEnd"; "YamlDotNet.Core.Events.ParsingEvent"; "YamlDotNet.Core.Mark" }
   "YamlDotNet.Core.Events.SequenceStart" -> { rank=none; "YamlDotNet.Core.Events.INodeEvent"; "YamlDotNet.Core.Events.IParsingEvent"; "YamlDotNet.Core.Events.ISequenceStart"; "YamlDotNet.Core.Events.NodeEvent"; "YamlDotNet.Core.Events.SequenceStyle"; "YamlDotNet.Core.Mark" }
   "YamlDotNet.Core.Events.StreamEnd" -> { rank=none; "YamlDotNet.Core.Events.IParsingEvent"; "YamlDotNet.Core.Events.IStreamEnd"; "YamlDotNet.Core.Events.ParsingEvent"; "YamlDotNet.Core.Mark" }
   "YamlDotNet.Core.Events.StreamStart" -> { rank=none; "YamlDotNet.Core.Events.IParsingEvent"; "YamlDotNet.Core.Events.IStreamStart"; "YamlDotNet.Core.Events.ParsingEvent"; "YamlDotNet.Core.Mark" }
   "YamlDotNet.Core.LookAheadBuffer" -> { rank=none; "YamlDotNet.Core.ILookAheadBuffer" }
   "YamlDotNet.Core.Parser" -> { rank=none; "YamlDotNet.Core.Constants"; "YamlDotNet.Core.Events.AnchorAlias"; "YamlDotNet.Core.Events.DocumentEnd"; "YamlDotNet.Core.Events.DocumentStart"; "YamlDotNet.Core.Events.MappingEnd"; "YamlDotNet.Core.Events.MappingStart"; "YamlDotNet.Core.Events.ParsingEvent"; "YamlDotNet.Core.Events.Scalar"; "YamlDotNet.Core.Events.SequenceEnd"; "YamlDotNet.Core.Events.SequenceStart"; "YamlDotNet.Core.Events.StreamEnd"; "YamlDotNet.Core.Events.StreamStart"; "YamlDotNet.Core.ParserState"; "YamlDotNet.Core.Scanner"; "YamlDotNet.Core.SemanticErrorException"; "YamlDotNet.Core.TagDirectiveCollection"; "YamlDotNet.Core.Tokens.Anchor"; "YamlDotNet.Core.Tokens.AnchorAlias"; "YamlDotNet.Core.Tokens.BlockEnd"; "YamlDotNet.Core.Tokens.BlockEntry"; "YamlDotNet.Core.Tokens.BlockMappingStart"; "YamlDotNet.Core.Tokens.BlockSequenceStart"; "YamlDotNet.Core.Tokens.DocumentEnd"; "YamlDotNet.Core.Tokens.DocumentStart"; "YamlDotNet.Core.Tokens.FlowEntry"; "YamlDotNet.Core.Tokens.FlowMappingEnd"; "YamlDotNet.Core.Tokens.FlowMappingStart"; "YamlDotNet.Core.Tokens.FlowSequenceEnd"; "YamlDotNet.Core.Tokens.FlowSequenceStart"; "YamlDotNet.Core.Tokens.Key"; "YamlDotNet.Core.Tokens.Scalar"; "YamlDotNet.Core.Tokens.StreamEnd"; "YamlDotNet.Core.Tokens.StreamStart"; "YamlDotNet.Core.Tokens.Tag"; "YamlDotNet.Core.Tokens.TagDirective"; "YamlDotNet.Core.Tokens.Token"; "YamlDotNet.Core.Tokens.Value"; "YamlDotNet.Core.Tokens.VersionDirective"; "YamlDotNet.Core.Version" }
   "YamlDotNet.Core.Scanner" -> { rank=none; "YamlDotNet.Core.LookAheadBuffer"; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.ScalarStyle"; "YamlDotNet.Core.SimpleKey"; "YamlDotNet.Core.SyntaxErrorException"; "YamlDotNet.Core.Tokens.Anchor"; "YamlDotNet.Core.Tokens.AnchorAlias"; "YamlDotNet.Core.Tokens.BlockEnd"; "YamlDotNet.Core.Tokens.BlockEntry"; "YamlDotNet.Core.Tokens.DocumentEnd"; "YamlDotNet.Core.Tokens.DocumentStart"; "YamlDotNet.Core.Tokens.FlowEntry"; "YamlDotNet.Core.Tokens.FlowMappingEnd"; "YamlDotNet.Core.Tokens.FlowMappingStart"; "YamlDotNet.Core.Tokens.FlowSequenceEnd"; "YamlDotNet.Core.Tokens.FlowSequenceStart"; "YamlDotNet.Core.Tokens.Key"; "YamlDotNet.Core.Tokens.Scalar"; "YamlDotNet.Core.Tokens.StreamEnd"; "YamlDotNet.Core.Tokens.StreamStart"; "YamlDotNet.Core.Tokens.Tag"; "YamlDotNet.Core.Tokens.TagDirective"; "YamlDotNet.Core.Tokens.Token"; "YamlDotNet.Core.Tokens.Value"; "YamlDotNet.Core.Tokens.VersionDirective"; "YamlDotNet.Core.Version" }
   "YamlDotNet.Core.SemanticErrorException" -> { rank=none; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.YamlException" }
   "YamlDotNet.Core.SimpleKey" -> { rank=none; "YamlDotNet.Core.Mark" }
   "YamlDotNet.Core.SyntaxErrorException" -> { rank=none; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.YamlException" }
   "YamlDotNet.Core.TagDirectiveCollection" -> { rank=none; "YamlDotNet.Core.Tokens.TagDirective" }
   "YamlDotNet.Core.Tokens.Anchor" -> { rank=none; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.Tokens.Token" }
   "YamlDotNet.Core.Tokens.AnchorAlias" -> { rank=none; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.Tokens.Token" }
   "YamlDotNet.Core.Tokens.BlockEnd" -> { rank=none; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.Tokens.Token" }
   "YamlDotNet.Core.Tokens.BlockEntry" -> { rank=none; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.Tokens.Token" }
   "YamlDotNet.Core.Tokens.BlockMappingStart" -> { rank=none; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.Tokens.Token" }
   "YamlDotNet.Core.Tokens.BlockSequenceStart" -> { rank=none; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.Tokens.Token" }
   "YamlDotNet.Core.Tokens.DocumentEnd" -> { rank=none; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.Tokens.Token" }
   "YamlDotNet.Core.Tokens.DocumentStart" -> { rank=none; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.Tokens.Token" }
   "YamlDotNet.Core.Tokens.FlowEntry" -> { rank=none; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.Tokens.Token" }
   "YamlDotNet.Core.Tokens.FlowMappingEnd" -> { rank=none; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.Tokens.Token" }
   "YamlDotNet.Core.Tokens.FlowMappingStart" -> { rank=none; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.Tokens.Token" }
   "YamlDotNet.Core.Tokens.FlowSequenceEnd" -> { rank=none; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.Tokens.Token" }
   "YamlDotNet.Core.Tokens.FlowSequenceStart" -> { rank=none; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.Tokens.Token" }
   "YamlDotNet.Core.Tokens.Key" -> { rank=none; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.Tokens.Token" }
   "YamlDotNet.Core.Tokens.Scalar" -> { rank=none; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.ScalarStyle"; "YamlDotNet.Core.Tokens.Token" }
   "YamlDotNet.Core.Tokens.StreamEnd" -> { rank=none; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.Tokens.Token" }
   "YamlDotNet.Core.Tokens.StreamStart" -> { rank=none; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.Tokens.Token" }
   "YamlDotNet.Core.Tokens.Tag" -> { rank=none; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.Tokens.Token" }
   "YamlDotNet.Core.Tokens.TagDirective" -> { rank=none; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.Tokens.Token" }
   "YamlDotNet.Core.Tokens.Token" -> { rank=none; "YamlDotNet.Core.Mark" }
   "YamlDotNet.Core.Tokens.Value" -> { rank=none; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.Tokens.Token" }
   "YamlDotNet.Core.Tokens.VersionDirective" -> { rank=none; "YamlDotNet.Core.Mark"; "YamlDotNet.Core.Tokens.Token"; "YamlDotNet.Core.Version" }
   "YamlDotNet.Core.YamlException" -> { rank=none; "YamlDotNet.Core.Mark" }
   }

digraph G {
    page="40,60"; 
    ratio=auto;
    rankdir=LR;
    fontsize=10;
   "Castle.Components.DictionaryAdapter.AbstractDictionaryAdapterVisitor" -> { rank=none; "Castle.Components.DictionaryAdapter.DictionaryAdapterMeta"; "Castle.Components.DictionaryAdapter.IDictionaryAdapter"; "Castle.Components.DictionaryAdapter.PropertyDescriptor" }
   "Castle.Components.DictionaryAdapter.CascadingDictionaryAdapter" -> { rank=none; "Castle.Components.DictionaryAdapter.AbstractDictionaryAdapter" }
   "Castle.Components.DictionaryAdapter.ComponentAttribute" -> { rank=none; "Castle.Components.DictionaryAdapter.DictionaryAdapterInstance"; "Castle.Components.DictionaryAdapter.DictionaryBehaviorAttribute"; "Castle.Components.DictionaryAdapter.IDictionaryAdapter" }
   "Castle.Components.DictionaryAdapter.DictionaryAdapterBase" -> { rank=none; "Castle.Components.DictionaryAdapter.DictionaryAdapterInstance"; "Castle.Components.DictionaryAdapter.DictionaryAdapterMeta"; "Castle.Components.DictionaryAdapter.DictionaryDescriptor"; "Castle.Components.DictionaryAdapter.DictionaryValidateGroup"; "Castle.Components.DictionaryAdapter.IDictionaryAdapter"; "Castle.Components.DictionaryAdapter.IDictionaryAdapterFactory"; "Castle.Components.DictionaryAdapter.IDictionaryBehavior"; "Castle.Components.DictionaryAdapter.IDictionaryCreateStrategy"; "Castle.Components.DictionaryAdapter.IDictionaryEqualityHashCodeStrategy"; "Castle.Components.DictionaryAdapter.IDictionaryInitializer"; "Castle.Components.DictionaryAdapter.IDictionaryValidator"; "Castle.Components.DictionaryAdapter.IDynamicValue"; "Castle.Components.DictionaryAdapter.PropertyDescriptor"; "Castle.Components.DictionaryAdapter.PropertyModifiedEventArgs"; "Castle.Components.DictionaryAdapter.PropertyModifyingEventArgs" }
   "Castle.Components.DictionaryAdapter.DictionaryAdapterFactory" -> { rank=none; "Castle.Components.DictionaryAdapter.AttributesUtil"; "Castle.Components.DictionaryAdapter.DefaultPropertyGetter"; "Castle.Components.DictionaryAdapter.DictionaryAdapterAttribute"; "Castle.Components.DictionaryAdapter.DictionaryAdapterBase"; "Castle.Components.DictionaryAdapter.DictionaryAdapterInstance"; "Castle.Components.DictionaryAdapter.DictionaryAdapterMeta"; "Castle.Components.DictionaryAdapter.DictionaryDescriptor"; "Castle.Components.DictionaryAdapter.FetchAttribute"; "Castle.Components.DictionaryAdapter.IDictionaryAdapter"; "Castle.Components.DictionaryAdapter.IDictionaryBehavior"; "Castle.Components.DictionaryAdapter.IDictionaryEdit"; "Castle.Components.DictionaryAdapter.IDictionaryKeyBuilder"; "Castle.Components.DictionaryAdapter.IDictionaryMetaInitializer"; "Castle.Components.DictionaryAdapter.IDictionaryNotify"; "Castle.Components.DictionaryAdapter.IDictionaryPropertyGetter"; "Castle.Components.DictionaryAdapter.IDictionaryPropertySetter"; "Castle.Components.DictionaryAdapter.IDictionaryValidate"; "Castle.Components.DictionaryAdapter.IPropertyDescriptorInitializer"; "Castle.Components.DictionaryAdapter.NameValueCollectionAdapter"; "Castle.Components.DictionaryAdapter.PropertyDescriptor"; "Castle.Components.DictionaryAdapter.XPathAdapter"; "Castle.Components.DictionaryAdapter.XPathBehavior" }
   "Castle.Components.DictionaryAdapter.DictionaryAdapterInstance" -> { rank=none; "Castle.Components.DictionaryAdapter.IDictionaryAdapterFactory"; "Castle.Components.DictionaryAdapter.IDictionaryCreateStrategy"; "Castle.Components.DictionaryAdapter.IDictionaryEqualityHashCodeStrategy"; "Castle.Components.DictionaryAdapter.PropertyDescriptor" }
   "Castle.Components.DictionaryAdapter.DictionaryAdapterMeta" -> { rank=none; "Castle.Components.DictionaryAdapter.IDictionaryMetaInitializer"; "Castle.Components.DictionaryAdapter.PropertyDescriptor" }
   "Castle.Components.DictionaryAdapter.DictionaryDescriptor" -> { rank=none; "Castle.Components.DictionaryAdapter.IDictionaryInitializer"; "Castle.Components.DictionaryAdapter.IDictionaryMetaInitializer"; "Castle.Components.DictionaryAdapter.PropertyDescriptor" }
   "Castle.Components.DictionaryAdapter.DictionaryValidateGroup" -> { rank=none; "Castle.Components.DictionaryAdapter.DictionaryAdapterMeta"; "Castle.Components.DictionaryAdapter.GroupAttribute"; "Castle.Components.DictionaryAdapter.IDictionaryAdapter"; "Castle.Components.DictionaryAdapter.IDictionaryNotify"; "Castle.Components.DictionaryAdapter.IDictionaryValidate"; "Castle.Components.DictionaryAdapter.PropertyDescriptor" }
   "Castle.Components.DictionaryAdapter.GenericDictionaryAdapter`1" -> { rank=none; "Castle.Components.DictionaryAdapter.AbstractDictionaryAdapter" }
   "Castle.Components.DictionaryAdapter.KeyAttribute" -> { rank=none; "Castle.Components.DictionaryAdapter.DictionaryBehaviorAttribute" }
   "Castle.Components.DictionaryAdapter.KeyPrefixAttribute" -> { rank=none; "Castle.Components.DictionaryAdapter.DictionaryBehaviorAttribute" }
   "Castle.Components.DictionaryAdapter.KeySubstitutionAttribute" -> { rank=none; "Castle.Components.DictionaryAdapter.DictionaryBehaviorAttribute" }
   "Castle.Components.DictionaryAdapter.MultiLevelEditAttribute" -> { rank=none; "Castle.Components.DictionaryAdapter.DictionaryBehaviorAttribute"; "Castle.Components.DictionaryAdapter.IDictionaryEdit" }
   "Castle.Components.DictionaryAdapter.NameValueCollectionAdapter" -> { rank=none; "Castle.Components.DictionaryAdapter.AbstractDictionaryAdapter" }
   "Castle.Components.DictionaryAdapter.NewGuidAttribute" -> { rank=none; "Castle.Components.DictionaryAdapter.DictionaryBehaviorAttribute" }
   "Castle.Components.DictionaryAdapter.OnDemandAttribute" -> { rank=none; "Castle.Components.DictionaryAdapter.BindingListInitializer`1"; "Castle.Components.DictionaryAdapter.DictionaryAdapterMeta"; "Castle.Components.DictionaryAdapter.DictionaryBehaviorAttribute"; "Castle.Components.DictionaryAdapter.EditableBindingList`1"; "Castle.Components.DictionaryAdapter.EditableList"; "Castle.Components.DictionaryAdapter.EditableList`1"; "Castle.Components.DictionaryAdapter.IDictionaryAdapter"; "Castle.Components.DictionaryAdapter.IDictionaryCreate"; "Castle.Components.DictionaryAdapter.IDictionaryEdit"; "Castle.Components.DictionaryAdapter.IValueInitializer"; "Castle.Components.DictionaryAdapter.PropertyDescriptor" }
   "Castle.Components.DictionaryAdapter.PropagateNotificationsAttribute" -> { rank=none; "Castle.Components.DictionaryAdapter.DictionaryBehaviorAttribute"; "Castle.Components.DictionaryAdapter.IDictionaryNotify" }
   "Castle.Components.DictionaryAdapter.PropertyDescriptor" -> { rank=none; "Castle.Components.DictionaryAdapter.AttributesUtil"; "Castle.Components.DictionaryAdapter.IDictionaryBehavior"; "Castle.Components.DictionaryAdapter.IDictionaryKeyBuilder"; "Castle.Components.DictionaryAdapter.IDictionaryPropertyGetter"; "Castle.Components.DictionaryAdapter.IDictionaryPropertySetter"; "Castle.Components.DictionaryAdapter.IDynamicValue" }
   "Castle.Components.DictionaryAdapter.StringFormatAttribute" -> { rank=none; "Castle.Components.DictionaryAdapter.DictionaryBehaviorAttribute"; "Castle.Components.DictionaryAdapter.IDictionaryAdapter" }
   "Castle.Components.DictionaryAdapter.StringListAttribute" -> { rank=none; "Castle.Components.DictionaryAdapter.DictionaryBehaviorAttribute" }
   "Castle.Components.DictionaryAdapter.StringListWrapper`1" -> { rank=none; "Castle.Components.DictionaryAdapter.StringListAttribute" }
   "Castle.Components.DictionaryAdapter.StringStorageAttribute" -> { rank=none; "Castle.Components.DictionaryAdapter.DictionaryBehaviorAttribute" }
   "Castle.Components.DictionaryAdapter.StringValuesAttribute" -> { rank=none; "Castle.Components.DictionaryAdapter.DictionaryBehaviorAttribute"; "Castle.Components.DictionaryAdapter.PropertyDescriptor" }
   "Castle.Components.DictionaryAdapter.SuppressNotificationsAttribute" -> { rank=none; "Castle.Components.DictionaryAdapter.DictionaryBehaviorAttribute"; "Castle.Components.DictionaryAdapter.PropertyDescriptor" }
   "Castle.Components.DictionaryAdapter.TypeKeyPrefixAttribute" -> { rank=none; "Castle.Components.DictionaryAdapter.DictionaryBehaviorAttribute"; "Castle.Components.DictionaryAdapter.PropertyDescriptor" }
   "Castle.Components.DictionaryAdapter.XPathAdapter" -> { rank=none; "Castle.Components.DictionaryAdapter.BindingListInitializer`1"; "Castle.Components.DictionaryAdapter.DictionaryAdapterInstance"; "Castle.Components.DictionaryAdapter.DictionaryAdapterMeta"; "Castle.Components.DictionaryAdapter.DictionaryBehaviorAttribute"; "Castle.Components.DictionaryAdapter.DictionaryDescriptor"; "Castle.Components.DictionaryAdapter.EditableBindingList`1"; "Castle.Components.DictionaryAdapter.EditableList`1"; "Castle.Components.DictionaryAdapter.IDictionaryAdapter"; "Castle.Components.DictionaryAdapter.IDictionaryAdapterFactory"; "Castle.Components.DictionaryAdapter.IDictionaryBehavior"; "Castle.Components.DictionaryAdapter.IValueInitializer"; "Castle.Components.DictionaryAdapter.PropertyDescriptor"; "Castle.Components.DictionaryAdapter.XPathAttribute"; "Castle.Components.DictionaryAdapter.XPathBehavior"; "Castle.Components.DictionaryAdapter.XPathContext"; "Castle.Components.DictionaryAdapter.XPathExtensions"; "Castle.Components.DictionaryAdapter.XPathResult"; "Castle.Components.DictionaryAdapter.XmlMetadata" }
   "Castle.Components.DictionaryAdapter.XPathBehavior" -> { rank=none; "Castle.Components.DictionaryAdapter.BehaviorVisitor"; "Castle.Components.DictionaryAdapter.DictionaryAdapterMeta"; "Castle.Components.DictionaryAdapter.DictionaryBehaviorAttribute"; "Castle.Components.DictionaryAdapter.XPathExtensions"; "Castle.Components.DictionaryAdapter.XmlMetadata"; "Castle.Components.DictionaryAdapter.XmlNamespaceAttribute" }
   "Castle.Components.DictionaryAdapter.XPathContext" -> { rank=none; "Castle.Components.DictionaryAdapter.BehaviorVisitor"; "Castle.Components.DictionaryAdapter.XPathFunctionAttribute"; "Castle.Components.DictionaryAdapter.XmlNamespaceAttribute" }
   "Castle.Components.DictionaryAdapter.XPathExtensions" -> { rank=none; "Castle.Components.DictionaryAdapter.DictionaryAdapterInstance"; "Castle.Components.DictionaryAdapter.DictionaryAdapterMeta"; "Castle.Components.DictionaryAdapter.DictionaryDescriptor"; "Castle.Components.DictionaryAdapter.IDictionaryAdapter"; "Castle.Components.DictionaryAdapter.IDictionaryAdapterFactory"; "Castle.Components.DictionaryAdapter.IDictionaryBehavior"; "Castle.Components.DictionaryAdapter.PropertyDescriptor"; "Castle.Components.DictionaryAdapter.XPathBehavior"; "Castle.Components.DictionaryAdapter.XmlMetadata" }
   "Castle.Components.DictionaryAdapter.XPathResult" -> { rank=none; "Castle.Components.DictionaryAdapter.DictionaryAdapterMeta"; "Castle.Components.DictionaryAdapter.IDictionaryAdapter"; "Castle.Components.DictionaryAdapter.PropertyDescriptor"; "Castle.Components.DictionaryAdapter.XPathContext"; "Castle.Components.DictionaryAdapter.XPathPositionComparer"; "Castle.Components.DictionaryAdapter.XmlMetadata" }
   "Castle.Core.Configuration.AbstractConfiguration" -> { rank=none; "Castle.Core.Configuration.ConfigurationAttributeCollection"; "Castle.Core.Configuration.ConfigurationCollection" }
   "Castle.Core.Configuration.ConfigurationCollection" -> { rank=none; "Castle.Core.Configuration.IConfiguration" }
   "Castle.Core.Configuration.MutableConfiguration" -> { rank=none; "Castle.Core.Configuration.AbstractConfiguration"; "Castle.Core.Configuration.IConfiguration" }
   "Castle.Core.Configuration.Xml.XmlConfigurationDeserializer" -> { rank=none; "Castle.Core.Configuration.AbstractConfiguration"; "Castle.Core.Configuration.ConfigurationCollection"; "Castle.Core.Configuration.IConfiguration"; "Castle.Core.Configuration.MutableConfiguration" }
   "Castle.Core.Internal.LinkedList" -> { rank=none; "Castle.Core.Internal.LinkNode"; "Castle.Core.Internal.LinkedListEnumerator" }
   "Castle.Core.Internal.LinkedListEnumerator" -> { rank=none; "Castle.Core.Internal.LinkNode" }
   "Castle.Core.Internal.Lock" -> { rank=none; "Castle.Core.Internal.SlimReadWriteLock" }
   "Castle.Core.Internal.MonitorLock" -> { rank=none; "Castle.Core.Internal.Lock"; "Castle.Core.Internal.MonitorLockHolder"; "Castle.Core.Internal.MonitorUpgradeableLockHolder" }
   "Castle.Core.Internal.MonitorUpgradeableLockHolder" -> { rank=none; "Castle.Core.Internal.NoOpLock" }
   "Castle.Core.Internal.NoOpLock" -> { rank=none; "Castle.Core.Internal.ILockHolder" }
   "Castle.Core.Internal.NoOpUpgradeableLock" -> { rank=none; "Castle.Core.Internal.IUpgradeableLockHolder"; "Castle.Core.Internal.NoOpLock" }
   "Castle.Core.Internal.SlimReadWriteLock" -> { rank=none; "Castle.Core.Internal.Lock"; "Castle.Core.Internal.NoOpLock"; "Castle.Core.Internal.SlimReadLockHolder"; "Castle.Core.Internal.SlimUpgradeableReadLockHolder"; "Castle.Core.Internal.SlimWriteLockHolder" }
   "Castle.Core.Internal.SlimUpgradeableReadLockHolder" -> { rank=none; "Castle.Core.Internal.NoOpLock"; "Castle.Core.Internal.SlimWriteLockHolder" }
   "Castle.Core.Logging.ConsoleFactory" -> { rank=none; "Castle.Core.Logging.ConsoleLogger" }
   "Castle.Core.Logging.ConsoleLogger" -> { rank=none; "Castle.Core.Logging.LevelFilteredLogger"; "Castle.Core.Logging.LoggerLevel" }
   "Castle.Core.Logging.DiagnosticsLogger" -> { rank=none; "Castle.Core.Logging.LevelFilteredLogger" }
   "Castle.Core.Logging.DiagnosticsLoggerFactory" -> { rank=none; "Castle.Core.Logging.AbstractLoggerFactory"; "Castle.Core.Logging.DiagnosticsLogger"; "Castle.Core.Logging.LevelFilteredLogger" }
   "Castle.Core.Logging.LevelFilteredLogger" -> { rank=none; "Castle.Core.Logging.LoggerLevel" }
   "Castle.Core.Logging.NullLogFactory" -> { rank=none; "Castle.Core.Logging.AbstractLoggerFactory"; "Castle.Core.Logging.NullLogger" }
   "Castle.Core.Logging.StreamLogger" -> { rank=none; "Castle.Core.Logging.LevelFilteredLogger"; "Castle.Core.Logging.LoggerLevel" }
   "Castle.Core.Logging.StreamLoggerFactory" -> { rank=none; "Castle.Core.Logging.AbstractLoggerFactory"; "Castle.Core.Logging.LevelFilteredLogger"; "Castle.Core.Logging.StreamLogger" }
   "Castle.Core.Logging.TraceLogger" -> { rank=none; "Castle.Core.Logging.LevelFilteredLogger" }
   "Castle.Core.Logging.TraceLoggerFactory" -> { rank=none; "Castle.Core.Logging.AbstractLoggerFactory"; "Castle.Core.Logging.TraceLogger" }
   "Castle.Core.Logging.WebLogger" -> { rank=none; "Castle.Core.Logging.LevelFilteredLogger"; "Castle.Core.Logging.LoggerLevel" }
   "Castle.Core.Logging.WebLoggerFactory" -> { rank=none; "Castle.Core.Logging.AbstractLoggerFactory"; "Castle.Core.Logging.WebLogger" }
   "Castle.Core.Resource.AbstractStreamResource" -> { rank=none; "Castle.Core.Resource.AbstractResource"; "Castle.Core.Resource.StreamFactory" }
   "Castle.Core.Resource.AssemblyBundleResource" -> { rank=none; "Castle.Core.Resource.AbstractResource"; "Castle.Core.Resource.CustomUri"; "Castle.Core.Resource.ResourceException" }
   "Castle.Core.Resource.AssemblyResource" -> { rank=none; "Castle.Core.Resource.AbstractStreamResource"; "Castle.Core.Resource.CustomUri"; "Castle.Core.Resource.ResourceException"; "Castle.Core.Resource.StreamFactory" }
   "Castle.Core.Resource.AssemblyResourceFactory" -> { rank=none; "Castle.Core.Resource.AssemblyResource"; "Castle.Core.Resource.CustomUri" }
   "Castle.Core.Resource.ConfigResource" -> { rank=none; "Castle.Core.Resource.AbstractResource"; "Castle.Core.Resource.CustomUri" }
   "Castle.Core.Resource.ConfigResourceFactory" -> { rank=none; "Castle.Core.Resource.ConfigResource"; "Castle.Core.Resource.CustomUri" }
   "Castle.Core.Resource.FileResource" -> { rank=none; "Castle.Core.Resource.AbstractResource"; "Castle.Core.Resource.AbstractStreamResource"; "Castle.Core.Resource.CustomUri"; "Castle.Core.Resource.ResourceException"; "Castle.Core.Resource.StreamFactory" }
   "Castle.Core.Resource.FileResourceFactory" -> { rank=none; "Castle.Core.Resource.CustomUri"; "Castle.Core.Resource.FileResource" }
   "Castle.Core.Resource.StaticContentResource" -> { rank=none; "Castle.Core.Resource.AbstractResource" }
   "Castle.Core.Resource.UncResource" -> { rank=none; "Castle.Core.Resource.AbstractResource"; "Castle.Core.Resource.AbstractStreamResource"; "Castle.Core.Resource.CustomUri"; "Castle.Core.Resource.ResourceException"; "Castle.Core.Resource.StreamFactory" }
   "Castle.Core.Resource.UncResourceFactory" -> { rank=none; "Castle.Core.Resource.CustomUri"; "Castle.Core.Resource.UncResource" }
   "Castle.Core.Smtp.DefaultSmtpSender" -> { rank=none; "Castle.Core.Internal.PermissionUtil" }
   "Castle.DynamicProxy.AbstractInvocation" -> { rank=none; "Castle.DynamicProxy.IInterceptor"; "Castle.DynamicProxy.IInterceptorSelector"; "Castle.DynamicProxy.IInvocation"; "Castle.DynamicProxy.RemotableInvocation" }
   "Castle.DynamicProxy.AttributeUtil" -> { rank=none; "Castle.DynamicProxy.Generators.AttributeDisassembler"; "Castle.DynamicProxy.Generators.AttributesToAvoidReplicating"; "Castle.DynamicProxy.IAttributeDisassembler"; "Castle.DynamicProxy.ProxyGenerationException" }
   "Castle.DynamicProxy.CacheMappingsAttribute" -> { rank=none; "Castle.DynamicProxy.Generators.CacheKey" }
   "Castle.DynamicProxy.CompositionInvocation" -> { rank=none; "Castle.DynamicProxy.AbstractInvocation"; "Castle.DynamicProxy.InvocationHelper" }
   "Castle.DynamicProxy.Contributors.ClassMembersCollector" -> { rank=none; "Castle.DynamicProxy.Contributors.MembersCollector"; "Castle.DynamicProxy.Generators.MetaMethod" }
   "Castle.DynamicProxy.Contributors.ClassProxyInstanceContributor" -> { rank=none; "Castle.DynamicProxy.AttributeUtil"; "Castle.DynamicProxy.Contributors.ProxyInstanceContributor"; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder"; "Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignStatement"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConstReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConstructorInvocationStatement"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConvertExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ExpressionStatement"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.MethodInvocationExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReturnStatement"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.SelfReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeTokenExpression"; "Castle.DynamicProxy.Tokens.FormatterServicesMethods"; "Castle.DynamicProxy.Tokens.SerializationInfoMethods"; "Castle.DynamicProxy.Tokens.TypeUtilMethods" }
   "Castle.DynamicProxy.Contributors.ClassProxyTargetContributor" -> { rank=none; "Castle.DynamicProxy.Contributors.ClassMembersCollector"; "Castle.DynamicProxy.Contributors.CompositeTypeContributor"; "Castle.DynamicProxy.Contributors.DelegateTypeGenerator"; "Castle.DynamicProxy.Contributors.GetTargetExpressionDelegate"; "Castle.DynamicProxy.Contributors.InterfaceMembersOnClassCollector"; "Castle.DynamicProxy.Contributors.InvocationWithDelegateContributor"; "Castle.DynamicProxy.Contributors.InvocationWithGenericDelegateContributor"; "Castle.DynamicProxy.Contributors.MembersCollector"; "Castle.DynamicProxy.Generators.CacheKey"; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil"; "Castle.DynamicProxy.Generators.Emitters.ClassEmitter"; "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder"; "Castle.DynamicProxy.Generators.Emitters.MethodEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.MethodInvocationExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReturnStatement"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.SelfReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeTokenExpression"; "Castle.DynamicProxy.Generators.INamingScope"; "Castle.DynamicProxy.Generators.InheritanceInvocationTypeGenerator"; "Castle.DynamicProxy.Generators.InvocationTypeGenerator"; "Castle.DynamicProxy.Generators.MetaMethod"; "Castle.DynamicProxy.IProxyGenerationHook"; "Castle.DynamicProxy.ModuleScope"; "Castle.DynamicProxy.Tokens.InvocationMethods" }
   "Castle.DynamicProxy.Contributors.ClassProxyWithTargetTargetContributor" -> { rank=none; "Castle.DynamicProxy.Contributors.CompositeTypeContributor"; "Castle.DynamicProxy.Contributors.DelegateTypeGenerator"; "Castle.DynamicProxy.Contributors.GetTargetExpressionDelegate"; "Castle.DynamicProxy.Contributors.InterfaceMembersOnClassCollector"; "Castle.DynamicProxy.Contributors.InvocationWithDelegateContributor"; "Castle.DynamicProxy.Contributors.InvocationWithGenericDelegateContributor"; "Castle.DynamicProxy.Contributors.MembersCollector"; "Castle.DynamicProxy.Contributors.WrappedClassMembersCollector"; "Castle.DynamicProxy.Generators.CacheKey"; "Castle.DynamicProxy.Generators.CompositionInvocationTypeGenerator"; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil"; "Castle.DynamicProxy.Generators.Emitters.ClassEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference"; "Castle.DynamicProxy.Generators.InheritanceInvocationTypeGenerator"; "Castle.DynamicProxy.Generators.InvocationTypeGenerator"; "Castle.DynamicProxy.Generators.MetaMethod"; "Castle.DynamicProxy.IInvocation"; "Castle.DynamicProxy.IProxyGenerationHook"; "Castle.DynamicProxy.ModuleScope"; "Castle.DynamicProxy.Tokens.InvocationMethods" }
   "Castle.DynamicProxy.Contributors.CompositeTypeContributor" -> { rank=none; "Castle.Core.Logging.ILogger"; "Castle.Core.Logging.NullLogger"; "Castle.DynamicProxy.Contributors.MembersCollector"; "Castle.DynamicProxy.Contributors.OverrideMethodDelegate"; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.EventEmitter"; "Castle.DynamicProxy.Generators.Emitters.PropertyEmitter"; "Castle.DynamicProxy.Generators.INamingScope"; "Castle.DynamicProxy.Generators.MetaEvent"; "Castle.DynamicProxy.Generators.MetaMethod"; "Castle.DynamicProxy.Generators.MetaProperty"; "Castle.DynamicProxy.Generators.MetaType" }
   "Castle.DynamicProxy.Contributors.DelegateTypeGenerator" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.ClassEmitter"; "Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter"; "Castle.DynamicProxy.Generators.Emitters.MethodEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference"; "Castle.DynamicProxy.Generators.Emitters.TypeUtil"; "Castle.DynamicProxy.Generators.INamingScope"; "Castle.DynamicProxy.Generators.MetaMethod" }
   "Castle.DynamicProxy.Contributors.ForwardingMethodGenerator" -> { rank=none; "Castle.DynamicProxy.Contributors.GetTargetReferenceDelegate"; "Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil"; "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder"; "Castle.DynamicProxy.Generators.Emitters.MethodEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.MethodInvocationExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReturnStatement"; "Castle.DynamicProxy.Generators.MethodGenerator" }
   "Castle.DynamicProxy.Contributors.InterfaceMembersCollector" -> { rank=none; "Castle.DynamicProxy.Contributors.MembersCollector"; "Castle.DynamicProxy.Generators.MetaMethod" }
   "Castle.DynamicProxy.Contributors.InterfaceMembersOnClassCollector" -> { rank=none; "Castle.DynamicProxy.Contributors.MembersCollector"; "Castle.DynamicProxy.Generators.MetaMethod" }
   "Castle.DynamicProxy.Contributors.InterfaceProxyInstanceContributor" -> { rank=none; "Castle.DynamicProxy.Contributors.ProxyInstanceContributor"; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference" }
   "Castle.DynamicProxy.Contributors.InterfaceProxyTargetContributor" -> { rank=none; "Castle.DynamicProxy.Contributors.CompositeTypeContributor"; "Castle.DynamicProxy.Contributors.GetTargetExpressionDelegate"; "Castle.DynamicProxy.Contributors.GetTargetReferenceDelegate"; "Castle.DynamicProxy.Contributors.InterfaceMembersOnClassCollector"; "Castle.DynamicProxy.Contributors.MembersCollector"; "Castle.DynamicProxy.Generators.CacheKey"; "Castle.DynamicProxy.Generators.CompositionInvocationTypeGenerator"; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.ClassEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference"; "Castle.DynamicProxy.Generators.InvocationTypeGenerator"; "Castle.DynamicProxy.Generators.MetaMethod"; "Castle.DynamicProxy.IChangeProxyTarget"; "Castle.DynamicProxy.IInvocation"; "Castle.DynamicProxy.IProxyGenerationHook"; "Castle.DynamicProxy.ModuleScope" }
   "Castle.DynamicProxy.Contributors.InterfaceProxyWithTargetInterfaceTargetContributor" -> { rank=none; "Castle.DynamicProxy.Contributors.InterfaceMembersCollector"; "Castle.DynamicProxy.Contributors.InterfaceProxyTargetContributor" }
   "Castle.DynamicProxy.Contributors.InterfaceProxyWithoutTargetContributor" -> { rank=none; "Castle.DynamicProxy.Contributors.CompositeTypeContributor"; "Castle.DynamicProxy.Contributors.GetTargetExpressionDelegate"; "Castle.DynamicProxy.Contributors.InterfaceMembersCollector"; "Castle.DynamicProxy.Contributors.MembersCollector"; "Castle.DynamicProxy.Generators.CacheKey"; "Castle.DynamicProxy.Generators.CompositionInvocationTypeGenerator"; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.ClassEmitter"; "Castle.DynamicProxy.Generators.InvocationTypeGenerator"; "Castle.DynamicProxy.Generators.MetaMethod"; "Castle.DynamicProxy.IProxyGenerationHook"; "Castle.DynamicProxy.ModuleScope" }
   "Castle.DynamicProxy.Contributors.InvocationWithDelegateContributor" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder"; "Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignStatement"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConvertExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.MethodInvocationExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.MethodTokenExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.NullExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReferenceExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeTokenExpression"; "Castle.DynamicProxy.Generators.INamingScope"; "Castle.DynamicProxy.Generators.MetaMethod"; "Castle.DynamicProxy.Tokens.DelegateMethods" }
   "Castle.DynamicProxy.Contributors.InvocationWithGenericDelegateContributor" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder"; "Castle.DynamicProxy.Generators.Emitters.MethodEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReferenceExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeTokenExpression"; "Castle.DynamicProxy.Generators.MetaMethod"; "Castle.DynamicProxy.Tokens.DelegateMethods" }
   "Castle.DynamicProxy.Contributors.MembersCollector" -> { rank=none; "Castle.Core.Logging.ILogger"; "Castle.Core.Logging.NullLogger"; "Castle.DynamicProxy.AttributeUtil"; "Castle.DynamicProxy.Generators.MetaEvent"; "Castle.DynamicProxy.Generators.MetaMethod"; "Castle.DynamicProxy.Generators.MetaProperty"; "Castle.DynamicProxy.Generators.MethodFinder"; "Castle.DynamicProxy.IProxyGenerationHook"; "Castle.DynamicProxy.InternalsHelper" }
   "Castle.DynamicProxy.Contributors.MinimialisticMethodGenerator" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder"; "Castle.DynamicProxy.Generators.Emitters.MethodEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignArgumentStatement"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.DefaultValueExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReturnStatement"; "Castle.DynamicProxy.Generators.MethodGenerator" }
   "Castle.DynamicProxy.Contributors.MixinContributor" -> { rank=none; "Castle.DynamicProxy.Contributors.CompositeTypeContributor"; "Castle.DynamicProxy.Contributors.GetTargetExpressionDelegate"; "Castle.DynamicProxy.Contributors.InterfaceMembersCollector"; "Castle.DynamicProxy.Contributors.MembersCollector"; "Castle.DynamicProxy.Generators.CacheKey"; "Castle.DynamicProxy.Generators.CompositionInvocationTypeGenerator"; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.ClassEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.AsTypeReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.NullCoalescingOperatorExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference"; "Castle.DynamicProxy.Generators.INamingScope"; "Castle.DynamicProxy.Generators.InvocationTypeGenerator"; "Castle.DynamicProxy.Generators.MetaMethod"; "Castle.DynamicProxy.IChangeProxyTarget"; "Castle.DynamicProxy.IInvocation"; "Castle.DynamicProxy.IProxyGenerationHook"; "Castle.DynamicProxy.ModuleScope" }
   "Castle.DynamicProxy.Contributors.ProxyInstanceContributor" -> { rank=none; "Castle.DynamicProxy.AttributeUtil"; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder"; "Castle.DynamicProxy.Generators.Emitters.MethodEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignArrayStatement"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignStatement"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConstReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConvertExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ExpressionStatement"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.LocalReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.MethodInvocationExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.NewArrayExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReturnStatement"; "Castle.DynamicProxy.Serialization.ProxyObjectReference"; "Castle.DynamicProxy.Tokens.SerializationInfoMethods"; "Castle.DynamicProxy.Tokens.TypeMethods" }
   "Castle.DynamicProxy.Contributors.WrappedClassMembersCollector" -> { rank=none; "Castle.DynamicProxy.Contributors.ClassMembersCollector"; "Castle.DynamicProxy.Contributors.MembersCollector"; "Castle.DynamicProxy.Generators.Emitters.TypeUtil"; "Castle.DynamicProxy.IProxyGenerationHook" }
   "Castle.DynamicProxy.DefaultProxyBuilder" -> { rank=none; "Castle.Core.Logging.ILogger"; "Castle.Core.Logging.NullLogger"; "Castle.DynamicProxy.Generators.BaseProxyGenerator"; "Castle.DynamicProxy.Generators.ClassProxyGenerator"; "Castle.DynamicProxy.Generators.ClassProxyWithTargetGenerator"; "Castle.DynamicProxy.Generators.GeneratorException"; "Castle.DynamicProxy.Generators.InterfaceProxyWithTargetGenerator"; "Castle.DynamicProxy.Generators.InterfaceProxyWithTargetInterfaceGenerator"; "Castle.DynamicProxy.Generators.InterfaceProxyWithoutTargetGenerator"; "Castle.DynamicProxy.InternalsHelper"; "Castle.DynamicProxy.ModuleScope" }
   "Castle.DynamicProxy.Generators.AttributeDisassembler" -> { rank=none; "Castle.DynamicProxy.AttributeUtil"; "Castle.DynamicProxy.ProxyGenerationException" }
   "Castle.DynamicProxy.Generators.BaseProxyGenerator" -> { rank=none; "Castle.Core.Logging.ILogger"; "Castle.Core.Logging.NullLogger"; "Castle.DynamicProxy.Contributors.ITypeContributor"; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.ClassEmitter"; "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder"; "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.ConstructorCodeBuilder"; "Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignArrayStatement"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignStatement"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.NewArrayExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.NewInstanceExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReturnStatement"; "Castle.DynamicProxy.Generators.Emitters.TypeUtil"; "Castle.DynamicProxy.IInterceptor"; "Castle.DynamicProxy.IInterceptorSelector"; "Castle.DynamicProxy.IProxyTargetAccessor"; "Castle.DynamicProxy.InternalsHelper"; "Castle.DynamicProxy.MixinData"; "Castle.DynamicProxy.ModuleScope"; "Castle.DynamicProxy.ProxyGenerationException"; "Castle.DynamicProxy.ProxyGenerationOptions"; "Castle.DynamicProxy.StandardInterceptor" }
   "Castle.DynamicProxy.Generators.CacheKey" -> { rank=none; "Castle.DynamicProxy.ProxyGenerationOptions" }
   "Castle.DynamicProxy.Generators.ClassProxyGenerator" -> { rank=none; "Castle.DynamicProxy.Contributors.ClassProxyInstanceContributor"; "Castle.DynamicProxy.Contributors.ClassProxyTargetContributor"; "Castle.DynamicProxy.Contributors.CompositeTypeContributor"; "Castle.DynamicProxy.Contributors.GetTargetExpressionDelegate"; "Castle.DynamicProxy.Contributors.ITypeContributor"; "Castle.DynamicProxy.Contributors.InterfaceProxyWithoutTargetContributor"; "Castle.DynamicProxy.Contributors.MixinContributor"; "Castle.DynamicProxy.Generators.BaseProxyGenerator"; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.ClassEmitter"; "Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.NullExpression"; "Castle.DynamicProxy.Generators.Emitters.TypeUtil"; "Castle.DynamicProxy.Generators.MetaType"; "Castle.DynamicProxy.IProxyGenerationHook"; "Castle.DynamicProxy.IProxyTargetAccessor"; "Castle.DynamicProxy.MixinData"; "Castle.DynamicProxy.ProxyGenerationOptions"; "Castle.DynamicProxy.Serialization.ProxyTypeConstants" }
   "Castle.DynamicProxy.Generators.ClassProxyWithTargetGenerator" -> { rank=none; "Castle.Core.Internal.IUpgradeableLockHolder"; "Castle.Core.Internal.Lock"; "Castle.Core.Logging.ILogger"; "Castle.DynamicProxy.Contributors.ClassProxyInstanceContributor"; "Castle.DynamicProxy.Contributors.ClassProxyWithTargetTargetContributor"; "Castle.DynamicProxy.Contributors.CompositeTypeContributor"; "Castle.DynamicProxy.Contributors.GetTargetExpressionDelegate"; "Castle.DynamicProxy.Contributors.ITypeContributor"; "Castle.DynamicProxy.Contributors.InterfaceProxyWithoutTargetContributor"; "Castle.DynamicProxy.Contributors.MixinContributor"; "Castle.DynamicProxy.Generators.BaseProxyGenerator"; "Castle.DynamicProxy.Generators.CacheKey"; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.ClassEmitter"; "Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.NullExpression"; "Castle.DynamicProxy.Generators.Emitters.TypeUtil"; "Castle.DynamicProxy.Generators.INamingScope"; "Castle.DynamicProxy.Generators.MetaType"; "Castle.DynamicProxy.IProxyGenerationHook"; "Castle.DynamicProxy.IProxyTargetAccessor"; "Castle.DynamicProxy.MixinData"; "Castle.DynamicProxy.ModuleScope"; "Castle.DynamicProxy.ProxyGenerationOptions"; "Castle.DynamicProxy.Serialization.ProxyTypeConstants" }
   "Castle.DynamicProxy.Generators.CompositionInvocationTypeGenerator" -> { rank=none; "Castle.DynamicProxy.CompositionInvocation"; "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder"; "Castle.DynamicProxy.Generators.Emitters.MethodEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ExpressionStatement"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.MethodInvocationExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.SelfReference"; "Castle.DynamicProxy.IInterceptorSelector"; "Castle.DynamicProxy.ProxyGenerationOptions"; "Castle.DynamicProxy.Tokens.InvocationMethods" }
   "Castle.DynamicProxy.Generators.DelegateMembersCollector" -> { rank=none; "Castle.DynamicProxy.Contributors.MembersCollector"; "Castle.DynamicProxy.Generators.MetaMethod" }
   "Castle.DynamicProxy.Generators.DelegateProxyGenerator" -> { rank=none; "Castle.Core.Internal.IUpgradeableLockHolder"; "Castle.Core.Internal.Lock"; "Castle.Core.Logging.ILogger"; "Castle.DynamicProxy.Contributors.ClassProxyInstanceContributor"; "Castle.DynamicProxy.Contributors.CompositeTypeContributor"; "Castle.DynamicProxy.Contributors.ITypeContributor"; "Castle.DynamicProxy.Generators.BaseProxyGenerator"; "Castle.DynamicProxy.Generators.CacheKey"; "Castle.DynamicProxy.Generators.DelegateProxyGenerationHook"; "Castle.DynamicProxy.Generators.DelegateProxyTargetContributor"; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.ClassEmitter"; "Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference"; "Castle.DynamicProxy.Generators.INamingScope"; "Castle.DynamicProxy.Generators.MetaType"; "Castle.DynamicProxy.IProxyBuilder"; "Castle.DynamicProxy.IProxyGenerationHook"; "Castle.DynamicProxy.IProxyTargetAccessor"; "Castle.DynamicProxy.ModuleScope"; "Castle.DynamicProxy.ProxyGenerationOptions"; "Castle.DynamicProxy.Serialization.ProxyTypeConstants" }
   "Castle.DynamicProxy.Generators.DelegateProxyTargetContributor" -> { rank=none; "Castle.DynamicProxy.Contributors.CompositeTypeContributor"; "Castle.DynamicProxy.Contributors.GetTargetExpressionDelegate"; "Castle.DynamicProxy.Contributors.MembersCollector"; "Castle.DynamicProxy.Generators.CacheKey"; "Castle.DynamicProxy.Generators.CompositionInvocationTypeGenerator"; "Castle.DynamicProxy.Generators.DelegateMembersCollector"; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.ClassEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference"; "Castle.DynamicProxy.Generators.InvocationTypeGenerator"; "Castle.DynamicProxy.Generators.MetaMethod"; "Castle.DynamicProxy.IProxyGenerationHook"; "Castle.DynamicProxy.ModuleScope" }
   "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter" -> { rank=none; "Castle.DynamicProxy.AttributeUtil"; "Castle.DynamicProxy.Generators.Emitters.ConstructorCollection"; "Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter"; "Castle.DynamicProxy.Generators.Emitters.EventCollection"; "Castle.DynamicProxy.Generators.Emitters.EventEmitter"; "Castle.DynamicProxy.Generators.Emitters.GenericUtil"; "Castle.DynamicProxy.Generators.Emitters.IMemberEmitter"; "Castle.DynamicProxy.Generators.Emitters.MethodCollection"; "Castle.DynamicProxy.Generators.Emitters.MethodEmitter"; "Castle.DynamicProxy.Generators.Emitters.NestedClassCollection"; "Castle.DynamicProxy.Generators.Emitters.NestedClassEmitter"; "Castle.DynamicProxy.Generators.Emitters.PropertiesCollection"; "Castle.DynamicProxy.Generators.Emitters.PropertyEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference"; "Castle.DynamicProxy.Generators.Emitters.TypeConstructorEmitter"; "Castle.DynamicProxy.ProxyGenerationException"; "Castle.DynamicProxy.ProxyGenerationOptions" }
   "Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReferenceExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeReference" }
   "Castle.DynamicProxy.Generators.Emitters.ClassEmitter" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.StrongNameUtil"; "Castle.DynamicProxy.ModuleScope" }
   "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.LocalReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Statement" }
   "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.ConstructorCodeBuilder" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil"; "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConstructorInvocationStatement"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression" }
   "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.MethodCodeBuilder" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder" }
   "Castle.DynamicProxy.Generators.Emitters.ConstructorCollection" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter" }
   "Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil"; "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder"; "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.ConstructorCodeBuilder"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReturnStatement" }
   "Castle.DynamicProxy.Generators.Emitters.EventCollection" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.EventEmitter" }
   "Castle.DynamicProxy.Generators.Emitters.EventEmitter" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.MethodEmitter" }
   "Castle.DynamicProxy.Generators.Emitters.GenericUtil" -> { rank=none; "Castle.DynamicProxy.AttributeUtil"; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.ApplyGenArgs" }
   "Castle.DynamicProxy.Generators.Emitters.MethodCollection" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.MethodEmitter" }
   "Castle.DynamicProxy.Generators.Emitters.MethodEmitter" -> { rank=none; "Castle.DynamicProxy.AttributeUtil"; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil"; "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder"; "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.MethodCodeBuilder"; "Castle.DynamicProxy.Generators.Emitters.GenericUtil"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.NopStatement"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReturnStatement" }
   "Castle.DynamicProxy.Generators.Emitters.NestedClassCollection" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.NestedClassEmitter" }
   "Castle.DynamicProxy.Generators.Emitters.NestedClassEmitter" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter" }
   "Castle.DynamicProxy.Generators.Emitters.OpCodeUtil" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.LdcOpCodesDictionary"; "Castle.DynamicProxy.Generators.Emitters.LdindOpCodesDictionary"; "Castle.DynamicProxy.Generators.Emitters.StindOpCodesDictionary" }
   "Castle.DynamicProxy.Generators.Emitters.PropertiesCollection" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.PropertyEmitter" }
   "Castle.DynamicProxy.Generators.Emitters.PropertyEmitter" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.MethodEmitter"; "Castle.DynamicProxy.Tokens.TypeBuilderMethods" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.AddressOfReferenceExpression" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeReference"; "Castle.DynamicProxy.ProxyGenerationException" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.AsTypeReference" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignArgumentStatement" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Statement" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignArrayStatement" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Statement" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignStatement" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Statement" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.BindDelegateExpression" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ByRefReference" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.LocalReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeReference" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConstReference" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.OpCodeUtil"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeReference"; "Castle.DynamicProxy.ProxyGenerationException" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConstructorInvocationStatement" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Statement" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConvertExpression" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.LdindOpCodesDictionary"; "Castle.DynamicProxy.Generators.Emitters.OpCodeUtil"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.DefaultValueExpression" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.OpCodeUtil"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.ProxyGenerationException" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ExpressionStatement" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Statement" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.IndirectReference" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.OpCodeUtil"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeReference" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.LiteralIntExpression" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.LoadArrayElementExpression" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConstReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.LoadRefArrayElementExpression" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConstReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.LocalReference" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeReference" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.MethodInvocationExpression" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil"; "Castle.DynamicProxy.Generators.Emitters.MethodEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.SelfReference" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.MethodTokenExpression" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.GeneratorException"; "Castle.DynamicProxy.Tokens.MethodBaseMethods" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.NewArrayExpression" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.NewInstanceExpression" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.ProxyGenerationException" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.NopStatement" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Statement" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.NullCoalescingOperatorExpression" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.NullExpression" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.AddressOfReferenceExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReferenceExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.SelfReference" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReferenceExpression" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReferencesToObjectArrayExpression" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeReference" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReturnReferenceExpression" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeReference" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReturnStatement" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil"; "Castle.DynamicProxy.Generators.Emitters.IMemberEmitter"; "Castle.DynamicProxy.Generators.Emitters.OpCodeUtil"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Statement" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.SelfReference" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ThrowStatement" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConstReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.NewInstanceExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Statement" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeReference" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference" }
   "Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeTokenExpression" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Tokens.TypeMethods" }
   "Castle.DynamicProxy.Generators.Emitters.TypeConstructorEmitter" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder"; "Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReturnStatement" }
   "Castle.DynamicProxy.Generators.Emitters.TypeUtil" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter" }
   "Castle.DynamicProxy.Generators.GeneratorUtil" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil"; "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder"; "Castle.DynamicProxy.Generators.Emitters.MethodEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignStatement"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConvertExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.LoadRefArrayElementExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.MethodInvocationExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeReference"; "Castle.DynamicProxy.Tokens.InvocationMethods" }
   "Castle.DynamicProxy.Generators.InheritanceInvocationTypeGenerator" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference"; "Castle.DynamicProxy.IInterceptorSelector"; "Castle.DynamicProxy.InheritanceInvocation"; "Castle.DynamicProxy.ProxyGenerationOptions"; "Castle.DynamicProxy.Tokens.InvocationMethods" }
   "Castle.DynamicProxy.Generators.InterfaceProxyWithTargetGenerator" -> { rank=none; "Castle.DynamicProxy.Contributors.CompositeTypeContributor"; "Castle.DynamicProxy.Contributors.GetTargetExpressionDelegate"; "Castle.DynamicProxy.Contributors.ITypeContributor"; "Castle.DynamicProxy.Contributors.InterfaceProxyWithoutTargetContributor"; "Castle.DynamicProxy.Generators.BaseProxyGenerator"; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.NullExpression"; "Castle.DynamicProxy.Generators.Emitters.TypeUtil"; "Castle.DynamicProxy.ProxyGenerationOptions"; "Castle.DynamicProxy.Serialization.ProxyTypeConstants" }
   "Castle.DynamicProxy.Generators.InterfaceProxyWithTargetInterfaceGenerator" -> { rank=none; "Castle.DynamicProxy.Contributors.CompositeTypeContributor"; "Castle.DynamicProxy.Contributors.GetTargetExpressionDelegate"; "Castle.DynamicProxy.Contributors.InterfaceProxyWithoutTargetContributor"; "Castle.DynamicProxy.Generators.BaseProxyGenerator"; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.AsTypeReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference"; "Castle.DynamicProxy.Generators.InterfaceProxyWithTargetGenerator"; "Castle.DynamicProxy.Serialization.ProxyTypeConstants" }
   "Castle.DynamicProxy.Generators.InterfaceProxyWithoutTargetGenerator" -> { rank=none; "Castle.DynamicProxy.Contributors.GetTargetExpressionDelegate"; "Castle.DynamicProxy.Contributors.ITypeContributor"; "Castle.DynamicProxy.Generators.BaseProxyGenerator"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.NullExpression"; "Castle.DynamicProxy.Generators.InterfaceProxyWithTargetGenerator"; "Castle.DynamicProxy.Serialization.ProxyTypeConstants" }
   "Castle.DynamicProxy.Generators.InvocationTypeGenerator" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder"; "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.ConstructorCodeBuilder"; "Castle.DynamicProxy.Generators.Emitters.ConstructorEmitter"; "Castle.DynamicProxy.Generators.Emitters.MethodEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ArgumentReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignStatement"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ByRefReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ConvertExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ExpressionStatement"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.FieldReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.LiteralIntExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.LocalReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.MethodInvocationExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReferenceExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReturnStatement"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.SelfReference"; "Castle.DynamicProxy.Generators.Emitters.TypeUtil"; "Castle.DynamicProxy.Generators.IInvocationCreationContributor"; "Castle.DynamicProxy.Generators.MetaMethod"; "Castle.DynamicProxy.IChangeProxyTarget"; "Castle.DynamicProxy.Tokens.InvocationMethods" }
   "Castle.DynamicProxy.Generators.MetaEvent" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.EventEmitter"; "Castle.DynamicProxy.Generators.MetaMethod"; "Castle.DynamicProxy.Generators.MetaTypeElement" }
   "Castle.DynamicProxy.Generators.MetaMethod" -> { rank=none; "Castle.DynamicProxy.Generators.MetaTypeElement"; "Castle.DynamicProxy.Generators.MethodSignatureComparer"; "Castle.DynamicProxy.InternalsHelper" }
   "Castle.DynamicProxy.Generators.MetaProperty" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.PropertyEmitter"; "Castle.DynamicProxy.Generators.MetaMethod"; "Castle.DynamicProxy.Generators.MetaTypeElement" }
   "Castle.DynamicProxy.Generators.MetaType" -> { rank=none; "Castle.DynamicProxy.Generators.MetaEvent"; "Castle.DynamicProxy.Generators.MetaMethod"; "Castle.DynamicProxy.Generators.MetaProperty" }
   "Castle.DynamicProxy.Generators.MethodFinder" -> { rank=none; "Castle.DynamicProxy.Generators.MethodSignatureComparer" }
   "Castle.DynamicProxy.Generators.MethodGenerator" -> { rank=none; "Castle.DynamicProxy.Contributors.OverrideMethodDelegate"; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.MethodEmitter"; "Castle.DynamicProxy.Generators.MetaMethod" }
   "Castle.DynamicProxy.Generators.MethodWithInvocationGenerator" -> { rank=none; "Castle.DynamicProxy.Contributors.GetTargetExpressionDelegate"; "Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter"; "Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder"; "Castle.DynamicProxy.Generators.Emitters.MethodEmitter"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignArrayStatement"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignStatement"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Expression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ExpressionStatement"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.MethodInvocationExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.MethodTokenExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.NewArrayExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.Reference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReferenceExpression"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.SelfReference"; "Castle.DynamicProxy.Generators.Emitters.SimpleAST.TypeTokenExpression"; "Castle.DynamicProxy.Generators.IInvocationCreationContributor"; "Castle.DynamicProxy.Generators.INamingScope"; "Castle.DynamicProxy.Generators.MethodGenerator"; "Castle.DynamicProxy.Tokens.InvocationMethods" }
   "Castle.DynamicProxy.Generators.NamingScope" -> { rank=none; "Castle.DynamicProxy.Generators.INamingScope" }
   "Castle.DynamicProxy.InheritanceInvocation" -> { rank=none; "Castle.DynamicProxy.AbstractInvocation"; "Castle.DynamicProxy.InvocationHelper" }
   "Castle.DynamicProxy.InternalsHelper" -> { rank=none; "Castle.Core.Internal.IUpgradeableLockHolder"; "Castle.Core.Internal.Lock"; "Castle.DynamicProxy.ModuleScope" }
   "Castle.DynamicProxy.InvocationHelper" -> { rank=none; "Castle.Core.Internal.IUpgradeableLockHolder"; "Castle.Core.Internal.Lock" }
   "Castle.DynamicProxy.ModuleScope" -> { rank=none; "Castle.Core.Internal.Lock"; "Castle.DynamicProxy.CacheMappingsAttribute"; "Castle.DynamicProxy.Generators.CacheKey"; "Castle.DynamicProxy.Generators.INamingScope"; "Castle.DynamicProxy.Generators.NamingScope" }
   "Castle.DynamicProxy.PersistentProxyBuilder" -> { rank=none; "Castle.DynamicProxy.DefaultProxyBuilder"; "Castle.DynamicProxy.ModuleScope" }
   "Castle.DynamicProxy.ProxyGenerationOptions" -> { rank=none; "Castle.DynamicProxy.AllMethodsHook"; "Castle.DynamicProxy.IInterceptorSelector"; "Castle.DynamicProxy.IProxyGenerationHook"; "Castle.DynamicProxy.InvalidMixinConfigurationException"; "Castle.DynamicProxy.MixinData" }
   "Castle.DynamicProxy.ProxyGenerator" -> { rank=none; "Castle.Core.Internal.PermissionUtil"; "Castle.Core.Logging.ILogger"; "Castle.Core.Logging.NullLogger"; "Castle.Core.Logging.TraceLogger"; "Castle.DynamicProxy.DefaultProxyBuilder"; "Castle.DynamicProxy.IInterceptor"; "Castle.DynamicProxy.IProxyBuilder"; "Castle.DynamicProxy.MixinData"; "Castle.DynamicProxy.ProxyGenerationOptions" }
   "Castle.DynamicProxy.RemotableInvocation" -> { rank=none; "Castle.DynamicProxy.IInvocation" }
   "Castle.DynamicProxy.Serialization.ProxyObjectReference" -> { rank=none; "Castle.DynamicProxy.Generators.ClassProxyGenerator"; "Castle.DynamicProxy.Generators.ClassProxyWithTargetGenerator"; "Castle.DynamicProxy.Generators.Emitters.TypeUtil"; "Castle.DynamicProxy.Generators.InterfaceProxyWithTargetGenerator"; "Castle.DynamicProxy.Generators.InterfaceProxyWithTargetInterfaceGenerator"; "Castle.DynamicProxy.Generators.InterfaceProxyWithoutTargetGenerator"; "Castle.DynamicProxy.ModuleScope"; "Castle.DynamicProxy.ProxyGenerationOptions"; "Castle.DynamicProxy.Serialization.ProxyTypeConstants" }
   "Castle.DynamicProxy.StandardInterceptor" -> { rank=none; "Castle.DynamicProxy.IInvocation" }
   "Castle.DynamicProxy.Tokens.InvocationMethods" -> { rank=none; "Castle.DynamicProxy.AbstractInvocation"; "Castle.DynamicProxy.CompositionInvocation"; "Castle.DynamicProxy.IInterceptorSelector"; "Castle.DynamicProxy.InheritanceInvocation" }
   "Castle.DynamicProxy.Tokens.TypeUtilMethods" -> { rank=none; "Castle.DynamicProxy.Generators.Emitters.TypeUtil" }
   "Moq.AdvancedMatcherAttribute" -> { rank=none; "Moq.Guard"; "Moq.IMatcher" }
   "Moq.AsInterface`1" -> { rank=none; "Moq.Mock" }
   "Moq.ConditionalContext`1" -> { rank=none; "Moq.Mock" }
   "Moq.ExpressionExtensions" -> { rank=none; "Moq.Evaluator"; "Moq.ExpressionStringBuilder"; "Moq.Extensions"; "Moq.FluentMockContext"; "Moq.Guard"; "Moq.Match" }
   "Moq.ExpressionStringBuilder" -> { rank=none; "Moq.MemberInfoExtensions"; "Moq.TypeExtensions" }
   "Moq.Extensions" -> { rank=none; "Moq.ExpressionExtensions"; "Moq.FluentMockContext"; "Moq.Guard"; "Moq.MemberInfoExtensions"; "Moq.Proxy.ICallContext" }
   "Moq.FluentMockContext" -> { rank=none; "Moq.DefaultValue"; "Moq.Match"; "Moq.Mock"; "Moq.Proxy.ICallContext" }
   "Moq.IMocked" -> { rank=none; "Moq.Mock" }
   "Moq.IMocked`1" -> { rank=none; "Moq.IMocked" }
   "Moq.Interceptor" -> { rank=none; "Moq.ExpressionExtensions"; "Moq.FluentMockContext"; "Moq.IDefaultValueProvider"; "Moq.IMocked"; "Moq.IMocked`1"; "Moq.IProxyCall"; "Moq.MemberInfoExtensions"; "Moq.MethodCallReturn"; "Moq.Mock"; "Moq.MockBehavior"; "Moq.MockException"; "Moq.MockVerificationException"; "Moq.Proxy.ICallContext" }
   "Moq.It" -> { rank=none; "Moq.Match"; "Moq.Range" }
   "Moq.Language.Flow.ICallbackResult" -> { rank=none; "Moq.IHideObjectMembers"; "Moq.Language.Flow.IThrowsResult"; "Moq.Language.IOccurrence"; "Moq.Language.IThrows"; "Moq.Language.IVerifies" }
   "Moq.Language.Flow.IReturnsResult`1" -> { rank=none; "Moq.IHideObjectMembers"; "Moq.Language.ICallback"; "Moq.Language.IOccurrence"; "Moq.Language.IVerifies" }
   "Moq.Language.Flow.IReturnsThrowsGetter`2" -> { rank=none; "Moq.IHideObjectMembers"; "Moq.Language.IThrows" }
   "Moq.Language.Flow.IReturnsThrows`2" -> { rank=none; "Moq.IHideObjectMembers"; "Moq.Language.IThrows" }
   "Moq.Language.Flow.ISetupGetter`2" -> { rank=none; "Moq.IHideObjectMembers"; "Moq.Language.IThrows"; "Moq.Language.IVerifies" }
   "Moq.Language.Flow.ISetupSetter`2" -> { rank=none; "Moq.IHideObjectMembers"; "Moq.Language.Flow.ICallbackResult"; "Moq.Language.Flow.IThrowsResult"; "Moq.Language.IOccurrence"; "Moq.Language.IThrows"; "Moq.Language.IVerifies" }
   "Moq.Language.Flow.ISetup`1" -> { rank=none; "Moq.IHideObjectMembers"; "Moq.Language.Flow.ICallbackResult"; "Moq.Language.Flow.IThrowsResult"; "Moq.Language.ICallback"; "Moq.Language.IOccurrence"; "Moq.Language.IThrows"; "Moq.Language.IVerifies" }
   "Moq.Language.Flow.ISetup`2" -> { rank=none; "Moq.IHideObjectMembers"; "Moq.Language.IThrows"; "Moq.Language.IVerifies" }
   "Moq.Language.Flow.IThrowsResult" -> { rank=none; "Moq.IHideObjectMembers"; "Moq.Language.IOccurrence"; "Moq.Language.IVerifies" }
   "Moq.Language.ICallback" -> { rank=none; "Moq.IHideObjectMembers"; "Moq.Language.Flow.ICallbackResult" }
   "Moq.Language.ICallbackGetter`2" -> { rank=none; "Moq.IHideObjectMembers" }
   "Moq.Language.ICallbackSetter`1" -> { rank=none; "Moq.IHideObjectMembers"; "Moq.Language.Flow.ICallbackResult" }
   "Moq.Language.ICallback`2" -> { rank=none; "Moq.IHideObjectMembers" }
   "Moq.Language.IOccurrence" -> { rank=none; "Moq.IHideObjectMembers"; "Moq.Language.IVerifies" }
   "Moq.Language.IRaise`1" -> { rank=none; "Moq.IHideObjectMembers"; "Moq.Language.IVerifies" }
   "Moq.Language.IReturnsGetter`2" -> { rank=none; "Moq.IHideObjectMembers" }
   "Moq.Language.IReturns`2" -> { rank=none; "Moq.IHideObjectMembers" }
   "Moq.Language.IThrows" -> { rank=none; "Moq.IHideObjectMembers"; "Moq.Language.Flow.IThrowsResult" }
   "Moq.Language.IVerifies" -> { rank=none; "Moq.IHideObjectMembers" }
   "Moq.Linq.FluentMockVisitor" -> { rank=none; "Moq.Extensions"; "Moq.Mock"; "Moq.Mock`1"; "Moq.QueryableMockExtensions" }
   "Moq.Linq.MockQueryable`1" -> { rank=none; "Moq.Guard"; "Moq.Linq.MockSetupsBuilder" }
   "Moq.Linq.MockSetupsBuilder" -> { rank=none; "Moq.ExpressionExtensions"; "Moq.Extensions"; "Moq.Language.IReturns`2"; "Moq.Linq.FluentMockVisitor"; "Moq.Linq.MockQueryable`1"; "Moq.Mocks" }
   "Moq.Match" -> { rank=none; "Moq.FluentMockContext" }
   "Moq.MatchExpression" -> { rank=none; "Moq.Match" }
   "Moq.Match`1" -> { rank=none; "Moq.Match" }
   "Moq.MatcherFactory" -> { rank=none; "Moq.Matchers.ParamArrayMatcher" }
   "Moq.Matchers.ExpressionMatcher" -> { rank=none; "Moq.Matchers.ExpressionComparer" }
   "Moq.Matchers.LazyEvalMatcher" -> { rank=none; "Moq.Evaluator" }
   "Moq.Matchers.Matcher" -> { rank=none; "Moq.Match" }
   "Moq.Matchers.MatcherAttributeMatcher" -> { rank=none; "Moq.ExpressionExtensions" }
   "Moq.Matchers.ParamArrayMatcher" -> { rank=none; "Moq.IMatcher"; "Moq.MatcherFactory" }
   "Moq.Matchers.PredicateMatcher" -> { rank=none; "Moq.ExpressionExtensions"; "Moq.Extensions" }
   "Moq.MethodCall" -> { rank=none; "Moq.ExpressionExtensions"; "Moq.Extensions"; "Moq.IMatcher"; "Moq.MemberInfoExtensions"; "Moq.Mock"; "Moq.MockException"; "Moq.Proxy.ICallContext"; "Moq.Times" }
   "Moq.MethodCallReturn`2" -> { rank=none; "Moq.Extensions"; "Moq.MethodCall"; "Moq.MethodCallReturn"; "Moq.Proxy.ICallContext" }
   "Moq.MethodCall`1" -> { rank=none; "Moq.MethodCall" }
   "Moq.Mock" -> { rank=none; "Moq.DefaultValue"; "Moq.EmptyDefaultValueProvider"; "Moq.ExpressionExtensions"; "Moq.Extensions"; "Moq.FluentMockContext"; "Moq.Guard"; "Moq.IDefaultValueProvider"; "Moq.IHideObjectMembers"; "Moq.IMocked"; "Moq.IProxyCall"; "Moq.Interceptor"; "Moq.Match"; "Moq.MatchExpression"; "Moq.MemberInfoExtensions"; "Moq.MethodCall"; "Moq.MockBehavior"; "Moq.MockDefaultValueProvider"; "Moq.Mocks"; "Moq.PexProtector"; "Moq.Proxy.ICallContext"; "Moq.QueryableMockExtensions"; "Moq.Times" }
   "Moq.MockDefaultValueProvider" -> { rank=none; "Moq.EmptyDefaultValueProvider"; "Moq.Extensions"; "Moq.Mock"; "Moq.MockBehavior"; "Moq.Mock`1" }
   "Moq.MockException" -> { rank=none; "Moq.Extensions"; "Moq.MockBehavior" }
   "Moq.MockExtensions" -> { rank=none; "Moq.Mock"; "Moq.Times" }
   "Moq.MockFactory" -> { rank=none; "Moq.DefaultValue"; "Moq.Guard"; "Moq.Mock"; "Moq.MockBehavior"; "Moq.MockException"; "Moq.MockVerificationException" }
   "Moq.MockLegacyExtensions" -> { rank=none; "Moq.Mock"; "Moq.Times" }
   "Moq.MockRepository" -> { rank=none; "Moq.MockBehavior"; "Moq.MockFactory" }
   "Moq.MockSequenceHelper" -> { rank=none; "Moq.Guard"; "Moq.MockSequence" }
   "Moq.MockVerificationException" -> { rank=none; "Moq.IProxyCall"; "Moq.MockException" }
   "Moq.Mock`1" -> { rank=none; "Moq.Extensions"; "Moq.Mock"; "Moq.MockBehavior"; "Moq.PexProtector"; "Moq.Proxy.CastleProxyFactory"; "Moq.Proxy.IProxyFactory"; "Moq.Times" }
   "Moq.Protected.IProtectedMock`1" -> { rank=none; "Moq.IHideObjectMembers"; "Moq.Times" }
   "Moq.Protected.ItExpr" -> { rank=none; "Moq.It"; "Moq.Range" }
   "Moq.Protected.ProtectedExtension" -> { rank=none; "Moq.Guard" }
   "Moq.Protected.ProtectedMock`1" -> { rank=none; "Moq.ExpressionExtensions"; "Moq.Extensions"; "Moq.Guard"; "Moq.Mock"; "Moq.Protected.ItExpr" }
   "Moq.Proxy.CastleProxyFactory" -> { rank=none; "Castle.DynamicProxy.Generators.AttributesToAvoidReplicating"; "Castle.DynamicProxy.IInterceptor"; "Castle.DynamicProxy.IInvocation"; "Castle.DynamicProxy.ProxyGenerationOptions"; "Castle.DynamicProxy.ProxyGenerator"; "Moq.Proxy.ICallInterceptor" }
   "Moq.QueryableMockExtensions" -> { rank=none; "Moq.EmptyDefaultValueProvider"; "Moq.ExpressionExtensions"; "Moq.Extensions"; "Moq.Guard"; "Moq.IMocked"; "Moq.Mock"; "Moq.MockDefaultValueProvider" }
   "Moq.SetterMethodCall`2" -> { rank=none; "Moq.MethodCall"; "Moq.Protected.ItExpr" }
   "Moq.SetupSequentialContext`2" -> { rank=none; "Moq.Language.ICallback"; "Moq.Language.IThrows" }
   "Moq.Times" -> { rank=none; "Moq.Guard"; "Moq.Range" }
   "Moq.TypeExtensions" -> { rank=none; "Moq.StringExtensions" }
   }

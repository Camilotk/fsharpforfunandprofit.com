digraph G {
    page="40,60"; 
    ratio=auto;
    rankdir=LR;
    fontsize=10;
   "BoDi.BoDiConfigurationSection" -> { rank=none; "BoDi.ContainerRegistrationCollection" }
   "BoDi.ContainerRegistrationCollection" -> { rank=none; "BoDi.ContainerRegistrationConfigElement" }
   "BoDi.IContainedInstance" -> { rank=none; "BoDi.IObjectContainer" }
   "BoDi.ObjectContainer" -> { rank=none; "BoDi.BoDiConfigurationSection"; "BoDi.ContainerRegistrationCollection"; "BoDi.ContainerRegistrationConfigElement"; "BoDi.IObjectContainer"; "BoDi.ObjectContainerException" }
   "TechTalk.SpecFlow.AfterAttribute" -> { rank=none; "TechTalk.SpecFlow.AfterScenarioAttribute" }
   "TechTalk.SpecFlow.AfterFeatureAttribute" -> { rank=none; "TechTalk.SpecFlow.HookAttribute" }
   "TechTalk.SpecFlow.AfterScenarioAttribute" -> { rank=none; "TechTalk.SpecFlow.HookAttribute" }
   "TechTalk.SpecFlow.AfterScenarioBlockAttribute" -> { rank=none; "TechTalk.SpecFlow.HookAttribute" }
   "TechTalk.SpecFlow.AfterStepAttribute" -> { rank=none; "TechTalk.SpecFlow.HookAttribute" }
   "TechTalk.SpecFlow.AfterTestRunAttribute" -> { rank=none; "TechTalk.SpecFlow.HookAttribute" }
   "TechTalk.SpecFlow.Assist.EnumerableProjection`1" -> { rank=none; "TechTalk.SpecFlow.Assist.TableHelperExtensionMethods"; "TechTalk.SpecFlow.Table" }
   "TechTalk.SpecFlow.Assist.InstanceComparisonExtensionMethods" -> { rank=none; "TechTalk.SpecFlow.Assist.ComparisonException"; "TechTalk.SpecFlow.Assist.IValueComparer"; "TechTalk.SpecFlow.Assist.PropertyExtensionMethods"; "TechTalk.SpecFlow.Assist.TEHelpers"; "TechTalk.SpecFlow.Assist.TableHelpers"; "TechTalk.SpecFlow.Assist.ValueComparers.BoolValueComparer"; "TechTalk.SpecFlow.Assist.ValueComparers.DateTimeValueComparer"; "TechTalk.SpecFlow.Assist.ValueComparers.DecimalValueComparer"; "TechTalk.SpecFlow.Assist.ValueComparers.DefaultValueComparer"; "TechTalk.SpecFlow.Assist.ValueComparers.DoubleValueComparer"; "TechTalk.SpecFlow.Assist.ValueComparers.FloatValueComparer"; "TechTalk.SpecFlow.Assist.ValueComparers.GuidValueComparer"; "TechTalk.SpecFlow.Assist.ValueRetrievers.GuidValueRetriever"; "TechTalk.SpecFlow.Table"; "TechTalk.SpecFlow.TableRow" }
   "TechTalk.SpecFlow.Assist.PivotTable" -> { rank=none; "TechTalk.SpecFlow.Table"; "TechTalk.SpecFlow.TableRow"; "TechTalk.SpecFlow.TableRows" }
   "TechTalk.SpecFlow.Assist.ProjectionExtensionMethods" -> { rank=none; "TechTalk.SpecFlow.Table" }
   "TechTalk.SpecFlow.Assist.PropertyExtensionMethods" -> { rank=none; "TechTalk.SpecFlow.Assist.TEHelpers" }
   "TechTalk.SpecFlow.Assist.RowExtensionMethods" -> { rank=none; "TechTalk.SpecFlow.TableRow" }
   "TechTalk.SpecFlow.Assist.SetComparer`1" -> { rank=none; "TechTalk.SpecFlow.Assist.ComparisonException"; "TechTalk.SpecFlow.Assist.InstanceComparisonExtensionMethods"; "TechTalk.SpecFlow.Assist.PivotTable"; "TechTalk.SpecFlow.Assist.TEHelpers"; "TechTalk.SpecFlow.Table" }
   "TechTalk.SpecFlow.Assist.SetComparisonExtensionMethods" -> { rank=none; "TechTalk.SpecFlow.Table" }
   "TechTalk.SpecFlow.Assist.TEHelpers" -> { rank=none; "TechTalk.SpecFlow.Assist.PivotTable"; "TechTalk.SpecFlow.Assist.PropertyExtensionMethods"; "TechTalk.SpecFlow.Assist.TableHelpers"; "TechTalk.SpecFlow.Assist.ValueRetrievers.BoolValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.ByteValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.CharValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.DateTimeValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.DecimalValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.DoubleValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.EnumValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.FloatValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.GuidValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.IntValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.LongValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.NullableBoolValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.NullableByteValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.NullableCharValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.NullableDateTimeValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.NullableDecimalValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.NullableDoubleValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.NullableFloatValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.NullableGuidValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.NullableIntValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.NullableLongValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.NullableSByteValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.NullableShortValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.NullableUIntValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.NullableULongValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.NullableUShortValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.SByteValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.ShortValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.StringValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.UIntValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.ULongValueRetriever"; "TechTalk.SpecFlow.Assist.ValueRetrievers.UShortValueRetriever"; "TechTalk.SpecFlow.Table"; "TechTalk.SpecFlow.TableRow"; "TechTalk.SpecFlow.TableRows" }
   "TechTalk.SpecFlow.Assist.TableDiffExceptionBuilder`1" -> { rank=none; "TechTalk.SpecFlow.Assist.PropertyExtensionMethods"; "TechTalk.SpecFlow.Table" }
   "TechTalk.SpecFlow.Assist.TableDifferenceResults`1" -> { rank=none; "TechTalk.SpecFlow.Table" }
   "TechTalk.SpecFlow.Assist.TableHelperExtensionMethods" -> { rank=none; "TechTalk.SpecFlow.Assist.PivotTable"; "TechTalk.SpecFlow.Assist.TEHelpers"; "TechTalk.SpecFlow.Table" }
   "TechTalk.SpecFlow.Assist.TableHelpers" -> { rank=none; "TechTalk.SpecFlow.TableRow" }
   "TechTalk.SpecFlow.Assist.ValueComparers.GuidValueComparer" -> { rank=none; "TechTalk.SpecFlow.Assist.ValueRetrievers.GuidValueRetriever" }
   "TechTalk.SpecFlow.Async.AsyncContext" -> { rank=none; "TechTalk.SpecFlow.Async.IAsyncTestExecutor"; "TechTalk.SpecFlow.ScenarioContext"; "TechTalk.SpecFlow.SpecFlowContext" }
   "TechTalk.SpecFlow.Async.AsyncSteps" -> { rank=none; "TechTalk.SpecFlow.Async.IAsyncTestExecutor"; "TechTalk.SpecFlow.ScenarioContext"; "TechTalk.SpecFlow.SpecFlowContext"; "TechTalk.SpecFlow.SpecFlowException"; "TechTalk.SpecFlow.Steps" }
   "TechTalk.SpecFlow.Async.AsyncTestRunner" -> { rank=none; "TechTalk.SpecFlow.Async.IAsyncTestExecutor"; "TechTalk.SpecFlow.FeatureContext"; "TechTalk.SpecFlow.FeatureInfo"; "TechTalk.SpecFlow.ITestRunner"; "TechTalk.SpecFlow.Infrastructure.ITestExecutionEngine"; "TechTalk.SpecFlow.ScenarioContext"; "TechTalk.SpecFlow.ScenarioInfo"; "TechTalk.SpecFlow.SpecFlowContext"; "TechTalk.SpecFlow.Table" }
   "TechTalk.SpecFlow.BeforeAttribute" -> { rank=none; "TechTalk.SpecFlow.BeforeScenarioAttribute" }
   "TechTalk.SpecFlow.BeforeFeatureAttribute" -> { rank=none; "TechTalk.SpecFlow.HookAttribute" }
   "TechTalk.SpecFlow.BeforeScenarioAttribute" -> { rank=none; "TechTalk.SpecFlow.HookAttribute" }
   "TechTalk.SpecFlow.BeforeScenarioBlockAttribute" -> { rank=none; "TechTalk.SpecFlow.HookAttribute" }
   "TechTalk.SpecFlow.BeforeStepAttribute" -> { rank=none; "TechTalk.SpecFlow.HookAttribute" }
   "TechTalk.SpecFlow.BeforeTestRunAttribute" -> { rank=none; "TechTalk.SpecFlow.HookAttribute" }
   "TechTalk.SpecFlow.BindingException" -> { rank=none; "TechTalk.SpecFlow.SpecFlowException" }
   "TechTalk.SpecFlow.BindingSkeletons.AnalyzedStepText" -> { rank=none; "TechTalk.SpecFlow.BindingSkeletons.AnalyzedStepParameter" }
   "TechTalk.SpecFlow.BindingSkeletons.DefaultSkeletonTemplateProvider" -> { rank=none; "TechTalk.SpecFlow.BindingSkeletons.FileBasedSkeletonTemplateProvider"; "TechTalk.SpecFlow.BindingSkeletons.ResourceSkeletonTemplateProvider" }
   "TechTalk.SpecFlow.BindingSkeletons.FileBasedSkeletonTemplateProvider" -> { rank=none; "TechTalk.SpecFlow.BindingSkeletons.ISkeletonTemplateProvider"; "TechTalk.SpecFlow.ProgrammingLanguage"; "TechTalk.SpecFlow.SpecFlowException" }
   "TechTalk.SpecFlow.BindingSkeletons.ISkeletonTemplateProvider" -> { rank=none; "TechTalk.SpecFlow.ProgrammingLanguage" }
   "TechTalk.SpecFlow.BindingSkeletons.IStepDefinitionSkeletonProvider" -> { rank=none; "TechTalk.SpecFlow.BindingSkeletons.StepDefinitionSkeletonStyle"; "TechTalk.SpecFlow.Bindings.StepInstance"; "TechTalk.SpecFlow.ProgrammingLanguage" }
   "TechTalk.SpecFlow.BindingSkeletons.IStepTextAnalyzer" -> { rank=none; "TechTalk.SpecFlow.BindingSkeletons.AnalyzedStepText" }
   "TechTalk.SpecFlow.BindingSkeletons.ResourceSkeletonTemplateProvider" -> { rank=none; "TechTalk.SpecFlow.BindingSkeletons.FileBasedSkeletonTemplateProvider"; "TechTalk.SpecFlow.SpecFlowException" }
   "TechTalk.SpecFlow.BindingSkeletons.StepDefinitionSkeletonProvider" -> { rank=none; "TechTalk.SpecFlow.BindingSkeletons.AnalyzedStepParameter"; "TechTalk.SpecFlow.BindingSkeletons.AnalyzedStepText"; "TechTalk.SpecFlow.BindingSkeletons.ISkeletonTemplateProvider"; "TechTalk.SpecFlow.BindingSkeletons.IStepDefinitionSkeletonProvider"; "TechTalk.SpecFlow.BindingSkeletons.IStepTextAnalyzer"; "TechTalk.SpecFlow.BindingSkeletons.StepDefinitionSkeletonStyle"; "TechTalk.SpecFlow.Bindings.StepContext"; "TechTalk.SpecFlow.Bindings.StepDefinitionType"; "TechTalk.SpecFlow.Bindings.StepInstance"; "TechTalk.SpecFlow.ProgrammingLanguage"; "TechTalk.SpecFlow.Tracing.CodeFormattingExtensions"; "TechTalk.SpecFlow.Tracing.LanguageHelper" }
   "TechTalk.SpecFlow.BindingSkeletons.StepTextAnalyzer" -> { rank=none; "TechTalk.SpecFlow.BindingSkeletons.AnalyzedStepParameter"; "TechTalk.SpecFlow.BindingSkeletons.AnalyzedStepText"; "TechTalk.SpecFlow.BindingSkeletons.IStepTextAnalyzer" }
   "TechTalk.SpecFlow.Bindings.BindingFactory" -> { rank=none; "TechTalk.SpecFlow.Bindings.BindingScope"; "TechTalk.SpecFlow.Bindings.HookBinding"; "TechTalk.SpecFlow.Bindings.HookType"; "TechTalk.SpecFlow.Bindings.IBindingFactory"; "TechTalk.SpecFlow.Bindings.IHookBinding"; "TechTalk.SpecFlow.Bindings.IStepArgumentTransformationBinding"; "TechTalk.SpecFlow.Bindings.IStepDefinitionBinding"; "TechTalk.SpecFlow.Bindings.IStepDefinitionRegexCalculator"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingMethod"; "TechTalk.SpecFlow.Bindings.StepArgumentTransformationBinding"; "TechTalk.SpecFlow.Bindings.StepDefinitionType" }
   "TechTalk.SpecFlow.Bindings.BindingInvoker" -> { rank=none; "TechTalk.SpecFlow.Bindings.ExpressionMemberAccessor"; "TechTalk.SpecFlow.Bindings.IBinding"; "TechTalk.SpecFlow.Bindings.IBindingInvoker"; "TechTalk.SpecFlow.Bindings.MethodBinding"; "TechTalk.SpecFlow.Bindings.Reflection.BindingReflectionExtensions"; "TechTalk.SpecFlow.Configuration.RuntimeConfiguration"; "TechTalk.SpecFlow.CultureInfoScope"; "TechTalk.SpecFlow.ErrorHandling.IErrorProvider"; "TechTalk.SpecFlow.FeatureContext"; "TechTalk.SpecFlow.Infrastructure.IContextManager"; "TechTalk.SpecFlow.ScenarioContext"; "TechTalk.SpecFlow.SpecFlowException"; "TechTalk.SpecFlow.Tracing.ITestTracer" }
   "TechTalk.SpecFlow.Bindings.BindingInvokerExtensions" -> { rank=none; "TechTalk.SpecFlow.Bindings.IBindingInvoker"; "TechTalk.SpecFlow.Bindings.IHookBinding"; "TechTalk.SpecFlow.Infrastructure.IContextManager"; "TechTalk.SpecFlow.Tracing.ITestTracer" }
   "TechTalk.SpecFlow.Bindings.BindingMatch" -> { rank=none; "TechTalk.SpecFlow.Bindings.IStepDefinitionBinding"; "TechTalk.SpecFlow.Bindings.StepContext" }
   "TechTalk.SpecFlow.Bindings.BindingRegistry" -> { rank=none; "TechTalk.SpecFlow.Bindings.HookType"; "TechTalk.SpecFlow.Bindings.IHookBinding"; "TechTalk.SpecFlow.Bindings.IStepArgumentTransformationBinding"; "TechTalk.SpecFlow.Bindings.IStepDefinitionBinding"; "TechTalk.SpecFlow.Bindings.StepDefinitionType" }
   "TechTalk.SpecFlow.Bindings.BindingScope" -> { rank=none; "TechTalk.SpecFlow.Bindings.StepContext" }
   "TechTalk.SpecFlow.Bindings.Discovery.BindingSourceAttribute" -> { rank=none; "TechTalk.SpecFlow.Bindings.Discovery.IBindingSourceAttributeValueProvider"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingType" }
   "TechTalk.SpecFlow.Bindings.Discovery.BindingSourceAttributeValueProvider" -> { rank=none; "TechTalk.SpecFlow.Bindings.Discovery.IBindingSourceAttributeValueProvider" }
   "TechTalk.SpecFlow.Bindings.Discovery.BindingSourceMethod" -> { rank=none; "TechTalk.SpecFlow.Bindings.Reflection.IBindingMethod" }
   "TechTalk.SpecFlow.Bindings.Discovery.BindingSourceProcessor" -> { rank=none; "TechTalk.SpecFlow.AfterAttribute"; "TechTalk.SpecFlow.BeforeAttribute"; "TechTalk.SpecFlow.BeforeScenarioAttribute"; "TechTalk.SpecFlow.BindingAttribute"; "TechTalk.SpecFlow.Bindings.BindingScope"; "TechTalk.SpecFlow.Bindings.Discovery.BindingSourceAttribute"; "TechTalk.SpecFlow.Bindings.Discovery.BindingSourceMethod"; "TechTalk.SpecFlow.Bindings.Discovery.BindingSourceType"; "TechTalk.SpecFlow.Bindings.Discovery.IBindingSourceProcessor"; "TechTalk.SpecFlow.Bindings.HookType"; "TechTalk.SpecFlow.Bindings.IBindingFactory"; "TechTalk.SpecFlow.Bindings.Reflection.BindingReflectionExtensions"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingType"; "TechTalk.SpecFlow.Bindings.StepDefinitionType"; "TechTalk.SpecFlow.Compatibility.EnumHelper"; "TechTalk.SpecFlow.GivenAttribute"; "TechTalk.SpecFlow.ScopeAttribute"; "TechTalk.SpecFlow.SpecFlowException"; "TechTalk.SpecFlow.StepArgumentTransformationAttribute"; "TechTalk.SpecFlow.StepDefinitionAttribute"; "TechTalk.SpecFlow.ThenAttribute"; "TechTalk.SpecFlow.WhenAttribute" }
   "TechTalk.SpecFlow.Bindings.Discovery.BindingSourceType" -> { rank=none; "TechTalk.SpecFlow.Bindings.Reflection.IBindingType" }
   "TechTalk.SpecFlow.Bindings.Discovery.IBindingSourceProcessor" -> { rank=none; "TechTalk.SpecFlow.Bindings.Discovery.BindingSourceMethod"; "TechTalk.SpecFlow.Bindings.Discovery.BindingSourceType" }
   "TechTalk.SpecFlow.Bindings.Discovery.IRuntimeBindingSourceProcessor" -> { rank=none; "TechTalk.SpecFlow.Bindings.Discovery.IBindingSourceProcessor" }
   "TechTalk.SpecFlow.Bindings.Discovery.RuntimeBindingRegistryBuilder" -> { rank=none; "TechTalk.SpecFlow.Bindings.Discovery.BindingSourceAttribute"; "TechTalk.SpecFlow.Bindings.Discovery.BindingSourceAttributeValueProvider"; "TechTalk.SpecFlow.Bindings.Discovery.BindingSourceMethod"; "TechTalk.SpecFlow.Bindings.Discovery.BindingSourceType"; "TechTalk.SpecFlow.Bindings.Discovery.IBindingSourceAttributeValueProvider"; "TechTalk.SpecFlow.Bindings.Discovery.IBindingSourceProcessor"; "TechTalk.SpecFlow.Bindings.Discovery.IRuntimeBindingRegistryBuilder"; "TechTalk.SpecFlow.Bindings.Discovery.IRuntimeBindingSourceProcessor"; "TechTalk.SpecFlow.Bindings.Reflection.RuntimeBindingMethod"; "TechTalk.SpecFlow.Bindings.Reflection.RuntimeBindingType"; "TechTalk.SpecFlow.Compatibility.TypeHelper" }
   "TechTalk.SpecFlow.Bindings.Discovery.RuntimeBindingSourceProcessor" -> { rank=none; "TechTalk.SpecFlow.Bindings.Discovery.BindingSourceMethod"; "TechTalk.SpecFlow.Bindings.Discovery.BindingSourceProcessor"; "TechTalk.SpecFlow.Bindings.Discovery.IBindingSourceProcessor"; "TechTalk.SpecFlow.Bindings.Discovery.IRuntimeBindingSourceProcessor"; "TechTalk.SpecFlow.Bindings.IBindingFactory"; "TechTalk.SpecFlow.Bindings.IBindingRegistry"; "TechTalk.SpecFlow.ErrorHandling.IErrorProvider"; "TechTalk.SpecFlow.Tracing.ITestTracer" }
   "TechTalk.SpecFlow.Bindings.HookBinding" -> { rank=none; "TechTalk.SpecFlow.Bindings.BindingScope"; "TechTalk.SpecFlow.Bindings.HookType"; "TechTalk.SpecFlow.Bindings.IBinding"; "TechTalk.SpecFlow.Bindings.IHookBinding"; "TechTalk.SpecFlow.Bindings.IScopedBinding"; "TechTalk.SpecFlow.Bindings.MethodBinding"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingMethod" }
   "TechTalk.SpecFlow.Bindings.IBinding" -> { rank=none; "TechTalk.SpecFlow.Bindings.Reflection.IBindingMethod" }
   "TechTalk.SpecFlow.Bindings.IBindingFactory" -> { rank=none; "TechTalk.SpecFlow.Bindings.BindingScope"; "TechTalk.SpecFlow.Bindings.HookType"; "TechTalk.SpecFlow.Bindings.IHookBinding"; "TechTalk.SpecFlow.Bindings.IStepArgumentTransformationBinding"; "TechTalk.SpecFlow.Bindings.IStepDefinitionBinding"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingMethod"; "TechTalk.SpecFlow.Bindings.StepDefinitionType" }
   "TechTalk.SpecFlow.Bindings.IBindingInvoker" -> { rank=none; "TechTalk.SpecFlow.Bindings.IBinding"; "TechTalk.SpecFlow.Infrastructure.IContextManager"; "TechTalk.SpecFlow.Tracing.ITestTracer" }
   "TechTalk.SpecFlow.Bindings.IBindingRegistry" -> { rank=none; "TechTalk.SpecFlow.Bindings.HookType"; "TechTalk.SpecFlow.Bindings.IHookBinding"; "TechTalk.SpecFlow.Bindings.IStepArgumentTransformationBinding"; "TechTalk.SpecFlow.Bindings.IStepDefinitionBinding"; "TechTalk.SpecFlow.Bindings.StepDefinitionType" }
   "TechTalk.SpecFlow.Bindings.IHookBinding" -> { rank=none; "TechTalk.SpecFlow.Bindings.HookType"; "TechTalk.SpecFlow.Bindings.IBinding"; "TechTalk.SpecFlow.Bindings.IScopedBinding" }
   "TechTalk.SpecFlow.Bindings.IScopedBinding" -> { rank=none; "TechTalk.SpecFlow.Bindings.BindingScope" }
   "TechTalk.SpecFlow.Bindings.IStepArgumentTransformationBinding" -> { rank=none; "TechTalk.SpecFlow.Bindings.IBinding" }
   "TechTalk.SpecFlow.Bindings.IStepArgumentTypeConverter" -> { rank=none; "TechTalk.SpecFlow.Bindings.Reflection.IBindingType" }
   "TechTalk.SpecFlow.Bindings.IStepDefinitionBinding" -> { rank=none; "TechTalk.SpecFlow.Bindings.IBinding"; "TechTalk.SpecFlow.Bindings.IScopedBinding"; "TechTalk.SpecFlow.Bindings.StepDefinitionType" }
   "TechTalk.SpecFlow.Bindings.IStepDefinitionRegexCalculator" -> { rank=none; "TechTalk.SpecFlow.Bindings.Reflection.IBindingMethod"; "TechTalk.SpecFlow.Bindings.StepDefinitionType" }
   "TechTalk.SpecFlow.Bindings.MethodBinding" -> { rank=none; "TechTalk.SpecFlow.Bindings.IBinding"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingMethod" }
   "TechTalk.SpecFlow.Bindings.Reflection.BindingMethod" -> { rank=none; "TechTalk.SpecFlow.Bindings.Reflection.BindingReflectionExtensions"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingMethod"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingParameter"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingType" }
   "TechTalk.SpecFlow.Bindings.Reflection.BindingMethodComparer" -> { rank=none; "TechTalk.SpecFlow.Bindings.Reflection.BindingReflectionExtensions"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingMethod" }
   "TechTalk.SpecFlow.Bindings.Reflection.BindingParameter" -> { rank=none; "TechTalk.SpecFlow.Bindings.Reflection.IBindingParameter"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingType" }
   "TechTalk.SpecFlow.Bindings.Reflection.BindingReflectionExtensions" -> { rank=none; "TechTalk.SpecFlow.Bindings.Reflection.IBindingMethod"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingParameter"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingType"; "TechTalk.SpecFlow.Bindings.Reflection.RuntimeBindingMethod"; "TechTalk.SpecFlow.Bindings.Reflection.RuntimeBindingType"; "TechTalk.SpecFlow.SpecFlowException" }
   "TechTalk.SpecFlow.Bindings.Reflection.BindingType" -> { rank=none; "TechTalk.SpecFlow.Bindings.Reflection.IBindingType" }
   "TechTalk.SpecFlow.Bindings.Reflection.IBindingMethod" -> { rank=none; "TechTalk.SpecFlow.Bindings.Reflection.IBindingParameter"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingType" }
   "TechTalk.SpecFlow.Bindings.Reflection.IBindingParameter" -> { rank=none; "TechTalk.SpecFlow.Bindings.Reflection.IBindingType" }
   "TechTalk.SpecFlow.Bindings.Reflection.RuntimeBindingMethod" -> { rank=none; "TechTalk.SpecFlow.Bindings.Reflection.BindingReflectionExtensions"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingMethod"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingParameter"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingType"; "TechTalk.SpecFlow.Bindings.Reflection.RuntimeBindingParameter"; "TechTalk.SpecFlow.Bindings.Reflection.RuntimeBindingType" }
   "TechTalk.SpecFlow.Bindings.Reflection.RuntimeBindingParameter" -> { rank=none; "TechTalk.SpecFlow.Bindings.Reflection.IBindingParameter"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingType"; "TechTalk.SpecFlow.Bindings.Reflection.RuntimeBindingType" }
   "TechTalk.SpecFlow.Bindings.Reflection.RuntimeBindingType" -> { rank=none; "TechTalk.SpecFlow.Bindings.Reflection.IBindingType" }
   "TechTalk.SpecFlow.Bindings.StepArgumentTransformationBinding" -> { rank=none; "TechTalk.SpecFlow.Bindings.IBinding"; "TechTalk.SpecFlow.Bindings.IStepArgumentTransformationBinding"; "TechTalk.SpecFlow.Bindings.MethodBinding"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingMethod"; "TechTalk.SpecFlow.Bindings.RegexFactory" }
   "TechTalk.SpecFlow.Bindings.StepArgumentTypeConverter" -> { rank=none; "TechTalk.SpecFlow.Assist.ValueRetrievers.GuidValueRetriever"; "TechTalk.SpecFlow.Bindings.IBinding"; "TechTalk.SpecFlow.Bindings.IBindingInvoker"; "TechTalk.SpecFlow.Bindings.IBindingRegistry"; "TechTalk.SpecFlow.Bindings.IStepArgumentTransformationBinding"; "TechTalk.SpecFlow.Bindings.IStepArgumentTypeConverter"; "TechTalk.SpecFlow.Bindings.Reflection.BindingReflectionExtensions"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingMethod"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingParameter"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingType"; "TechTalk.SpecFlow.Bindings.Reflection.RuntimeBindingType"; "TechTalk.SpecFlow.Infrastructure.IContextManager"; "TechTalk.SpecFlow.SpecFlowException"; "TechTalk.SpecFlow.Tracing.ITestTracer" }
   "TechTalk.SpecFlow.Bindings.StepContext" -> { rank=none; "TechTalk.SpecFlow.Compatibility.CultureInfoHelper"; "TechTalk.SpecFlow.FeatureInfo"; "TechTalk.SpecFlow.ScenarioInfo" }
   "TechTalk.SpecFlow.Bindings.StepDefinitionBinding" -> { rank=none; "TechTalk.SpecFlow.Bindings.BindingScope"; "TechTalk.SpecFlow.Bindings.IBinding"; "TechTalk.SpecFlow.Bindings.IScopedBinding"; "TechTalk.SpecFlow.Bindings.IStepDefinitionBinding"; "TechTalk.SpecFlow.Bindings.MethodBinding"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingMethod"; "TechTalk.SpecFlow.Bindings.RegexFactory"; "TechTalk.SpecFlow.Bindings.StepDefinitionType" }
   "TechTalk.SpecFlow.Bindings.StepDefinitionRegexCalculator" -> { rank=none; "TechTalk.SpecFlow.Bindings.IStepDefinitionRegexCalculator"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingMethod"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingParameter"; "TechTalk.SpecFlow.Bindings.StepDefinitionType"; "TechTalk.SpecFlow.Configuration.RuntimeConfiguration"; "TechTalk.SpecFlow.Tracing.LanguageHelper" }
   "TechTalk.SpecFlow.Bindings.StepInstance" -> { rank=none; "TechTalk.SpecFlow.Bindings.StepContext"; "TechTalk.SpecFlow.Bindings.StepDefinitionKeyword"; "TechTalk.SpecFlow.Bindings.StepDefinitionType"; "TechTalk.SpecFlow.Table" }
   "TechTalk.SpecFlow.Compatibility.ExceptionHelper" -> { rank=none; "TechTalk.SpecFlow.Compatibility.MonoHelper" }
   "TechTalk.SpecFlow.Configuration.ConfigDefaults" -> { rank=none; "TechTalk.SpecFlow.BindingSkeletons.StepDefinitionSkeletonStyle"; "TechTalk.SpecFlow.Configuration.MissingOrPendingStepsOutcome" }
   "TechTalk.SpecFlow.Configuration.ConfigurationSectionHandler" -> { rank=none; "TechTalk.SpecFlow.Configuration.BindingCultureConfigElement"; "TechTalk.SpecFlow.Configuration.GeneratorConfigElement"; "TechTalk.SpecFlow.Configuration.LanguageConfigElement"; "TechTalk.SpecFlow.Configuration.PluginCollection"; "TechTalk.SpecFlow.Configuration.RuntimeConfigElement"; "TechTalk.SpecFlow.Configuration.StepAssemblyCollection"; "TechTalk.SpecFlow.Configuration.TraceConfigElement"; "TechTalk.SpecFlow.Configuration.UnitTestProviderConfigElement" }
   "TechTalk.SpecFlow.Configuration.ConfigurationServices" -> { rank=none; "BoDi.IObjectContainer"; "TechTalk.SpecFlow.Infrastructure.TestRunContainerBuilder" }
   "TechTalk.SpecFlow.Configuration.DefaultRuntimeConfigurationProvider" -> { rank=none; "TechTalk.SpecFlow.Configuration.IRuntimeConfigurationProvider"; "TechTalk.SpecFlow.Configuration.RuntimeConfiguration"; "TechTalk.SpecFlow.Infrastructure.PluginDescriptor" }
   "TechTalk.SpecFlow.Configuration.GeneratorConfigElement" -> { rank=none; "BoDi.ContainerRegistrationCollection" }
   "TechTalk.SpecFlow.Configuration.IRuntimeConfigurationProvider" -> { rank=none; "TechTalk.SpecFlow.Configuration.RuntimeConfiguration"; "TechTalk.SpecFlow.Infrastructure.PluginDescriptor" }
   "TechTalk.SpecFlow.Configuration.PluginCollection" -> { rank=none; "TechTalk.SpecFlow.Configuration.PluginConfigElement" }
   "TechTalk.SpecFlow.Configuration.PluginConfigElement" -> { rank=none; "TechTalk.SpecFlow.Infrastructure.PluginDescriptor"; "TechTalk.SpecFlow.Infrastructure.PluginType" }
   "TechTalk.SpecFlow.Configuration.RuntimeConfigElement" -> { rank=none; "BoDi.ContainerRegistrationCollection"; "TechTalk.SpecFlow.Configuration.MissingOrPendingStepsOutcome" }
   "TechTalk.SpecFlow.Configuration.RuntimeConfiguration" -> { rank=none; "BoDi.ContainerRegistrationCollection"; "TechTalk.SpecFlow.BindingSkeletons.StepDefinitionSkeletonStyle"; "TechTalk.SpecFlow.Compatibility.CultureInfoHelper"; "TechTalk.SpecFlow.Configuration.BindingCultureConfigElement"; "TechTalk.SpecFlow.Configuration.ConfigurationSectionHandler"; "TechTalk.SpecFlow.Configuration.LanguageConfigElement"; "TechTalk.SpecFlow.Configuration.MissingOrPendingStepsOutcome"; "TechTalk.SpecFlow.Configuration.PluginConfigElement"; "TechTalk.SpecFlow.Configuration.RuntimeConfigElement"; "TechTalk.SpecFlow.Configuration.StepAssemblyConfigElement"; "TechTalk.SpecFlow.Configuration.TraceConfigElement"; "TechTalk.SpecFlow.Configuration.UnitTestProviderConfigElement"; "TechTalk.SpecFlow.Infrastructure.PluginDescriptor"; "TechTalk.SpecFlow.Tracing.ITraceListener"; "TechTalk.SpecFlow.UnitTestProvider.IUnitTestRuntimeProvider" }
   "TechTalk.SpecFlow.Configuration.StepAssemblyCollection" -> { rank=none; "TechTalk.SpecFlow.Configuration.StepAssemblyConfigElement" }
   "TechTalk.SpecFlow.Configuration.TraceConfigElement" -> { rank=none; "TechTalk.SpecFlow.BindingSkeletons.StepDefinitionSkeletonStyle" }
   "TechTalk.SpecFlow.CultureInfoScope" -> { rank=none; "TechTalk.SpecFlow.Tracing.LanguageHelper" }
   "TechTalk.SpecFlow.ErrorHandling.ErrorProvider" -> { rank=none; "TechTalk.SpecFlow.BindingException"; "TechTalk.SpecFlow.Bindings.BindingMatch"; "TechTalk.SpecFlow.Bindings.IBinding"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingMethod"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingParameter"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingType"; "TechTalk.SpecFlow.Configuration.RuntimeConfiguration"; "TechTalk.SpecFlow.MissingStepDefinitionException"; "TechTalk.SpecFlow.PendingStepException"; "TechTalk.SpecFlow.Tracing.IStepFormatter"; "TechTalk.SpecFlow.UnitTestProvider.IUnitTestRuntimeProvider" }
   "TechTalk.SpecFlow.ErrorHandling.IErrorProvider" -> { rank=none; "TechTalk.SpecFlow.Bindings.BindingMatch"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingMethod"; "TechTalk.SpecFlow.Bindings.StepInstance"; "TechTalk.SpecFlow.Infrastructure.TestStatus"; "TechTalk.SpecFlow.MissingStepDefinitionException"; "TechTalk.SpecFlow.PendingStepException" }
   "TechTalk.SpecFlow.FeatureContext" -> { rank=none; "TechTalk.SpecFlow.FeatureInfo"; "TechTalk.SpecFlow.SpecFlowContext" }
   "TechTalk.SpecFlow.FeatureInfo" -> { rank=none; "TechTalk.SpecFlow.ProgrammingLanguage"; "TechTalk.SpecFlow.Tracing.LanguageHelper" }
   "TechTalk.SpecFlow.GivenAttribute" -> { rank=none; "TechTalk.SpecFlow.StepDefinitionBaseAttribute" }
   "TechTalk.SpecFlow.HookAttribute" -> { rank=none; "TechTalk.SpecFlow.Bindings.HookType" }
   "TechTalk.SpecFlow.ITestRunner" -> { rank=none; "TechTalk.SpecFlow.FeatureContext"; "TechTalk.SpecFlow.FeatureInfo"; "TechTalk.SpecFlow.ScenarioContext"; "TechTalk.SpecFlow.ScenarioInfo"; "TechTalk.SpecFlow.Table" }
   "TechTalk.SpecFlow.ITestRunnerManager" -> { rank=none; "TechTalk.SpecFlow.ITestRunner" }
   "TechTalk.SpecFlow.Infrastructure.BindingAssemblyLoader" -> { rank=none; "TechTalk.SpecFlow.Infrastructure.IBindingAssemblyLoader" }
   "TechTalk.SpecFlow.Infrastructure.ContextManager" -> { rank=none; "BoDi.IObjectContainer"; "TechTalk.SpecFlow.FeatureContext"; "TechTalk.SpecFlow.FeatureInfo"; "TechTalk.SpecFlow.Infrastructure.IContextManager"; "TechTalk.SpecFlow.ScenarioContext"; "TechTalk.SpecFlow.ScenarioInfo"; "TechTalk.SpecFlow.Tracing.ITestTracer" }
   "TechTalk.SpecFlow.Infrastructure.ContextManagerExtensions" -> { rank=none; "TechTalk.SpecFlow.Bindings.StepContext"; "TechTalk.SpecFlow.FeatureContext"; "TechTalk.SpecFlow.Infrastructure.IContextManager"; "TechTalk.SpecFlow.ScenarioContext" }
   "TechTalk.SpecFlow.Infrastructure.DefaultDependencyProvider" -> { rank=none; "BoDi.ObjectContainer" }
   "TechTalk.SpecFlow.Infrastructure.IContextManager" -> { rank=none; "TechTalk.SpecFlow.FeatureContext"; "TechTalk.SpecFlow.FeatureInfo"; "TechTalk.SpecFlow.ScenarioContext"; "TechTalk.SpecFlow.ScenarioInfo" }
   "TechTalk.SpecFlow.Infrastructure.IRuntimePlugin" -> { rank=none; "BoDi.ObjectContainer"; "TechTalk.SpecFlow.Configuration.RuntimeConfiguration" }
   "TechTalk.SpecFlow.Infrastructure.IRuntimePluginLoader" -> { rank=none; "TechTalk.SpecFlow.Infrastructure.IRuntimePlugin"; "TechTalk.SpecFlow.Infrastructure.PluginDescriptor" }
   "TechTalk.SpecFlow.Infrastructure.IStepDefinitionMatchService" -> { rank=none; "TechTalk.SpecFlow.Bindings.BindingMatch"; "TechTalk.SpecFlow.Bindings.IStepDefinitionBinding"; "TechTalk.SpecFlow.Bindings.StepInstance" }
   "TechTalk.SpecFlow.Infrastructure.IStepErrorHandler" -> { rank=none; "TechTalk.SpecFlow.Infrastructure.StepFailureEventArgs"; "TechTalk.SpecFlow.Infrastructure.TestExecutionEngine" }
   "TechTalk.SpecFlow.Infrastructure.ITestExecutionEngine" -> { rank=none; "TechTalk.SpecFlow.Bindings.StepDefinitionKeyword"; "TechTalk.SpecFlow.FeatureContext"; "TechTalk.SpecFlow.FeatureInfo"; "TechTalk.SpecFlow.ScenarioContext"; "TechTalk.SpecFlow.ScenarioInfo"; "TechTalk.SpecFlow.Table" }
   "TechTalk.SpecFlow.Infrastructure.ITestRunnerFactory" -> { rank=none; "TechTalk.SpecFlow.ITestRunner" }
   "TechTalk.SpecFlow.Infrastructure.PluginDescriptor" -> { rank=none; "TechTalk.SpecFlow.Infrastructure.PluginType" }
   "TechTalk.SpecFlow.Infrastructure.RuntimePluginLoader" -> { rank=none; "TechTalk.SpecFlow.Infrastructure.IRuntimePlugin"; "TechTalk.SpecFlow.Infrastructure.IRuntimePluginLoader"; "TechTalk.SpecFlow.Infrastructure.PluginDescriptor"; "TechTalk.SpecFlow.Infrastructure.RuntimePluginAttribute"; "TechTalk.SpecFlow.SpecFlowException" }
   "TechTalk.SpecFlow.Infrastructure.StepDefinitionMatchService" -> { rank=none; "TechTalk.SpecFlow.Bindings.BindingMatch"; "TechTalk.SpecFlow.Bindings.IBinding"; "TechTalk.SpecFlow.Bindings.IBindingRegistry"; "TechTalk.SpecFlow.Bindings.IStepArgumentTypeConverter"; "TechTalk.SpecFlow.Bindings.IStepDefinitionBinding"; "TechTalk.SpecFlow.Bindings.Reflection.BindingReflectionExtensions"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingMethod"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingParameter"; "TechTalk.SpecFlow.Bindings.StepInstance"; "TechTalk.SpecFlow.Infrastructure.IStepDefinitionMatchService" }
   "TechTalk.SpecFlow.Infrastructure.StepFailureEventArgs" -> { rank=none; "TechTalk.SpecFlow.Bindings.IStepDefinitionBinding"; "TechTalk.SpecFlow.Bindings.StepContext" }
   "TechTalk.SpecFlow.Infrastructure.TestExecutionEngine" -> { rank=none; "TechTalk.SpecFlow.BindingException"; "TechTalk.SpecFlow.BindingSkeletons.IStepDefinitionSkeletonProvider"; "TechTalk.SpecFlow.Bindings.BindingInvokerExtensions"; "TechTalk.SpecFlow.Bindings.BindingMatch"; "TechTalk.SpecFlow.Bindings.BindingScope"; "TechTalk.SpecFlow.Bindings.BindingTypeHelper"; "TechTalk.SpecFlow.Bindings.Discovery.IRuntimeBindingRegistryBuilder"; "TechTalk.SpecFlow.Bindings.IBinding"; "TechTalk.SpecFlow.Bindings.IBindingInvoker"; "TechTalk.SpecFlow.Bindings.IBindingRegistry"; "TechTalk.SpecFlow.Bindings.IHookBinding"; "TechTalk.SpecFlow.Bindings.IScopedBinding"; "TechTalk.SpecFlow.Bindings.IStepArgumentTypeConverter"; "TechTalk.SpecFlow.Bindings.Reflection.BindingReflectionExtensions"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingMethod"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingParameter"; "TechTalk.SpecFlow.Bindings.StepDefinitionKeyword"; "TechTalk.SpecFlow.Bindings.StepInstance"; "TechTalk.SpecFlow.Compatibility.ExceptionHelper"; "TechTalk.SpecFlow.Configuration.RuntimeConfiguration"; "TechTalk.SpecFlow.ErrorHandling.IErrorProvider"; "TechTalk.SpecFlow.FeatureContext"; "TechTalk.SpecFlow.FeatureInfo"; "TechTalk.SpecFlow.Infrastructure.ContextManagerExtensions"; "TechTalk.SpecFlow.Infrastructure.IContextManager"; "TechTalk.SpecFlow.Infrastructure.IStepDefinitionMatchService"; "TechTalk.SpecFlow.Infrastructure.IStepErrorHandler"; "TechTalk.SpecFlow.Infrastructure.ITestExecutionEngine"; "TechTalk.SpecFlow.Infrastructure.StepDefinitionAmbiguityReason"; "TechTalk.SpecFlow.Infrastructure.StepFailureEventArgs"; "TechTalk.SpecFlow.ProgrammingLanguage"; "TechTalk.SpecFlow.ScenarioContext"; "TechTalk.SpecFlow.ScenarioInfo"; "TechTalk.SpecFlow.Table"; "TechTalk.SpecFlow.Tracing.IStepFormatter"; "TechTalk.SpecFlow.Tracing.ITestTracer"; "TechTalk.SpecFlow.UnitTestProvider.IUnitTestRuntimeProvider" }
   "TechTalk.SpecFlow.Infrastructure.TestRunContainerBuilder" -> { rank=none; "BoDi.ObjectContainer"; "TechTalk.SpecFlow.Configuration.IRuntimeConfigurationProvider"; "TechTalk.SpecFlow.Infrastructure.DefaultDependencyProvider"; "TechTalk.SpecFlow.Infrastructure.IRuntimePlugin"; "TechTalk.SpecFlow.Infrastructure.IRuntimePluginLoader"; "TechTalk.SpecFlow.Infrastructure.PluginDescriptor" }
   "TechTalk.SpecFlow.Infrastructure.TestRunnerFactory" -> { rank=none; "BoDi.IObjectContainer"; "TechTalk.SpecFlow.Configuration.RuntimeConfiguration"; "TechTalk.SpecFlow.ITestRunner"; "TechTalk.SpecFlow.Infrastructure.IBindingAssemblyLoader" }
   "TechTalk.SpecFlow.MissingStepDefinitionException" -> { rank=none; "TechTalk.SpecFlow.SpecFlowException" }
   "TechTalk.SpecFlow.PendingStepException" -> { rank=none; "TechTalk.SpecFlow.SpecFlowException" }
   "TechTalk.SpecFlow.ScenarioContext" -> { rank=none; "BoDi.IObjectContainer"; "BoDi.ObjectContainer"; "TechTalk.SpecFlow.Bindings.StepInstance"; "TechTalk.SpecFlow.ITestRunner"; "TechTalk.SpecFlow.Infrastructure.TestStatus"; "TechTalk.SpecFlow.ScenarioBlock"; "TechTalk.SpecFlow.ScenarioInfo"; "TechTalk.SpecFlow.SpecFlowContext" }
   "TechTalk.SpecFlow.StepDefinitionAttribute" -> { rank=none; "TechTalk.SpecFlow.Bindings.StepDefinitionType"; "TechTalk.SpecFlow.StepDefinitionBaseAttribute" }
   "TechTalk.SpecFlow.StepDefinitionBaseAttribute" -> { rank=none; "TechTalk.SpecFlow.Bindings.StepDefinitionType" }
   "TechTalk.SpecFlow.StepScopeAttribute" -> { rank=none; "TechTalk.SpecFlow.ScopeAttribute" }
   "TechTalk.SpecFlow.Steps" -> { rank=none; "TechTalk.SpecFlow.ITestRunner"; "TechTalk.SpecFlow.ScenarioContext"; "TechTalk.SpecFlow.Table" }
   "TechTalk.SpecFlow.Table" -> { rank=none; "TechTalk.SpecFlow.TableRow"; "TechTalk.SpecFlow.TableRows" }
   "TechTalk.SpecFlow.TableRow" -> { rank=none; "TechTalk.SpecFlow.SpecFlowException"; "TechTalk.SpecFlow.Table" }
   "TechTalk.SpecFlow.TableRows" -> { rank=none; "TechTalk.SpecFlow.TableRow" }
   "TechTalk.SpecFlow.TestRunner" -> { rank=none; "TechTalk.SpecFlow.FeatureContext"; "TechTalk.SpecFlow.FeatureInfo"; "TechTalk.SpecFlow.ITestRunner"; "TechTalk.SpecFlow.Infrastructure.ITestExecutionEngine"; "TechTalk.SpecFlow.ScenarioContext"; "TechTalk.SpecFlow.ScenarioInfo"; "TechTalk.SpecFlow.Table" }
   "TechTalk.SpecFlow.TestRunnerDefaultArguments" -> { rank=none; "TechTalk.SpecFlow.ITestRunner" }
   "TechTalk.SpecFlow.TestRunnerManager" -> { rank=none; "BoDi.IObjectContainer"; "TechTalk.SpecFlow.ITestRunner"; "TechTalk.SpecFlow.ITestRunnerManager"; "TechTalk.SpecFlow.Infrastructure.ITestRunnerFactory"; "TechTalk.SpecFlow.Infrastructure.TestRunContainerBuilder" }
   "TechTalk.SpecFlow.ThenAttribute" -> { rank=none; "TechTalk.SpecFlow.StepDefinitionBaseAttribute" }
   "TechTalk.SpecFlow.Tracing.DefaultListener" -> { rank=none; "TechTalk.SpecFlow.Tracing.ITraceListener" }
   "TechTalk.SpecFlow.Tracing.IStepFormatter" -> { rank=none; "TechTalk.SpecFlow.Bindings.BindingMatch"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingMethod"; "TechTalk.SpecFlow.Bindings.StepInstance" }
   "TechTalk.SpecFlow.Tracing.ITestTracer" -> { rank=none; "TechTalk.SpecFlow.BindingException"; "TechTalk.SpecFlow.Bindings.BindingMatch"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingMethod"; "TechTalk.SpecFlow.Bindings.StepInstance"; "TechTalk.SpecFlow.ProgrammingLanguage" }
   "TechTalk.SpecFlow.Tracing.LanguageHelper" -> { rank=none; "TechTalk.SpecFlow.Bindings.BindingTypeHelper"; "TechTalk.SpecFlow.Bindings.StepDefinitionKeyword"; "TechTalk.SpecFlow.Compatibility.CultureInfoHelper"; "TechTalk.SpecFlow.Compatibility.EnumHelper"; "TechTalk.SpecFlow.SpecFlowException" }
   "TechTalk.SpecFlow.Tracing.NullListener" -> { rank=none; "TechTalk.SpecFlow.Tracing.ITraceListener" }
   "TechTalk.SpecFlow.Tracing.StepFormatter" -> { rank=none; "TechTalk.SpecFlow.Bindings.BindingMatch"; "TechTalk.SpecFlow.Bindings.IBinding"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingMethod"; "TechTalk.SpecFlow.Bindings.Reflection.IBindingType"; "TechTalk.SpecFlow.Bindings.StepContext"; "TechTalk.SpecFlow.Bindings.StepDefinitionType"; "TechTalk.SpecFlow.Bindings.StepInstance"; "TechTalk.SpecFlow.Table"; "TechTalk.SpecFlow.Tracing.CodeFormattingExtensions"; "TechTalk.SpecFlow.Tracing.LanguageHelper" }
   "TechTalk.SpecFlow.Tracing.TestTracer" -> { rank=none; "TechTalk.SpecFlow.BindingSkeletons.IStepDefinitionSkeletonProvider"; "TechTalk.SpecFlow.Configuration.RuntimeConfiguration"; "TechTalk.SpecFlow.Tracing.IStepFormatter"; "TechTalk.SpecFlow.Tracing.ITraceListener"; "TechTalk.SpecFlow.Tracing.TraceListenerHelper" }
   "TechTalk.SpecFlow.Tracing.TraceListenerHelper" -> { rank=none; "TechTalk.SpecFlow.Tracing.ITraceListener" }
   "TechTalk.SpecFlow.UnitTestProvider.MbUnit3RuntimeProvider" -> { rank=none; "TechTalk.SpecFlow.UnitTestProvider.MbUnitRuntimeProvider" }
   "TechTalk.SpecFlow.UnitTestProvider.MbUnitRuntimeProvider" -> { rank=none; "TechTalk.SpecFlow.UnitTestProvider.IUnitTestRuntimeProvider"; "TechTalk.SpecFlow.UnitTestProvider.UnitTestRuntimeProviderHelper" }
   "TechTalk.SpecFlow.UnitTestProvider.MsTest2010RuntimeProvider" -> { rank=none; "TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider" }
   "TechTalk.SpecFlow.UnitTestProvider.MsTestRuntimeProvider" -> { rank=none; "TechTalk.SpecFlow.UnitTestProvider.IUnitTestRuntimeProvider"; "TechTalk.SpecFlow.UnitTestProvider.UnitTestRuntimeProviderHelper" }
   "TechTalk.SpecFlow.UnitTestProvider.NUnitRuntimeProvider" -> { rank=none; "TechTalk.SpecFlow.UnitTestProvider.IUnitTestRuntimeProvider"; "TechTalk.SpecFlow.UnitTestProvider.UnitTestRuntimeProviderHelper" }
   "TechTalk.SpecFlow.UnitTestProvider.UnitTestRuntimeProviderHelper" -> { rank=none; "TechTalk.SpecFlow.SpecFlowException" }
   "TechTalk.SpecFlow.UnitTestProvider.XUnitRuntimeProvider" -> { rank=none; "TechTalk.SpecFlow.SpecFlowException"; "TechTalk.SpecFlow.UnitTestProvider.IUnitTestRuntimeProvider" }
   "TechTalk.SpecFlow.WhenAttribute" -> { rank=none; "TechTalk.SpecFlow.StepDefinitionBaseAttribute" }
   }
